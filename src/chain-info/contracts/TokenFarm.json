{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_simbaTokenAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "addAllowedToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fetchAllowedTokens",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getTokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "getUserSingleTokenUsdValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_user",
          "type": "address"
        }
      ],
      "name": "getUserTotalValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "issueTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "newStakers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        }
      ],
      "name": "setPriceFeedContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "simbaToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "stakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakers",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakingBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "tokenIsAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "tokenPriceFeedMapping",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "uniqueTokensStaked",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "unstakeTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "0": "/Users/ikhide/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
    "1": "/Users/ikhide/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
    "2": "/Users/ikhide/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/utils/Context.sol",
    "3": "/Users/ikhide/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
    "4": "contracts/TokenFarm.sol"
  },
  "ast": {
    "absolutePath": "contracts/TokenFarm.sol",
    "exportedSymbols": {
      "AggregatorV3Interface": [
        782
      ],
      "Context": [
        803
      ],
      "IERC20": [
        736
      ],
      "Ownable": [
        658
      ],
      "TokenFarm": [
        554
      ]
    },
    "id": 555,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:4"
      },
      {
        "absolutePath": "/Users/ikhide/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 555,
        "sourceUnit": 659,
        "src": "56:52:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ikhide/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.2.0/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 555,
        "sourceUnit": 737,
        "src": "109:56:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/ikhide/.brownie/packages/smartcontractkit/chainlink-brownie-contracts@0.2.2/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "file": "@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 555,
        "sourceUnit": 783,
        "src": "166:76:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 5,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 658,
              "src": "267:7:4"
            },
            "id": 6,
            "nodeType": "InheritanceSpecifier",
            "src": "267:7:4"
          }
        ],
        "canonicalName": "TokenFarm",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 554,
        "linearizedBaseContracts": [
          554,
          658,
          803
        ],
        "name": "TokenFarm",
        "nameLocation": "254:9:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "29161a00",
            "id": 12,
            "mutability": "mutable",
            "name": "stakingBalance",
            "nameLocation": "336:14:4",
            "nodeType": "VariableDeclaration",
            "scope": 554,
            "src": "281:69:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 11,
              "keyType": {
                "id": 7,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "289:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "281:47:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 10,
                "keyType": {
                  "id": 8,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "308:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "300:27:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 9,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "319:7:4",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b83e0234",
            "id": 16,
            "mutability": "mutable",
            "name": "uniqueTokensStaked",
            "nameLocation": "453:18:4",
            "nodeType": "VariableDeclaration",
            "scope": 554,
            "src": "418:53:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 15,
              "keyType": {
                "id": 13,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "426:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "418:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 14,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "437:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "27927b3e",
            "id": 20,
            "mutability": "mutable",
            "name": "tokenPriceFeedMapping",
            "nameLocation": "512:21:4",
            "nodeType": "VariableDeclaration",
            "scope": 554,
            "src": "477:56:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
              "typeString": "mapping(address => address)"
            },
            "typeName": {
              "id": 19,
              "keyType": {
                "id": 17,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "485:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "477:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                "typeString": "mapping(address => address)"
              },
              "valueType": {
                "id": 18,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "496:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 23,
            "mutability": "mutable",
            "name": "allowedTokens",
            "nameLocation": "550:13:4",
            "nodeType": "VariableDeclaration",
            "scope": 554,
            "src": "539:24:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 21,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "539:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 22,
              "nodeType": "ArrayTypeName",
              "src": "539:10:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 26,
            "mutability": "mutable",
            "name": "emptyArray",
            "nameLocation": "580:10:4",
            "nodeType": "VariableDeclaration",
            "scope": 554,
            "src": "569:21:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 24,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "569:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 25,
              "nodeType": "ArrayTypeName",
              "src": "569:10:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "fd5e6dd1",
            "id": 29,
            "mutability": "mutable",
            "name": "stakers",
            "nameLocation": "614:7:4",
            "nodeType": "VariableDeclaration",
            "scope": 554,
            "src": "596:25:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 27,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "596:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 28,
              "nodeType": "ArrayTypeName",
              "src": "596:10:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "597f3894",
            "id": 32,
            "mutability": "mutable",
            "name": "newStakers",
            "nameLocation": "645:10:4",
            "nodeType": "VariableDeclaration",
            "scope": 554,
            "src": "627:28:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 30,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "627:7:4",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 31,
              "nodeType": "ArrayTypeName",
              "src": "627:10:4",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "184d411e",
            "id": 35,
            "mutability": "mutable",
            "name": "simbaToken",
            "nameLocation": "675:10:4",
            "nodeType": "VariableDeclaration",
            "scope": 554,
            "src": "661:24:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$736",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 34,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 33,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 736,
                "src": "661:6:4"
              },
              "referencedDeclaration": 736,
              "src": "661:6:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$736",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 46,
              "nodeType": "Block",
              "src": "857:83:4",
              "statements": [
                {
                  "expression": {
                    "id": 44,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40,
                      "name": "simbaToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35,
                      "src": "867:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$736",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 42,
                          "name": "_simbaTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "887:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 41,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 736,
                        "src": "880:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$736_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 43,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "880:26:4",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$736",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "867:39:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$736",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 45,
                  "nodeType": "ExpressionStatement",
                  "src": "867:39:4"
                }
              ]
            },
            "id": 47,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37,
                  "mutability": "mutable",
                  "name": "_simbaTokenAddress",
                  "nameLocation": "837:18:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 47,
                  "src": "829:26:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "829:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "828:28:4"
            },
            "returnParameters": {
              "id": 39,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "857:0:4"
            },
            "scope": 554,
            "src": "817:123:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 111,
              "nodeType": "Block",
              "src": "1028:719:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 57,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 55,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49,
                          "src": "1119:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 56,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1128:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1119:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206d757374206265206d6f7265207468616e207a65726f",
                        "id": 58,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1130:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_14244f1bf6c160f47624a57d3360ce09d9f3799475ccf7eae6180cea6ffce819",
                          "typeString": "literal_string \"Amount must be more than zero\""
                        },
                        "value": "Amount must be more than zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_14244f1bf6c160f47624a57d3360ce09d9f3799475ccf7eae6180cea6ffce819",
                          "typeString": "literal_string \"Amount must be more than zero\""
                        }
                      ],
                      "id": 54,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1111:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 59,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1111:51:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60,
                  "nodeType": "ExpressionStatement",
                  "src": "1111:51:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 63,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "1195:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 62,
                          "name": "tokenIsAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 377,
                          "src": "1180:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) returns (bool)"
                          }
                        },
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1180:22:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e206973206e6f7420616c6c6f776564",
                        "id": 65,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1203:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_33d830082acd289c37bd90c9d9a3e6d2c0f8f7fda223fa1a3fa0d09811e54fcd",
                          "typeString": "literal_string \"Token is not allowed\""
                        },
                        "value": "Token is not allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_33d830082acd289c37bd90c9d9a3e6d2c0f8f7fda223fa1a3fa0d09811e54fcd",
                          "typeString": "literal_string \"Token is not allowed\""
                        }
                      ],
                      "id": 61,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1172:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1172:54:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67,
                  "nodeType": "ExpressionStatement",
                  "src": "1172:54:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 72,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1383:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 73,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1383:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 76,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1403:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenFarm_$554",
                              "typeString": "contract TokenFarm"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenFarm_$554",
                              "typeString": "contract TokenFarm"
                            }
                          ],
                          "id": 75,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1395:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 74,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1395:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 77,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1395:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 78,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49,
                        "src": "1410:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 69,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 51,
                            "src": "1362:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 68,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 736,
                          "src": "1355:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$736_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 70,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1355:14:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$736",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 71,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 717,
                      "src": "1355:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 79,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1355:63:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80,
                  "nodeType": "ExpressionStatement",
                  "src": "1355:63:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 82,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1475:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 83,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1475:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 84,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 51,
                        "src": "1487:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 81,
                      "name": "addUniqueTokensStaked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 278,
                      "src": "1453:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1453:41:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "1453:41:4"
                },
                {
                  "expression": {
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 87,
                          "name": "stakingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "1536:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 91,
                        "indexExpression": {
                          "id": 88,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 51,
                          "src": "1551:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1536:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 92,
                      "indexExpression": {
                        "expression": {
                          "id": 89,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1559:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1559:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1536:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 93,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49,
                      "src": "1574:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1536:45:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "1536:45:4"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 96,
                        "name": "uniqueTokensStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "1656:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 99,
                      "indexExpression": {
                        "expression": {
                          "id": 97,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1675:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 98,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1675:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "1656:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 100,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1690:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1656:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 110,
                  "nodeType": "IfStatement",
                  "src": "1653:88:4",
                  "trueBody": {
                    "id": 109,
                    "nodeType": "Block",
                    "src": "1692:49:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 105,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1719:3:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1719:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 102,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "1706:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 104,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1706:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer,address)"
                            }
                          },
                          "id": 107,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1706:24:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 108,
                        "nodeType": "ExpressionStatement",
                        "src": "1706:24:4"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "0bea440d",
            "id": 112,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakeTokens",
            "nameLocation": "976:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 52,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 49,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "996:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "988:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 48,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "988:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 51,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1013:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 112,
                  "src": "1005:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1005:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "987:33:4"
            },
            "returnParameters": {
              "id": 53,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1028:0:4"
            },
            "scope": 554,
            "src": "967:780:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 143,
              "nodeType": "Block",
              "src": "1810:215:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 120,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 114,
                          "src": "1865:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 123,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1883:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 122,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1875:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 121,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1875:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1875:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1865:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e206d75737420626520612076616c69642061646472657373",
                        "id": 126,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1886:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1503293e2bc4b6c531f299fd5cc32e13c1388abf9d19798041629a54d3da0686",
                          "typeString": "literal_string \"Token must be a valid address\""
                        },
                        "value": "Token must be a valid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1503293e2bc4b6c531f299fd5cc32e13c1388abf9d19798041629a54d3da0686",
                          "typeString": "literal_string \"Token must be a valid address\""
                        }
                      ],
                      "id": 119,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1857:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 127,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1857:61:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 128,
                  "nodeType": "ExpressionStatement",
                  "src": "1857:61:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1936:23:4",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 131,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 114,
                              "src": "1952:6:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 130,
                            "name": "tokenIsAllowed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 377,
                            "src": "1937:14:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) returns (bool)"
                            }
                          },
                          "id": 132,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1937:22:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e20616c7265616479206164646564",
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1960:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b07030750bf13b02a70fb14791777581902c169c67141a3966ae190a921be309",
                          "typeString": "literal_string \"Token already added\""
                        },
                        "value": "Token already added"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b07030750bf13b02a70fb14791777581902c169c67141a3966ae190a921be309",
                          "typeString": "literal_string \"Token already added\""
                        }
                      ],
                      "id": 129,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1928:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1928:54:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136,
                  "nodeType": "ExpressionStatement",
                  "src": "1928:54:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 140,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 114,
                        "src": "2011:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 137,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "1992:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1992:18:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1992:26:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 142,
                  "nodeType": "ExpressionStatement",
                  "src": "1992:26:4"
                }
              ]
            },
            "functionSelector": "4178617f",
            "id": 144,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 117,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 116,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 601,
                  "src": "1801:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "1801:9:4"
              }
            ],
            "name": "addAllowedToken",
            "nameLocation": "1762:15:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 115,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 114,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1786:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 144,
                  "src": "1778:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 113,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1778:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1777:16:4"
            },
            "returnParameters": {
              "id": 118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1810:0:4"
            },
            "scope": 554,
            "src": "1753:272:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 181,
              "nodeType": "Block",
              "src": "2071:429:4",
              "statements": [
                {
                  "body": {
                    "id": 179,
                    "nodeType": "Block",
                    "src": "2207:287:4",
                    "statements": [
                      {
                        "assignments": [
                          161
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 161,
                            "mutability": "mutable",
                            "name": "recipient",
                            "nameLocation": "2229:9:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 179,
                            "src": "2221:17:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 160,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2221:7:4",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 165,
                        "initialValue": {
                          "baseExpression": {
                            "id": 162,
                            "name": "stakers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 29,
                            "src": "2241:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_storage",
                              "typeString": "address[] storage ref"
                            }
                          },
                          "id": 164,
                          "indexExpression": {
                            "id": 163,
                            "name": "stakersIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 150,
                            "src": "2249:12:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2241:21:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2221:41:4"
                      },
                      {
                        "assignments": [
                          167
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 167,
                            "mutability": "mutable",
                            "name": "userTotalValue",
                            "nameLocation": "2281:14:4",
                            "nodeType": "VariableDeclaration",
                            "scope": 179,
                            "src": "2276:19:4",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 166,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "2276:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 171,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 169,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "2316:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 168,
                            "name": "getUserTotalValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 432,
                            "src": "2298:17:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view returns (uint256)"
                            }
                          },
                          "id": 170,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2298:28:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2276:50:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 175,
                              "name": "recipient",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 161,
                              "src": "2457:9:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 176,
                              "name": "userTotalValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 167,
                              "src": "2468:14:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 172,
                              "name": "simbaToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "2437:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$736",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 174,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 685,
                            "src": "2437:19:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2437:46:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 178,
                        "nodeType": "ExpressionStatement",
                        "src": "2437:46:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 153,
                      "name": "stakersIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150,
                      "src": "2162:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 154,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "2175:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2175:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2162:27:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 180,
                  "initializationExpression": {
                    "assignments": [
                      150
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 150,
                        "mutability": "mutable",
                        "name": "stakersIndex",
                        "nameLocation": "2146:12:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 180,
                        "src": "2138:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 149,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2138:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 152,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 151,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2159:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2138:22:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 158,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2191:14:4",
                      "subExpression": {
                        "id": 157,
                        "name": "stakersIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150,
                        "src": "2191:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 159,
                    "nodeType": "ExpressionStatement",
                    "src": "2191:14:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "2134:360:4"
                }
              ]
            },
            "functionSelector": "60ab5852",
            "id": 182,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 147,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 146,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 601,
                  "src": "2061:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "2061:9:4"
              }
            ],
            "name": "issueTokens",
            "nameLocation": "2040:11:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2051:2:4"
            },
            "returnParameters": {
              "id": 148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2071:0:4"
            },
            "scope": 554,
            "src": "2031:469:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 240,
              "nodeType": "Block",
              "src": "2553:613:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 189,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 184,
                            "src": "2622:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 188,
                          "name": "tokenIsAllowed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 377,
                          "src": "2607:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) returns (bool)"
                          }
                        },
                        "id": 190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2607:22:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e206973206e6f7420616c6c6f776564",
                        "id": 191,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2630:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_33d830082acd289c37bd90c9d9a3e6d2c0f8f7fda223fa1a3fa0d09811e54fcd",
                          "typeString": "literal_string \"Token is not allowed\""
                        },
                        "value": "Token is not allowed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_33d830082acd289c37bd90c9d9a3e6d2c0f8f7fda223fa1a3fa0d09811e54fcd",
                          "typeString": "literal_string \"Token is not allowed\""
                        }
                      ],
                      "id": 187,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2599:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2599:54:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 193,
                  "nodeType": "ExpressionStatement",
                  "src": "2599:54:4"
                },
                {
                  "assignments": [
                    195
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 195,
                      "mutability": "mutable",
                      "name": "amountStaked",
                      "nameLocation": "2699:12:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 240,
                      "src": "2691:20:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 194,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2691:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 202,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 196,
                        "name": "stakingBalance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "2714:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(address => uint256))"
                        }
                      },
                      "id": 198,
                      "indexExpression": {
                        "id": 197,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 184,
                        "src": "2729:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "2714:22:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 201,
                    "indexExpression": {
                      "expression": {
                        "id": 199,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "2737:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 200,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2737:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2714:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2691:57:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 206,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 204,
                          "name": "amountStaked",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 195,
                          "src": "2801:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2816:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2801:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e206973206e6f74207374616b6564",
                        "id": 207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2818:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f50df4f60f747c4661a10e6b9af70e693187d012ff6865b7844de8c050a33951",
                          "typeString": "literal_string \"Token is not staked\""
                        },
                        "value": "Token is not staked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f50df4f60f747c4661a10e6b9af70e693187d012ff6865b7844de8c050a33951",
                          "typeString": "literal_string \"Token is not staked\""
                        }
                      ],
                      "id": 203,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2793:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2793:47:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 209,
                  "nodeType": "ExpressionStatement",
                  "src": "2793:47:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 214,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2899:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2899:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 216,
                        "name": "amountStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 195,
                        "src": "2911:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 211,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 184,
                            "src": "2882:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 210,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 736,
                          "src": "2875:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$736_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 212,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2875:14:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$736",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 213,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 685,
                      "src": "2875:23:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2875:49:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 218,
                  "nodeType": "ExpressionStatement",
                  "src": "2875:49:4"
                },
                {
                  "expression": {
                    "id": 226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 219,
                          "name": "stakingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "2971:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 223,
                        "indexExpression": {
                          "id": 220,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 184,
                          "src": "2986:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2971:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 224,
                      "indexExpression": {
                        "expression": {
                          "id": 221,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2994:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2994:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2971:34:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 225,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3008:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2971:38:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 227,
                  "nodeType": "ExpressionStatement",
                  "src": "2971:38:4"
                },
                {
                  "expression": {
                    "id": 233,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 228,
                        "name": "uniqueTokensStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "3060:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 231,
                      "indexExpression": {
                        "expression": {
                          "id": 229,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3079:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3079:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3060:30:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 232,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3094:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3060:35:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 234,
                  "nodeType": "ExpressionStatement",
                  "src": "3060:35:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 236,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3148:3:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3148:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 235,
                      "name": "removeStaker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 345,
                      "src": "3135:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 238,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3135:24:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 239,
                  "nodeType": "ExpressionStatement",
                  "src": "3135:24:4"
                }
              ]
            },
            "functionSelector": "2d1ad8b8",
            "id": 241,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unstakeTokens",
            "nameLocation": "2515:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 184,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2537:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 241,
                  "src": "2529:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 183,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2529:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2528:16:4"
            },
            "returnParameters": {
              "id": 186,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2553:0:4"
            },
            "scope": 554,
            "src": "2506:660:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 250,
              "nodeType": "Block",
              "src": "3240:39:4",
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "id": 247,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "3258:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      }
                    ],
                    "id": 248,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3257:15:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 246,
                  "id": 249,
                  "nodeType": "Return",
                  "src": "3250:22:4"
                }
              ]
            },
            "functionSelector": "ee0b12d2",
            "id": 251,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "fetchAllowedTokens",
            "nameLocation": "3181:18:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 242,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3199:2:4"
            },
            "returnParameters": {
              "id": 246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 245,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 251,
                  "src": "3223:16:4",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 243,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "3223:7:4",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 244,
                    "nodeType": "ArrayTypeName",
                    "src": "3223:9:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3222:18:4"
            },
            "scope": 554,
            "src": "3172:107:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 277,
              "nodeType": "Block",
              "src": "3384:136:4",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 258,
                          "name": "stakingBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12,
                          "src": "3397:14:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 260,
                        "indexExpression": {
                          "id": 259,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 255,
                          "src": "3412:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3397:22:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 262,
                      "indexExpression": {
                        "id": 261,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 253,
                        "src": "3420:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3397:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 263,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3430:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3397:34:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 276,
                  "nodeType": "IfStatement",
                  "src": "3394:120:4",
                  "trueBody": {
                    "id": 275,
                    "nodeType": "Block",
                    "src": "3432:82:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 273,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 265,
                              "name": "uniqueTokensStaked",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "3446:18:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 267,
                            "indexExpression": {
                              "id": 266,
                              "name": "_user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 253,
                              "src": "3465:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "3446:25:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 268,
                                "name": "uniqueTokensStaked",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16,
                                "src": "3474:18:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 270,
                              "indexExpression": {
                                "id": 269,
                                "name": "_user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 253,
                                "src": "3493:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3474:25:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 271,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3502:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "3474:29:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3446:57:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 274,
                        "nodeType": "ExpressionStatement",
                        "src": "3446:57:4"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 278,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addUniqueTokensStaked",
            "nameLocation": "3323:21:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 256,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 253,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "3353:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "3345:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 252,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3345:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 255,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "3368:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 278,
                  "src": "3360:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3360:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3344:31:4"
            },
            "returnParameters": {
              "id": 257,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3384:0:4"
            },
            "scope": 554,
            "src": "3314:206:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 344,
              "nodeType": "Block",
              "src": "3572:682:4",
              "statements": [
                {
                  "body": {
                    "id": 306,
                    "nodeType": "Block",
                    "src": "3714:119:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 302,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 294,
                                "name": "stakingBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12,
                                "src": "3731:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 298,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 295,
                                  "name": "allowedTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23,
                                  "src": "3746:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 297,
                                "indexExpression": {
                                  "id": 296,
                                  "name": "tokenIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 284,
                                  "src": "3760:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "3746:25:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3731:41:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 300,
                            "indexExpression": {
                              "id": 299,
                              "name": "_user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 280,
                              "src": "3773:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3731:48:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3782:1:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3731:52:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 305,
                        "nodeType": "IfStatement",
                        "src": "3728:95:4",
                        "trueBody": {
                          "id": 304,
                          "nodeType": "Block",
                          "src": "3784:39:4",
                          "statements": [
                            {
                              "functionReturnParameters": 282,
                              "id": 303,
                              "nodeType": "Return",
                              "src": "3802:7:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 287,
                      "name": "tokenIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 284,
                      "src": "3668:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 288,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "3679:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3679:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3668:31:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 307,
                  "initializationExpression": {
                    "assignments": [
                      284
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 284,
                        "mutability": "mutable",
                        "name": "tokenIndex",
                        "nameLocation": "3654:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 307,
                        "src": "3646:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 283,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3646:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 286,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3665:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3646:20:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3701:12:4",
                      "subExpression": {
                        "id": 291,
                        "name": "tokenIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 284,
                        "src": "3701:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 293,
                    "nodeType": "ExpressionStatement",
                    "src": "3701:12:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "3642:191:4"
                },
                {
                  "body": {
                    "id": 334,
                    "nodeType": "Block",
                    "src": "4030:127:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 323,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 319,
                              "name": "stakers",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 29,
                              "src": "4047:7:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 321,
                            "indexExpression": {
                              "id": 320,
                              "name": "stakerIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 309,
                              "src": "4055:11:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4047:20:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "id": 322,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 280,
                            "src": "4071:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4047:29:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 333,
                        "nodeType": "IfStatement",
                        "src": "4044:103:4",
                        "trueBody": {
                          "id": 332,
                          "nodeType": "Block",
                          "src": "4077:70:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 327,
                                      "name": "stakers",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 29,
                                      "src": "4111:7:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 329,
                                    "indexExpression": {
                                      "id": 328,
                                      "name": "stakerIndex",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 309,
                                      "src": "4119:11:4",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4111:20:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "expression": {
                                    "id": 324,
                                    "name": "newStakers",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 32,
                                    "src": "4095:10:4",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                      "typeString": "address[] storage ref"
                                    }
                                  },
                                  "id": 326,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "4095:15:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                                    "typeString": "function (address[] storage pointer,address)"
                                  }
                                },
                                "id": 330,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4095:37:4",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 331,
                              "nodeType": "ExpressionStatement",
                              "src": "4095:37:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 312,
                      "name": "stakerIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 309,
                      "src": "3988:11:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 313,
                        "name": "stakers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "4000:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 314,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4000:14:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3988:26:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 335,
                  "initializationExpression": {
                    "assignments": [
                      309
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 309,
                        "mutability": "mutable",
                        "name": "stakerIndex",
                        "nameLocation": "3973:11:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 335,
                        "src": "3965:19:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 308,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3965:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 311,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 310,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3985:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3965:21:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4016:13:4",
                      "subExpression": {
                        "id": 316,
                        "name": "stakerIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 309,
                        "src": "4016:11:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 318,
                    "nodeType": "ExpressionStatement",
                    "src": "4016:13:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "3961:196:4"
                },
                {
                  "expression": {
                    "id": 338,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 336,
                      "name": "stakers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "4166:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 337,
                      "name": "newStakers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "4176:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "src": "4166:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 339,
                  "nodeType": "ExpressionStatement",
                  "src": "4166:20:4"
                },
                {
                  "expression": {
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 340,
                      "name": "newStakers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "4224:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 341,
                      "name": "emptyArray",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "4237:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "src": "4224:23:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "id": 343,
                  "nodeType": "ExpressionStatement",
                  "src": "4224:23:4"
                }
              ]
            },
            "id": 345,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeStaker",
            "nameLocation": "3535:12:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 280,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "3556:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 345,
                  "src": "3548:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 279,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3548:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3547:15:4"
            },
            "returnParameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3572:0:4"
            },
            "scope": 554,
            "src": "3526:728:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 376,
              "nodeType": "Block",
              "src": "4320:218:4",
              "statements": [
                {
                  "body": {
                    "id": 372,
                    "nodeType": "Block",
                    "src": "4403:107:4",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 367,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 363,
                              "name": "allowedTokens",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 23,
                              "src": "4420:13:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 365,
                            "indexExpression": {
                              "id": 364,
                              "name": "tokenIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 353,
                              "src": "4434:10:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4420:25:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 366,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 347,
                            "src": "4449:6:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4420:35:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 371,
                        "nodeType": "IfStatement",
                        "src": "4417:83:4",
                        "trueBody": {
                          "id": 370,
                          "nodeType": "Block",
                          "src": "4456:44:4",
                          "statements": [
                            {
                              "expression": {
                                "hexValue": "74727565",
                                "id": 368,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4481:4:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "functionReturnParameters": 351,
                              "id": 369,
                              "nodeType": "Return",
                              "src": "4474:11:4"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 359,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 356,
                      "name": "tokenIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 353,
                      "src": "4357:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 357,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "4368:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 358,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4368:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4357:31:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 373,
                  "initializationExpression": {
                    "assignments": [
                      353
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 353,
                        "mutability": "mutable",
                        "name": "tokenIndex",
                        "nameLocation": "4343:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 373,
                        "src": "4335:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 352,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4335:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 355,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 354,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4354:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4335:20:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4390:12:4",
                      "subExpression": {
                        "id": 360,
                        "name": "tokenIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 353,
                        "src": "4390:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 362,
                    "nodeType": "ExpressionStatement",
                    "src": "4390:12:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "4330:180:4"
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 374,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4526:5:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 351,
                  "id": 375,
                  "nodeType": "Return",
                  "src": "4519:12:4"
                }
              ]
            },
            "functionSelector": "dd5b8467",
            "id": 377,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenIsAllowed",
            "nameLocation": "4269:14:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 347,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "4292:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 377,
                  "src": "4284:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 346,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4284:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4283:16:4"
            },
            "returnParameters": {
              "id": 351,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 350,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 377,
                  "src": "4315:4:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 349,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4315:4:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4314:6:4"
            },
            "scope": 554,
            "src": "4260:278:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 431,
              "nodeType": "Block",
              "src": "4614:391:4",
              "statements": [
                {
                  "assignments": [
                    385
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 385,
                      "mutability": "mutable",
                      "name": "totalValue",
                      "nameLocation": "4632:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 431,
                      "src": "4624:18:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 384,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4624:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 387,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4645:1:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4624:22:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 389,
                          "name": "_user",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 379,
                          "src": "4664:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 392,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4681:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4673:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 390,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4673:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4673:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4664:19:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "55736572206d75737420626520612076616c69642061646472657373",
                        "id": 395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4684:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_fcbb7b20997eba31e218c873913f739d29abd6c2cc6f31dce2dfce9663d7c4dc",
                          "typeString": "literal_string \"User must be a valid address\""
                        },
                        "value": "User must be a valid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_fcbb7b20997eba31e218c873913f739d29abd6c2cc6f31dce2dfce9663d7c4dc",
                          "typeString": "literal_string \"User must be a valid address\""
                        }
                      ],
                      "id": 388,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4656:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 396,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4656:59:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 397,
                  "nodeType": "ExpressionStatement",
                  "src": "4656:59:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 403,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 399,
                            "name": "uniqueTokensStaked",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "4733:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 401,
                          "indexExpression": {
                            "id": 400,
                            "name": "_user",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 379,
                            "src": "4752:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4733:25:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4761:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4733:29:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5573657220686173206e6f20746f6b656e73207374616b6564",
                        "id": 404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4763:27:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c0932d2582d016083c9dc85e10887cc58b1dd0820597e4c85bce9be56275c5eb",
                          "typeString": "literal_string \"User has no tokens staked\""
                        },
                        "value": "User has no tokens staked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c0932d2582d016083c9dc85e10887cc58b1dd0820597e4c85bce9be56275c5eb",
                          "typeString": "literal_string \"User has no tokens staked\""
                        }
                      ],
                      "id": 398,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4725:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4725:66:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 406,
                  "nodeType": "ExpressionStatement",
                  "src": "4725:66:4"
                },
                {
                  "body": {
                    "id": 427,
                    "nodeType": "Block",
                    "src": "4873:99:4",
                    "statements": [
                      {
                        "expression": {
                          "id": 425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 418,
                            "name": "totalValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 385,
                            "src": "4887:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 420,
                                "name": "_user",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 379,
                                "src": "4928:5:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "baseExpression": {
                                  "id": 421,
                                  "name": "allowedTokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 23,
                                  "src": "4935:13:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 423,
                                "indexExpression": {
                                  "id": 422,
                                  "name": "tokenIndex",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 408,
                                  "src": "4949:10:4",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4935:25:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 419,
                              "name": "getUserSingleTokenUsdValue",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 472,
                              "src": "4901:26:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address,address) view returns (uint256)"
                              }
                            },
                            "id": 424,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4901:60:4",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4887:74:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 426,
                        "nodeType": "ExpressionStatement",
                        "src": "4887:74:4"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 411,
                      "name": "tokenIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 408,
                      "src": "4827:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 412,
                        "name": "allowedTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 23,
                        "src": "4838:13:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4838:20:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4827:31:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 428,
                  "initializationExpression": {
                    "assignments": [
                      408
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 408,
                        "mutability": "mutable",
                        "name": "tokenIndex",
                        "nameLocation": "4813:10:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 428,
                        "src": "4805:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 407,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4805:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 410,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4824:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4805:20:4"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4860:12:4",
                      "subExpression": {
                        "id": 415,
                        "name": "tokenIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 408,
                        "src": "4860:10:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 417,
                    "nodeType": "ExpressionStatement",
                    "src": "4860:12:4"
                  },
                  "nodeType": "ForStatement",
                  "src": "4801:171:4"
                },
                {
                  "expression": {
                    "id": 429,
                    "name": "totalValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 385,
                    "src": "4988:10:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 383,
                  "id": 430,
                  "nodeType": "Return",
                  "src": "4981:17:4"
                }
              ]
            },
            "functionSelector": "af3f5e22",
            "id": 432,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserTotalValue",
            "nameLocation": "4553:17:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 380,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 379,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "4579:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "4571:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 378,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4571:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4570:15:4"
            },
            "returnParameters": {
              "id": 383,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 382,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 432,
                  "src": "4606:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 381,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4606:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4605:9:4"
            },
            "scope": 554,
            "src": "4544:461:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 471,
              "nodeType": "Block",
              "src": "5115:460:4",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 445,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 441,
                        "name": "uniqueTokensStaked",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16,
                        "src": "5177:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 443,
                      "indexExpression": {
                        "id": 442,
                        "name": "_user",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 434,
                        "src": "5196:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5177:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 444,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5206:1:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5177:30:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 449,
                  "nodeType": "IfStatement",
                  "src": "5174:67:4",
                  "trueBody": {
                    "id": 448,
                    "nodeType": "Block",
                    "src": "5208:33:4",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 446,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5229:1:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 440,
                        "id": 447,
                        "nodeType": "Return",
                        "src": "5222:8:4"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    451,
                    453
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 451,
                      "mutability": "mutable",
                      "name": "tokenPrice",
                      "nameLocation": "5448:10:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 471,
                      "src": "5443:15:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 450,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5443:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 453,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "5465:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 471,
                      "src": "5460:13:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 452,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5460:4:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 457,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 455,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 436,
                        "src": "5491:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 454,
                      "name": "getTokenPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 517,
                      "src": "5477:13:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256,uint256)"
                      }
                    },
                    "id": 456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5477:21:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5441:57:4"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 458,
                            "name": "tokenPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 451,
                            "src": "5512:10:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 459,
                                "name": "stakingBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 12,
                                "src": "5525:14:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 461,
                              "indexExpression": {
                                "id": 460,
                                "name": "_token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 436,
                                "src": "5540:6:4",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5525:22:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 463,
                            "indexExpression": {
                              "id": 462,
                              "name": "_user",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 434,
                              "src": "5548:5:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5525:29:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5512:42:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 465,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5555:2:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "id": 466,
                            "name": "decimals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 453,
                            "src": "5559:8:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5555:12:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5512:55:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 469,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5511:57:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 440,
                  "id": 470,
                  "nodeType": "Return",
                  "src": "5504:64:4"
                }
              ]
            },
            "functionSelector": "54dfeb72",
            "id": 472,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getUserSingleTokenUsdValue",
            "nameLocation": "5020:26:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 434,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "5055:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 472,
                  "src": "5047:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 433,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5047:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 436,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5070:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 472,
                  "src": "5062:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 435,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5062:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5046:31:4"
            },
            "returnParameters": {
              "id": 440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 439,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 472,
                  "src": "5107:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 438,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5107:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5106:9:4"
            },
            "scope": 554,
            "src": "5011:564:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 516,
              "nodeType": "Block",
              "src": "5657:344:4",
              "statements": [
                {
                  "assignments": [
                    482
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 482,
                      "mutability": "mutable",
                      "name": "priceFeedAddress",
                      "nameLocation": "5704:16:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 516,
                      "src": "5696:24:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 481,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "5696:7:4",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 486,
                  "initialValue": {
                    "baseExpression": {
                      "id": 483,
                      "name": "tokenPriceFeedMapping",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "5723:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                        "typeString": "mapping(address => address)"
                      }
                    },
                    "id": 485,
                    "indexExpression": {
                      "id": 484,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 474,
                      "src": "5745:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5723:29:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5696:56:4"
                },
                {
                  "assignments": [
                    489
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 489,
                      "mutability": "mutable",
                      "name": "priceFeed",
                      "nameLocation": "5784:9:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 516,
                      "src": "5762:31:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AggregatorV3Interface_$782",
                        "typeString": "contract AggregatorV3Interface"
                      },
                      "typeName": {
                        "id": 488,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 487,
                          "name": "AggregatorV3Interface",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 782,
                          "src": "5762:21:4"
                        },
                        "referencedDeclaration": 782,
                        "src": "5762:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$782",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 493,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 491,
                        "name": "priceFeedAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 482,
                        "src": "5818:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 490,
                      "name": "AggregatorV3Interface",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 782,
                      "src": "5796:21:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_AggregatorV3Interface_$782_$",
                        "typeString": "type(contract AggregatorV3Interface)"
                      }
                    },
                    "id": 492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5796:39:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AggregatorV3Interface_$782",
                      "typeString": "contract AggregatorV3Interface"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5762:73:4"
                },
                {
                  "assignments": [
                    null,
                    495,
                    null,
                    null,
                    null
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 495,
                      "mutability": "mutable",
                      "name": "price",
                      "nameLocation": "5852:5:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 516,
                      "src": "5848:9:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_int256",
                        "typeString": "int256"
                      },
                      "typeName": {
                        "id": 494,
                        "name": "int",
                        "nodeType": "ElementaryTypeName",
                        "src": "5848:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_int256",
                          "typeString": "int256"
                        }
                      },
                      "visibility": "internal"
                    },
                    null,
                    null,
                    null
                  ],
                  "id": 499,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 496,
                        "name": "priceFeed",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 489,
                        "src": "5865:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AggregatorV3Interface_$782",
                          "typeString": "contract AggregatorV3Interface"
                        }
                      },
                      "id": 497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "latestRoundData",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 781,
                      "src": "5865:25:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                        "typeString": "function () view external returns (uint80,int256,uint256,uint256,uint80)"
                      }
                    },
                    "id": 498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5865:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$",
                      "typeString": "tuple(uint80,int256,uint256,uint256,uint80)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5846:46:4"
                },
                {
                  "assignments": [
                    501
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 501,
                      "mutability": "mutable",
                      "name": "decimals",
                      "nameLocation": "5911:8:4",
                      "nodeType": "VariableDeclaration",
                      "scope": 516,
                      "src": "5903:16:4",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 500,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5903:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 508,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 504,
                            "name": "priceFeed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 489,
                            "src": "5930:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AggregatorV3Interface_$782",
                              "typeString": "contract AggregatorV3Interface"
                            }
                          },
                          "id": 505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "decimals",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 743,
                          "src": "5930:18:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
                            "typeString": "function () view external returns (uint8)"
                          }
                        },
                        "id": 506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5930:20:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 503,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "5922:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 502,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5922:7:4",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5922:29:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5903:48:4"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "id": 511,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 495,
                            "src": "5977:5:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_int256",
                              "typeString": "int256"
                            }
                          ],
                          "id": 510,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5969:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_uint256_$",
                            "typeString": "type(uint256)"
                          },
                          "typeName": {
                            "id": 509,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "5969:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 512,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5969:14:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 513,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 501,
                        "src": "5984:8:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 514,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "5968:25:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 480,
                  "id": 515,
                  "nodeType": "Return",
                  "src": "5961:32:4"
                }
              ]
            },
            "functionSelector": "d02641a0",
            "id": 517,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTokenPrice",
            "nameLocation": "5590:13:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 474,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "5612:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 517,
                  "src": "5604:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 473,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5604:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5603:16:4"
            },
            "returnParameters": {
              "id": 480,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 477,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 517,
                  "src": "5640:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 476,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5640:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 479,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 517,
                  "src": "5648:7:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 478,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5648:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5639:17:4"
            },
            "scope": 554,
            "src": "5581:420:4",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 552,
              "nodeType": "Block",
              "src": "6089:210:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 527,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 519,
                          "src": "6107:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 530,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6125:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 529,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6117:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 528,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6117:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6117:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6107:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "546f6b656e206d75737420626520612076616c69642061646472657373",
                        "id": 533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6128:31:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1503293e2bc4b6c531f299fd5cc32e13c1388abf9d19798041629a54d3da0686",
                          "typeString": "literal_string \"Token must be a valid address\""
                        },
                        "value": "Token must be a valid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1503293e2bc4b6c531f299fd5cc32e13c1388abf9d19798041629a54d3da0686",
                          "typeString": "literal_string \"Token must be a valid address\""
                        }
                      ],
                      "id": 526,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6099:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6099:61:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 535,
                  "nodeType": "ExpressionStatement",
                  "src": "6099:61:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 537,
                          "name": "_priceFeed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 521,
                          "src": "6178:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 540,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6200:1:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 539,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6192:7:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 538,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6192:7:4",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6192:10:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6178:24:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726963652066656564206d75737420626520612076616c69642061646472657373",
                        "id": 543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6203:36:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c65ec7e4b8d2224b5999346afc40127a4a019a37499ca31d4bf6e26ae8f70d44",
                          "typeString": "literal_string \"Price feed must be a valid address\""
                        },
                        "value": "Price feed must be a valid address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c65ec7e4b8d2224b5999346afc40127a4a019a37499ca31d4bf6e26ae8f70d44",
                          "typeString": "literal_string \"Price feed must be a valid address\""
                        }
                      ],
                      "id": 536,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6170:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6170:70:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 545,
                  "nodeType": "ExpressionStatement",
                  "src": "6170:70:4"
                },
                {
                  "expression": {
                    "id": 550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 546,
                        "name": "tokenPriceFeedMapping",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 20,
                        "src": "6250:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 548,
                      "indexExpression": {
                        "id": 547,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 519,
                        "src": "6272:6:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6250:29:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 549,
                      "name": "_priceFeed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 521,
                      "src": "6282:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6250:42:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 551,
                  "nodeType": "ExpressionStatement",
                  "src": "6250:42:4"
                }
              ]
            },
            "functionSelector": "877dd39d",
            "id": 553,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 524,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 523,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 601,
                  "src": "6080:9:4"
                },
                "nodeType": "ModifierInvocation",
                "src": "6080:9:4"
              }
            ],
            "name": "setPriceFeedContract",
            "nameLocation": "6016:20:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 522,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 519,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "6045:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 553,
                  "src": "6037:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 518,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6037:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 521,
                  "mutability": "mutable",
                  "name": "_priceFeed",
                  "nameLocation": "6061:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 553,
                  "src": "6053:18:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 520,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6053:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6036:36:4"
            },
            "returnParameters": {
              "id": 525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6089:0:4"
            },
            "scope": 554,
            "src": "6007:292:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 555,
        "src": "245:6059:4",
        "usedErrors": []
      }
    ],
    "src": "32:6272:4"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516114e03803806114e083398101604081905261002f916100ad565b6100383361005d565b600880546001600160a01b0319166001600160a01b03929092169190911790556100dd565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156100bf57600080fd5b81516001600160a01b03811681146100d657600080fd5b9392505050565b6113f4806100ec6000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c8063715018a6116100ad578063d02641a011610071578063d02641a014610280578063dd5b8467146102a8578063ee0b12d2146102cb578063f2fde38b146102e0578063fd5e6dd1146102f357600080fd5b8063715018a614610221578063877dd39d146102295780638da5cb5b1461023c578063af3f5e221461024d578063b83e02341461026057600080fd5b80632d1ad8b8116100f45780632d1ad8b8146101cd5780634178617f146101e057806354dfeb72146101f3578063597f38941461020657806360ab58521461021957600080fd5b80630bea440d14610126578063184d411e1461013b57806327927b3e1461016b57806329161a0014610194575b600080fd5b610139610134366004611055565b610306565b005b60085461014e906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b61014e610179366004611081565b6003602052600090815260409020546001600160a01b031681565b6101bf6101a23660046110a3565b600160209081526000928352604080842090915290825290205481565b604051908152602001610162565b6101396101db366004611081565b6104c0565b6101396101ee366004611081565b610632565b6101bf6102013660046110a3565b610750565b61014e6102143660046110cd565b6107d6565b610139610800565b6101396108fd565b6101396102373660046110a3565b610933565b6000546001600160a01b031661014e565b6101bf61025b366004611081565b610a42565b6101bf61026e366004611081565b60026020526000908152604090205481565b61029361028e366004611081565b610b63565b60408051928352602083019190915201610162565b6102bb6102b6366004611081565b610c64565b6040519015158152602001610162565b6102d3610cce565b60405161016291906110e6565b6101396102ee366004611081565b610d30565b61014e6103013660046110cd565b610dc8565b6000821161035b5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d757374206265206d6f7265207468616e207a65726f00000060448201526064015b60405180910390fd5b61036481610c64565b6103a75760405162461bcd60e51b8152602060048201526014602482015273151bdad95b881a5cc81b9bdd08185b1b1bddd95960621b6044820152606401610352565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038216906323b872dd906064016020604051808303816000875af11580156103fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041e9190611133565b506104293382610dd8565b6001600160a01b03811660009081526001602090815260408083203384529091528120805484929061045c90849061116b565b909155505033600090815260026020526040902054600114156104bc57600680546001810182556000919091527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0180546001600160a01b031916331790555b5050565b6104c981610c64565b61050c5760405162461bcd60e51b8152602060048201526014602482015273151bdad95b881a5cc81b9bdd08185b1b1bddd95960621b6044820152606401610352565b6001600160a01b0381166000908152600160209081526040808320338452909152902054806105735760405162461bcd60e51b8152602060048201526013602482015272151bdad95b881a5cc81b9bdd081cdd185ad959606a1b6044820152606401610352565b60405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0383169063a9059cbb906044016020604051808303816000875af11580156105c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e49190611133565b506001600160a01b0382166000908152600160208181526040808420338552825280842084905560029091528220805491929091610623908490611183565b909155506104bc905033610e43565b6000546001600160a01b0316331461065c5760405162461bcd60e51b81526004016103529061119a565b6001600160a01b0381166106b25760405162461bcd60e51b815260206004820152601d60248201527f546f6b656e206d75737420626520612076616c696420616464726573730000006044820152606401610352565b6106bb81610c64565b156106fe5760405162461bcd60e51b8152602060048201526013602482015272151bdad95b88185b1c9958591e481859191959606a1b6044820152606401610352565b600480546001810182556000919091527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b0180546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038216600090815260026020526040812054610775575060006107d0565b60008061078184610b63565b909250905061079181600a6112b3565b6001600160a01b038086166000908152600160209081526040808320938a16835292905220546107c190846112bf565b6107cb91906112de565b925050505b92915050565b600781815481106107e657600080fd5b6000918252602090912001546001600160a01b0316905081565b6000546001600160a01b0316331461082a5760405162461bcd60e51b81526004016103529061119a565b60005b6006548110156108fa5760006006828154811061084c5761084c611300565b60009182526020822001546001600160a01b0316915061086b82610a42565b60085460405163a9059cbb60e01b81526001600160a01b0385811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af11580156108c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e49190611133565b50505080806108f290611316565b91505061082d565b50565b6000546001600160a01b031633146109275760405162461bcd60e51b81526004016103529061119a565b6109316000610f84565b565b6000546001600160a01b0316331461095d5760405162461bcd60e51b81526004016103529061119a565b6001600160a01b0382166109b35760405162461bcd60e51b815260206004820152601d60248201527f546f6b656e206d75737420626520612076616c696420616464726573730000006044820152606401610352565b6001600160a01b038116610a145760405162461bcd60e51b815260206004820152602260248201527f50726963652066656564206d75737420626520612076616c6964206164647265604482015261737360f01b6064820152608401610352565b6001600160a01b03918216600090815260036020526040902080546001600160a01b03191691909216179055565b6000806001600160a01b038316610a9b5760405162461bcd60e51b815260206004820152601c60248201527f55736572206d75737420626520612076616c69642061646472657373000000006044820152606401610352565b6001600160a01b038316600090815260026020526040902054610b005760405162461bcd60e51b815260206004820152601960248201527f5573657220686173206e6f20746f6b656e73207374616b6564000000000000006044820152606401610352565b60005b600454811015610b5c57610b3e8460048381548110610b2457610b24611300565b6000918252602090912001546001600160a01b0316610750565b610b48908361116b565b915080610b5481611316565b915050610b03565b5092915050565b6001600160a01b03808216600090815260036020526040808220548151633fabe5a360e21b815291519293849391169182918491839163feaf968c9160048082019260a0929091908290030181865afa158015610bc4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be8919061134b565b5050509150506000826001600160a01b031663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015610c2e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c52919061139b565b919760ff909216965090945050505050565b6000805b600454811015610cc557826001600160a01b031660048281548110610c8f57610c8f611300565b6000918252602090912001546001600160a01b03161415610cb35750600192915050565b80610cbd81611316565b915050610c68565b50600092915050565b60606004805480602002602001604051908101604052809291908181526020018280548015610d2657602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610d08575b5050505050905090565b6000546001600160a01b03163314610d5a5760405162461bcd60e51b81526004016103529061119a565b6001600160a01b038116610dbf5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610352565b6108fa81610f84565b600681815481106107e657600080fd5b6001600160a01b038082166000908152600160209081526040808320938616835292905220546104bc576001600160a01b038216600090815260026020526040902054610e2690600161116b565b6001600160a01b0383166000908152600260205260409020555050565b60005b600454811015610eba5760006001600060048481548110610e6957610e69611300565b60009182526020808320909101546001600160a01b03908116845283820194909452604092830182209387168252929092529020541115610ea8575050565b80610eb281611316565b915050610e46565b5060005b600654811015610f6257816001600160a01b031660068281548110610ee557610ee5611300565b6000918252602090912001546001600160a01b031614610f5057600760068281548110610f1457610f14611300565b60009182526020808320909101548354600181018555938352912090910180546001600160a01b0319166001600160a01b039092169190911790555b80610f5a81611316565b915050610ebe565b5060078054610f7391600691610fd4565b50600580546104bc91600791610fd4565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8280548282559060005260206000209081019282156110145760005260206000209182015b82811115611014578254825591600101919060010190610ff9565b50611020929150611024565b5090565b5b808211156110205760008155600101611025565b80356001600160a01b038116811461105057600080fd5b919050565b6000806040838503121561106857600080fd5b8235915061107860208401611039565b90509250929050565b60006020828403121561109357600080fd5b61109c82611039565b9392505050565b600080604083850312156110b657600080fd5b6110bf83611039565b915061107860208401611039565b6000602082840312156110df57600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156111275783516001600160a01b031683529284019291840191600101611102565b50909695505050505050565b60006020828403121561114557600080fd5b8151801515811461109c57600080fd5b634e487b7160e01b600052601160045260246000fd5b6000821982111561117e5761117e611155565b500190565b60008282101561119557611195611155565b500390565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b600181815b8085111561120a5781600019048211156111f0576111f0611155565b808516156111fd57918102915b93841c93908002906111d4565b509250929050565b600082611221575060016107d0565b8161122e575060006107d0565b8160018114611244576002811461124e5761126a565b60019150506107d0565b60ff84111561125f5761125f611155565b50506001821b6107d0565b5060208310610133831016604e8410600b841016171561128d575081810a6107d0565b61129783836111cf565b80600019048211156112ab576112ab611155565b029392505050565b600061109c8383611212565b60008160001904831182151516156112d9576112d9611155565b500290565b6000826112fb57634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052603260045260246000fd5b600060001982141561132a5761132a611155565b5060010190565b805169ffffffffffffffffffff8116811461105057600080fd5b600080600080600060a0868803121561136357600080fd5b61136c86611331565b945060208601519350604086015192506060860151915061138f60808701611331565b90509295509295909350565b6000602082840312156113ad57600080fd5b815160ff8116811461109c57600080fdfea264697066735822122004533642215cdc6751a7ec385c1a277c3033e6ec5d9d44a3484f65b0e0e35f8f64736f6c634300080b0033",
  "bytecodeSha1": "4ab75aa98fdc1bd3fad2862feb133980f916c986",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.11+commit.d7f03943"
  },
  "contractName": "TokenFarm",
  "coverageMap": {
    "branches": {
      "0": {
        "Ownable.transferOwnership": {
          "59": [
            1934,
            1956,
            true
          ]
        }
      },
      "1": {},
      "2": {},
      "3": {},
      "4": {
        "TokenFarm.addAllowedToken": {
          "51": [
            1865,
            1885,
            true
          ],
          "52": [
            1936,
            1959,
            true
          ]
        },
        "TokenFarm.getUserTotalValue": {
          "55": [
            4664,
            4683,
            true
          ]
        },
        "TokenFarm.removeStaker": {
          "57": [
            3731,
            3783,
            false
          ],
          "58": [
            4047,
            4076,
            false
          ]
        },
        "TokenFarm.setPriceFeedContract": {
          "53": [
            6107,
            6127,
            true
          ],
          "54": [
            6178,
            6202,
            true
          ]
        },
        "TokenFarm.stakeTokens": {
          "46": [
            1119,
            1129,
            true
          ],
          "47": [
            1180,
            1202,
            true
          ],
          "48": [
            1656,
            1691,
            false
          ]
        },
        "TokenFarm.tokenIsAllowed": {
          "56": [
            4420,
            4455,
            false
          ]
        },
        "TokenFarm.unstakeTokens": {
          "49": [
            2607,
            2629,
            true
          ],
          "50": [
            2801,
            2817,
            true
          ]
        }
      }
    },
    "statements": {
      "0": {
        "Ownable._setOwner": {
          "44": [
            2131,
            2148
          ],
          "45": [
            2158,
            2203
          ]
        },
        "Ownable.owner": {
          "0": [
            1038,
            1051
          ]
        },
        "Ownable.renounceOwnership": {
          "21": [
            1669,
            1690
          ]
        },
        "Ownable.transferOwnership": {
          "35": [
            1926,
            1999
          ],
          "36": [
            2009,
            2028
          ]
        }
      },
      "1": {},
      "2": {
        "Context._msgSender": {
          "13": [
            658,
            675
          ]
        }
      },
      "3": {},
      "4": {
        "TokenFarm.addAllowedToken": {
          "14": [
            1857,
            1918
          ],
          "15": [
            1928,
            1982
          ],
          "16": [
            1992,
            2018
          ]
        },
        "TokenFarm.addUniqueTokensStaked": {
          "37": [
            3446,
            3503
          ]
        },
        "TokenFarm.fetchAllowedTokens": {
          "34": [
            3250,
            3272
          ]
        },
        "TokenFarm.getTokenPrice": {
          "30": [
            5961,
            5993
          ]
        },
        "TokenFarm.getUserSingleTokenUsdValue": {
          "17": [
            5222,
            5230
          ],
          "18": [
            5504,
            5568
          ]
        },
        "TokenFarm.getUserTotalValue": {
          "25": [
            4656,
            4715
          ],
          "26": [
            4725,
            4791
          ],
          "27": [
            4887,
            4961
          ],
          "28": [
            4860,
            4872
          ],
          "29": [
            4981,
            4998
          ]
        },
        "TokenFarm.issueTokens": {
          "19": [
            2437,
            2483
          ],
          "20": [
            2191,
            2205
          ]
        },
        "TokenFarm.removeStaker": {
          "38": [
            3802,
            3809
          ],
          "39": [
            3701,
            3713
          ],
          "40": [
            4095,
            4132
          ],
          "41": [
            4016,
            4029
          ],
          "42": [
            4166,
            4186
          ],
          "43": [
            4224,
            4247
          ]
        },
        "TokenFarm.setPriceFeedContract": {
          "22": [
            6099,
            6160
          ],
          "23": [
            6170,
            6240
          ],
          "24": [
            6250,
            6292
          ]
        },
        "TokenFarm.stakeTokens": {
          "1": [
            1111,
            1162
          ],
          "2": [
            1172,
            1226
          ],
          "3": [
            1355,
            1418
          ],
          "4": [
            1453,
            1494
          ],
          "5": [
            1536,
            1581
          ],
          "6": [
            1706,
            1730
          ]
        },
        "TokenFarm.tokenIsAllowed": {
          "31": [
            4474,
            4485
          ],
          "32": [
            4390,
            4402
          ],
          "33": [
            4519,
            4531
          ]
        },
        "TokenFarm.unstakeTokens": {
          "7": [
            2599,
            2653
          ],
          "8": [
            2793,
            2840
          ],
          "9": [
            2875,
            2924
          ],
          "10": [
            2971,
            3009
          ],
          "11": [
            3060,
            3095
          ],
          "12": [
            3135,
            3159
          ]
        }
      }
    }
  },
  "dependencies": [
    "smartcontractkit/chainlink-brownie-contracts@0.2.2/AggregatorV3Interface",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/IERC20",
    "OpenZeppelin/openzeppelin-contracts@4.2.0/Ownable"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "245:6059:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;967:780;;;;;;:::i;:::-;;:::i;:::-;;661:24;;;;;-1:-1:-1;;;;;661:24:4;;;;;;-1:-1:-1;;;;;629:32:5;;;611:51;;599:2;584:18;661:24:4;;;;;;;;477:56;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;477:56:4;;;281:69;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;1483:25:5;;;1471:2;1456:18;281:69:4;1337:177:5;2506:660:4;;;;;;:::i;:::-;;:::i;1753:272::-;;;;;;:::i;:::-;;:::i;5011:564::-;;;;;;:::i;:::-;;:::i;627:28::-;;;;;;:::i;:::-;;:::i;2031:469::-;;;:::i;1605:92:0:-;;;:::i;6007:292:4:-;;;;;;:::i;:::-;;:::i;973:85:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;973:85;;4544:461:4;;;;;;:::i;:::-;;:::i;418:53::-;;;;;;:::i;:::-;;;;;;;;;;;;;;5581:420;;;;;;:::i;:::-;;:::i;:::-;;;;1878:25:5;;;1934:2;1919:18;;1912:34;;;;1851:18;5581:420:4;1704:248:5;4260:278:4;;;;;;:::i;:::-;;:::i;:::-;;;2122:14:5;;2115:22;2097:41;;2085:2;2070:18;4260:278:4;1957:187:5;3172:107:4;;;:::i;:::-;;;;;;;:::i;1846:189:0:-;;;;;;:::i;:::-;;:::i;596:25:4:-;;;;;;:::i;:::-;;:::i;967:780::-;1128:1;1119:7;:10;1111:51;;;;-1:-1:-1;;;1111:51:4;;3014:2:5;1111:51:4;;;2996:21:5;3053:2;3033:18;;;3026:30;3092:31;3072:18;;;3065:59;3141:18;;1111:51:4;;;;;;;;;1180:22;1195:6;1180:14;:22::i;:::-;1172:54;;;;-1:-1:-1;;;1172:54:4;;3372:2:5;1172:54:4;;;3354:21:5;3411:2;3391:18;;;3384:30;-1:-1:-1;;;3430:18:5;;;3423:50;3490:18;;1172:54:4;3170:344:5;1172:54:4;1355:63;;-1:-1:-1;;;1355:63:4;;1383:10;1355:63;;;3759:34:5;1403:4:4;3809:18:5;;;3802:43;3861:18;;;3854:34;;;-1:-1:-1;;;;;1355:27:4;;;;;3694:18:5;;1355:63:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1453:41;1475:10;1487:6;1453:21;:41::i;:::-;-1:-1:-1;;;;;1536:22:4;;;;;;:14;:22;;;;;;;;1559:10;1536:34;;;;;;;:45;;1574:7;;1536:22;:45;;1574:7;;1536:45;:::i;:::-;;;;-1:-1:-1;;1675:10:4;1656:30;;;;:18;:30;;;;;;1690:1;1656:35;1653:88;;;1706:7;:24;;;;;;;-1:-1:-1;1706:24:4;;;;;;;;-1:-1:-1;;;;;;1706:24:4;1719:10;1706:24;;;1653:88;967:780;;:::o;2506:660::-;2607:22;2622:6;2607:14;:22::i;:::-;2599:54;;;;-1:-1:-1;;;2599:54:4;;3372:2:5;2599:54:4;;;3354:21:5;3411:2;3391:18;;;3384:30;-1:-1:-1;;;3430:18:5;;;3423:50;3490:18;;2599:54:4;3170:344:5;2599:54:4;-1:-1:-1;;;;;2714:22:4;;2691:20;2714:22;;;:14;:22;;;;;;;;2737:10;2714:34;;;;;;;;2801:16;2793:47;;;;-1:-1:-1;;;2793:47:4;;4648:2:5;2793:47:4;;;4630:21:5;4687:2;4667:18;;;4660:30;-1:-1:-1;;;4706:18:5;;;4699:49;4765:18;;2793:47:4;4446:343:5;2793:47:4;2875:49;;-1:-1:-1;;;2875:49:4;;2899:10;2875:49;;;4968:51:5;5035:18;;;5028:34;;;-1:-1:-1;;;;;2875:23:4;;;;;4941:18:5;;2875:49:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;2971:22:4;;3008:1;2971:22;;;:14;:22;;;;;;;;2994:10;2971:34;;;;;;;:38;;;3060:18;:30;;;;;:35;;2971:14;;3060:30;;:35;;2971:14;;3060:35;:::i;:::-;;;;-1:-1:-1;3135:24:4;;-1:-1:-1;3148:10:4;3135:12;:24::i;1753:272::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1865:20:4;::::1;1857:61;;;::::0;-1:-1:-1;;;1857:61:4;;5766:2:5;1857:61:4::1;::::0;::::1;5748:21:5::0;5805:2;5785:18;;;5778:30;5844:31;5824:18;;;5817:59;5893:18;;1857:61:4::1;5564:353:5::0;1857:61:4::1;1937:22;1952:6;1937:14;:22::i;:::-;1936:23;1928:54;;;::::0;-1:-1:-1;;;1928:54:4;;6124:2:5;1928:54:4::1;::::0;::::1;6106:21:5::0;6163:2;6143:18;;;6136:30;-1:-1:-1;;;6182:18:5;;;6175:49;6241:18;;1928:54:4::1;5922:343:5::0;1928:54:4::1;1992:13;:26:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;1992:26:4;;;;;::::1;::::0;;-1:-1:-1;;;;;;1992:26:4::1;-1:-1:-1::0;;;;;1992:26:4;;;::::1;::::0;;;::::1;::::0;;1753:272::o;5011:564::-;-1:-1:-1;;;;;5177:25:4;;5107:7;5177:25;;;:18;:25;;;;;;5174:67;;-1:-1:-1;5229:1:4;5222:8;;5174:67;5443:15;5460:13;5477:21;5491:6;5477:13;:21::i;:::-;5441:57;;-1:-1:-1;5441:57:4;-1:-1:-1;5555:12:4;5441:57;5555:2;:12;:::i;:::-;-1:-1:-1;;;;;5525:22:4;;;;;;;:14;:22;;;;;;;;:29;;;;;;;;;;5512:42;;:10;:42;:::i;:::-;:55;;;;:::i;:::-;5504:64;;;;5011:564;;;;;:::o;627:28::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;627:28:4;;-1:-1:-1;627:28:4;:::o;2031:469::-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;2138:20:4::1;2134:360;2175:7;:14:::0;2162:27;::::1;2134:360;;;2221:17;2241:7;2249:12;2241:21;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;::::1;::::0;-1:-1:-1;;;;;2241:21:4::1;::::0;-1:-1:-1;2298:28:4::1;2241:21:::0;2298:17:::1;:28::i;:::-;2437:10;::::0;:46:::1;::::0;-1:-1:-1;;;2437:46:4;;-1:-1:-1;;;;;4986:32:5;;;2437:46:4::1;::::0;::::1;4968:51:5::0;5035:18;;;5028:34;;;2276:50:4;;-1:-1:-1;2437:10:4;::::1;::::0;:19:::1;::::0;4941:18:5;;2437:46:4::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2207:287;;2191:14;;;;;:::i;:::-;;;;2134:360;;;;2031:469::o:0;1605:92:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;6007:292:4:-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;6107:20:4;::::1;6099:61;;;::::0;-1:-1:-1;;;6099:61:4;;5766:2:5;6099:61:4::1;::::0;::::1;5748:21:5::0;5805:2;5785:18;;;5778:30;5844:31;5824:18;;;5817:59;5893:18;;6099:61:4::1;5564:353:5::0;6099:61:4::1;-1:-1:-1::0;;;;;6178:24:4;::::1;6170:70;;;::::0;-1:-1:-1;;;6170:70:4;;8513:2:5;6170:70:4::1;::::0;::::1;8495:21:5::0;8552:2;8532:18;;;8525:30;8591:34;8571:18;;;8564:62;-1:-1:-1;;;8642:18:5;;;8635:32;8684:19;;6170:70:4::1;8311:398:5::0;6170:70:4::1;-1:-1:-1::0;;;;;6250:29:4;;::::1;;::::0;;;:21:::1;:29;::::0;;;;:42;;-1:-1:-1;;;;;;6250:42:4::1;::::0;;;::::1;;::::0;;6007:292::o;4544:461::-;4606:7;;-1:-1:-1;;;;;4664:19:4;;4656:59;;;;-1:-1:-1;;;4656:59:4;;8916:2:5;4656:59:4;;;8898:21:5;8955:2;8935:18;;;8928:30;8994;8974:18;;;8967:58;9042:18;;4656:59:4;8714:352:5;4656:59:4;-1:-1:-1;;;;;4733:25:4;;4761:1;4733:25;;;:18;:25;;;;;;4725:66;;;;-1:-1:-1;;;4725:66:4;;9273:2:5;4725:66:4;;;9255:21:5;9312:2;9292:18;;;9285:30;9351:27;9331:18;;;9324:55;9396:18;;4725:66:4;9071:349:5;4725:66:4;4805:18;4801:171;4838:13;:20;4827:31;;4801:171;;;4901:60;4928:5;4935:13;4949:10;4935:25;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;4935:25:4;4901:26;:60::i;:::-;4887:74;;;;:::i;:::-;;-1:-1:-1;4860:12:4;;;;:::i;:::-;;;;4801:171;;;-1:-1:-1;4988:10:4;4544:461;-1:-1:-1;;4544:461:4:o;5581:420::-;-1:-1:-1;;;;;5723:29:4;;;5640:7;5723:29;;;:21;:29;;;;;;;5865:27;;-1:-1:-1;;;5865:27:4;;;;5640:7;;;;5723:29;;;;;5640:7;;5723:29;;5865:25;;:27;;;;;;;;;;;;;;;5723:29;5865:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5846:46;;;;;;5903:16;5930:9;-1:-1:-1;;;;;5930:18:4;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5977:5;;5922:29;;;;;-1:-1:-1;5977:5:4;;-1:-1:-1;;;;;5581:420:4:o;4260:278::-;4315:4;;4330:180;4368:13;:20;4357:31;;4330:180;;;4449:6;-1:-1:-1;;;;;4420:35:4;:13;4434:10;4420:25;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;4420:25:4;:35;4417:83;;;-1:-1:-1;4481:4:4;;4260:278;-1:-1:-1;;4260:278:4:o;4417:83::-;4390:12;;;;:::i;:::-;;;;4330:180;;;-1:-1:-1;4526:5:4;;4260:278;-1:-1:-1;;4260:278:4:o;3172:107::-;3223:16;3258:13;3250:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3250:22:4;;;;;;;;;;;;;;;;;;;;;;;3172:107;:::o;1846:189:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;665:10:2;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;10567:2:5;1926:73:0::1;::::0;::::1;10549:21:5::0;10606:2;10586:18;;;10579:30;10645:34;10625:18;;;10618:62;-1:-1:-1;;;10696:18:5;;;10689:36;10742:19;;1926:73:0::1;10365:402:5::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;596:25:4:-:0;;;;;;;;;;;;3314:206;-1:-1:-1;;;;;3397:22:4;;;3430:1;3397:22;;;:14;:22;;;;;;;;:29;;;;;;;;;;3394:120;;-1:-1:-1;;;;;3474:25:4;;;;;;:18;:25;;;;;;:29;;3502:1;3474:29;:::i;:::-;-1:-1:-1;;;;;3446:25:4;;;;;;:18;:25;;;;;:57;3314:206;;:::o;3526:728::-;3646:18;3642:191;3679:13;:20;3668:31;;3642:191;;;3782:1;3731:14;:41;3746:13;3760:10;3746:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;3746:25:4;;;3731:41;;;;;;;;;;;;;;;:48;;;;;;;;;;;;:52;3728:95;;;3802:7;3526:728;:::o;3728:95::-;3701:12;;;;:::i;:::-;;;;3642:191;;;;3965:19;3961:196;4000:7;:14;3988:26;;3961:196;;;4071:5;-1:-1:-1;;;;;4047:29:4;:7;4055:11;4047:20;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;4047:20:4;:29;4044:103;;4095:10;4111:7;4119:11;4111:20;;;;;;;;:::i;:::-;;;;;;;;;;;;;4095:37;;4111:20;4095:37;;;;;;;;;;;;;;-1:-1:-1;;;;;;4095:37:4;-1:-1:-1;;;;;4111:20:4;;;4095:37;;;;;;4044:103;4016:13;;;;:::i;:::-;;;;3961:196;;;-1:-1:-1;4176:10:4;4166:20;;;;:7;;:20;:::i;:::-;-1:-1:-1;4237:10:4;4224:23;;;;:10;;:23;:::i;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:173:5;82:20;;-1:-1:-1;;;;;131:31:5;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:254::-;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;373:9;360:23;350:33;;402:38;436:2;425:9;421:18;402:38;:::i;:::-;392:48;;192:254;;;;;:::o;673:186::-;732:6;785:2;773:9;764:7;760:23;756:32;753:52;;;801:1;798;791:12;753:52;824:29;843:9;824:29;:::i;:::-;814:39;673:186;-1:-1:-1;;;673:186:5:o;1072:260::-;1140:6;1148;1201:2;1189:9;1180:7;1176:23;1172:32;1169:52;;;1217:1;1214;1207:12;1169:52;1240:29;1259:9;1240:29;:::i;:::-;1230:39;;1288:38;1322:2;1311:9;1307:18;1288:38;:::i;1519:180::-;1578:6;1631:2;1619:9;1610:7;1606:23;1602:32;1599:52;;;1647:1;1644;1637:12;1599:52;-1:-1:-1;1670:23:5;;1519:180;-1:-1:-1;1519:180:5:o;2149:658::-;2320:2;2372:21;;;2442:13;;2345:18;;;2464:22;;;2291:4;;2320:2;2543:15;;;;2517:2;2502:18;;;2291:4;2586:195;2600:6;2597:1;2594:13;2586:195;;;2665:13;;-1:-1:-1;;;;;2661:39:5;2649:52;;2756:15;;;;2721:12;;;;2697:1;2615:9;2586:195;;;-1:-1:-1;2798:3:5;;2149:658;-1:-1:-1;;;;;;2149:658:5:o;3899:277::-;3966:6;4019:2;4007:9;3998:7;3994:23;3990:32;3987:52;;;4035:1;4032;4025:12;3987:52;4067:9;4061:16;4120:5;4113:13;4106:21;4099:5;4096:32;4086:60;;4142:1;4139;4132:12;4181:127;4242:10;4237:3;4233:20;4230:1;4223:31;4273:4;4270:1;4263:15;4297:4;4294:1;4287:15;4313:128;4353:3;4384:1;4380:6;4377:1;4374:13;4371:39;;;4390:18;;:::i;:::-;-1:-1:-1;4426:9:5;;4313:128::o;5073:125::-;5113:4;5141:1;5138;5135:8;5132:34;;;5146:18;;:::i;:::-;-1:-1:-1;5183:9:5;;5073:125::o;5203:356::-;5405:2;5387:21;;;5424:18;;;5417:30;5483:34;5478:2;5463:18;;5456:62;5550:2;5535:18;;5203:356::o;6270:422::-;6359:1;6402:5;6359:1;6416:270;6437:7;6427:8;6424:21;6416:270;;;6496:4;6492:1;6488:6;6484:17;6478:4;6475:27;6472:53;;;6505:18;;:::i;:::-;6555:7;6545:8;6541:22;6538:55;;;6575:16;;;;6538:55;6654:22;;;;6614:15;;;;6416:270;;;6420:3;6270:422;;;;;:::o;6697:806::-;6746:5;6776:8;6766:80;;-1:-1:-1;6817:1:5;6831:5;;6766:80;6865:4;6855:76;;-1:-1:-1;6902:1:5;6916:5;;6855:76;6947:4;6965:1;6960:59;;;;7033:1;7028:130;;;;6940:218;;6960:59;6990:1;6981:10;;7004:5;;;7028:130;7065:3;7055:8;7052:17;7049:43;;;7072:18;;:::i;:::-;-1:-1:-1;;7128:1:5;7114:16;;7143:5;;6940:218;;7242:2;7232:8;7229:16;7223:3;7217:4;7214:13;7210:36;7204:2;7194:8;7191:16;7186:2;7180:4;7177:12;7173:35;7170:77;7167:159;;;-1:-1:-1;7279:19:5;;;7311:5;;7167:159;7358:34;7383:8;7377:4;7358:34;:::i;:::-;7428:6;7424:1;7420:6;7416:19;7407:7;7404:32;7401:58;;;7439:18;;:::i;:::-;7477:20;;6697:806;-1:-1:-1;;;6697:806:5:o;7508:131::-;7568:5;7597:36;7624:8;7618:4;7597:36;:::i;7644:168::-;7684:7;7750:1;7746;7742:6;7738:14;7735:1;7732:21;7727:1;7720:9;7713:17;7709:45;7706:71;;;7757:18;;:::i;:::-;-1:-1:-1;7797:9:5;;7644:168::o;7817:217::-;7857:1;7883;7873:132;;7927:10;7922:3;7918:20;7915:1;7908:31;7962:4;7959:1;7952:15;7990:4;7987:1;7980:15;7873:132;-1:-1:-1;8019:9:5;;7817:217::o;8039:127::-;8100:10;8095:3;8091:20;8088:1;8081:31;8131:4;8128:1;8121:15;8155:4;8152:1;8145:15;8171:135;8210:3;-1:-1:-1;;8231:17:5;;8228:43;;;8251:18;;:::i;:::-;-1:-1:-1;8298:1:5;8287:13;;8171:135::o;9425:179::-;9503:13;;9556:22;9545:34;;9535:45;;9525:73;;9594:1;9591;9584:12;9609:473;9712:6;9720;9728;9736;9744;9797:3;9785:9;9776:7;9772:23;9768:33;9765:53;;;9814:1;9811;9804:12;9765:53;9837:39;9866:9;9837:39;:::i;:::-;9827:49;;9916:2;9905:9;9901:18;9895:25;9885:35;;9960:2;9949:9;9945:18;9939:25;9929:35;;10004:2;9993:9;9989:18;9983:25;9973:35;;10027:49;10071:3;10060:9;10056:19;10027:49;:::i;:::-;10017:59;;9609:473;;;;;;;;:::o;10087:273::-;10155:6;10208:2;10196:9;10187:7;10183:23;10179:32;10176:52;;;10224:1;10221;10214:12;10176:52;10256:9;10250:16;10306:4;10299:5;10295:16;10288:5;10285:27;10275:55;;10326:1;10323;10316:12",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "offset": [
    245,
    6304
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x121 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x715018A6 GT PUSH2 0xAD JUMPI DUP1 PUSH4 0xD02641A0 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xD02641A0 EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0xDD5B8467 EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0xEE0B12D2 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0xFD5E6DD1 EQ PUSH2 0x2F3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x715018A6 EQ PUSH2 0x221 JUMPI DUP1 PUSH4 0x877DD39D EQ PUSH2 0x229 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0xAF3F5E22 EQ PUSH2 0x24D JUMPI DUP1 PUSH4 0xB83E0234 EQ PUSH2 0x260 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2D1AD8B8 GT PUSH2 0xF4 JUMPI DUP1 PUSH4 0x2D1AD8B8 EQ PUSH2 0x1CD JUMPI DUP1 PUSH4 0x4178617F EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x54DFEB72 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x597F3894 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x60AB5852 EQ PUSH2 0x219 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBEA440D EQ PUSH2 0x126 JUMPI DUP1 PUSH4 0x184D411E EQ PUSH2 0x13B JUMPI DUP1 PUSH4 0x27927B3E EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x29161A00 EQ PUSH2 0x194 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x139 PUSH2 0x134 CALLDATASIZE PUSH1 0x4 PUSH2 0x1055 JUMP JUMPDEST PUSH2 0x306 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x8 SLOAD PUSH2 0x14E SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x14E PUSH2 0x179 CALLDATASIZE PUSH1 0x4 PUSH2 0x1081 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x1A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x162 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x1DB CALLDATASIZE PUSH1 0x4 PUSH2 0x1081 JUMP JUMPDEST PUSH2 0x4C0 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x1081 JUMP JUMPDEST PUSH2 0x632 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x201 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0x750 JUMP JUMPDEST PUSH2 0x14E PUSH2 0x214 CALLDATASIZE PUSH1 0x4 PUSH2 0x10CD JUMP JUMPDEST PUSH2 0x7D6 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x800 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x8FD JUMP JUMPDEST PUSH2 0x139 PUSH2 0x237 CALLDATASIZE PUSH1 0x4 PUSH2 0x10A3 JUMP JUMPDEST PUSH2 0x933 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14E JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x25B CALLDATASIZE PUSH1 0x4 PUSH2 0x1081 JUMP JUMPDEST PUSH2 0xA42 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x26E CALLDATASIZE PUSH1 0x4 PUSH2 0x1081 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x293 PUSH2 0x28E CALLDATASIZE PUSH1 0x4 PUSH2 0x1081 JUMP JUMPDEST PUSH2 0xB63 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x162 JUMP JUMPDEST PUSH2 0x2BB PUSH2 0x2B6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1081 JUMP JUMPDEST PUSH2 0xC64 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x162 JUMP JUMPDEST PUSH2 0x2D3 PUSH2 0xCCE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x10E6 JUMP JUMPDEST PUSH2 0x139 PUSH2 0x2EE CALLDATASIZE PUSH1 0x4 PUSH2 0x1081 JUMP JUMPDEST PUSH2 0xD30 JUMP JUMPDEST PUSH2 0x14E PUSH2 0x301 CALLDATASIZE PUSH1 0x4 PUSH2 0x10CD JUMP JUMPDEST PUSH2 0xDC8 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x35B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D757374206265206D6F7265207468616E207A65726F000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x364 DUP2 PUSH2 0xC64 JUMP JUMPDEST PUSH2 0x3A7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B881A5CC81B9BDD08185B1B1BDDD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x352 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x3FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x41E SWAP2 SWAP1 PUSH2 0x1133 JUMP JUMPDEST POP PUSH2 0x429 CALLER DUP3 PUSH2 0xDD8 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x45C SWAP1 DUP5 SWAP1 PUSH2 0x116B JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 EQ ISZERO PUSH2 0x4BC JUMPI PUSH1 0x6 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x4C9 DUP2 PUSH2 0xC64 JUMP JUMPDEST PUSH2 0x50C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x151BDAD95B881A5CC81B9BDD08185B1B1BDDD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x352 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP1 PUSH2 0x573 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151BDAD95B881A5CC81B9BDD081CDD185AD959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x352 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E4 SWAP2 SWAP1 PUSH2 0x1133 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 CALLER DUP6 MSTORE DUP3 MSTORE DUP1 DUP5 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x2 SWAP1 SWAP2 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x623 SWAP1 DUP5 SWAP1 PUSH2 0x1183 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x4BC SWAP1 POP CALLER PUSH2 0xE43 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x65C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x352 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x6B2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206D75737420626520612076616C69642061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x352 JUMP JUMPDEST PUSH2 0x6BB DUP2 PUSH2 0xC64 JUMP JUMPDEST ISZERO PUSH2 0x6FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151BDAD95B88185B1C9958591E481859191959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x352 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH1 0x0 SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x775 JUMPI POP PUSH1 0x0 PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x781 DUP5 PUSH2 0xB63 JUMP JUMPDEST SWAP1 SWAP3 POP SWAP1 POP PUSH2 0x791 DUP2 PUSH1 0xA PUSH2 0x12B3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP11 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x7C1 SWAP1 DUP5 PUSH2 0x12BF JUMP JUMPDEST PUSH2 0x7CB SWAP2 SWAP1 PUSH2 0x12DE JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x82A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x352 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x8FA JUMPI PUSH1 0x0 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x84C JUMPI PUSH2 0x84C PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 POP PUSH2 0x86B DUP3 PUSH2 0xA42 JUMP JUMPDEST PUSH1 0x8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD DUP5 SWAP1 MSTORE SWAP3 SWAP4 POP SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x8C0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x8E4 SWAP2 SWAP1 PUSH2 0x1133 JUMP JUMPDEST POP POP POP DUP1 DUP1 PUSH2 0x8F2 SWAP1 PUSH2 0x1316 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x82D JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x927 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x352 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH2 0x931 PUSH1 0x0 PUSH2 0xF84 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x95D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x352 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9B3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E206D75737420626520612076616C69642061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x352 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xA14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x50726963652066656564206D75737420626520612076616C6964206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x352 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0xA9B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x55736572206D75737420626520612076616C6964206164647265737300000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x352 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xB00 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5573657220686173206E6F20746F6B656E73207374616B656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x352 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0xB5C JUMPI PUSH2 0xB3E DUP5 PUSH1 0x4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0xB24 JUMPI PUSH2 0xB24 PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x750 JUMP JUMPDEST PUSH2 0xB48 SWAP1 DUP4 PUSH2 0x116B JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0xB54 DUP2 PUSH2 0x1316 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xB03 JUMP JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP2 MLOAD PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP2 MSTORE SWAP2 MLOAD SWAP3 SWAP4 DUP5 SWAP4 SWAP2 AND SWAP2 DUP3 SWAP2 DUP5 SWAP2 DUP4 SWAP2 PUSH4 0xFEAF968C SWAP2 PUSH1 0x4 DUP1 DUP3 ADD SWAP3 PUSH1 0xA0 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xBC4 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xBE8 SWAP2 SWAP1 PUSH2 0x134B JUMP JUMPDEST POP POP POP SWAP2 POP POP PUSH1 0x0 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xC2E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC52 SWAP2 SWAP1 PUSH2 0x139B JUMP JUMPDEST SWAP2 SWAP8 PUSH1 0xFF SWAP1 SWAP3 AND SWAP7 POP SWAP1 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0xCC5 JUMPI DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x4 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xC8F JUMPI PUSH2 0xC8F PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0xCB3 JUMPI POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0xCBD DUP2 PUSH2 0x1316 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC68 JUMP JUMPDEST POP PUSH1 0x0 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xD26 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xD08 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xD5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x352 SWAP1 PUSH2 0x119A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xDBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x352 JUMP JUMPDEST PUSH2 0x8FA DUP2 PUSH2 0xF84 JUMP JUMPDEST PUSH1 0x6 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x7E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP7 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH2 0x4BC JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xE26 SWAP1 PUSH1 0x1 PUSH2 0x116B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x4 SLOAD DUP2 LT ISZERO PUSH2 0xEBA JUMPI PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH1 0x4 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xE69 JUMPI PUSH2 0xE69 PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP5 MSTORE DUP4 DUP3 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x40 SWAP3 DUP4 ADD DUP3 KECCAK256 SWAP4 DUP8 AND DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 SLOAD GT ISZERO PUSH2 0xEA8 JUMPI POP POP JUMP JUMPDEST DUP1 PUSH2 0xEB2 DUP2 PUSH2 0x1316 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE46 JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0xF62 JUMPI DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xEE5 JUMPI PUSH2 0xEE5 PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xF50 JUMPI PUSH1 0x7 PUSH1 0x6 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF14 JUMPI PUSH2 0xF14 PUSH2 0x1300 JUMP JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD DUP4 SLOAD PUSH1 0x1 DUP2 ADD DUP6 SSTORE SWAP4 DUP4 MSTORE SWAP2 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMPDEST DUP1 PUSH2 0xF5A DUP2 PUSH2 0x1316 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xEBE JUMP JUMPDEST POP PUSH1 0x7 DUP1 SLOAD PUSH2 0xF73 SWAP2 PUSH1 0x6 SWAP2 PUSH2 0xFD4 JUMP JUMPDEST POP PUSH1 0x5 DUP1 SLOAD PUSH2 0x4BC SWAP2 PUSH1 0x7 SWAP2 PUSH2 0xFD4 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1014 JUMPI PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1014 JUMPI DUP3 SLOAD DUP3 SSTORE SWAP2 PUSH1 0x1 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xFF9 JUMP JUMPDEST POP PUSH2 0x1020 SWAP3 SWAP2 POP PUSH2 0x1024 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1020 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1025 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x1050 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1068 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x1078 PUSH1 0x20 DUP5 ADD PUSH2 0x1039 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1093 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109C DUP3 PUSH2 0x1039 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10BF DUP4 PUSH2 0x1039 JUMP JUMPDEST SWAP2 POP PUSH2 0x1078 PUSH1 0x20 DUP5 ADD PUSH2 0x1039 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10DF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 DUP5 DUP3 ADD SWAP1 PUSH1 0x40 DUP6 ADD SWAP1 DUP5 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1127 JUMPI DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 MSTORE SWAP3 DUP5 ADD SWAP3 SWAP2 DUP5 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1102 JUMP JUMPDEST POP SWAP1 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x109C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x117E JUMPI PUSH2 0x117E PUSH2 0x1155 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1195 JUMPI PUSH2 0x1195 PUSH2 0x1155 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 JUMPDEST DUP1 DUP6 GT ISZERO PUSH2 0x120A JUMPI DUP2 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x11F0 JUMPI PUSH2 0x11F0 PUSH2 0x1155 JUMP JUMPDEST DUP1 DUP6 AND ISZERO PUSH2 0x11FD JUMPI SWAP2 DUP2 MUL SWAP2 JUMPDEST SWAP4 DUP5 SHR SWAP4 SWAP1 DUP1 MUL SWAP1 PUSH2 0x11D4 JUMP JUMPDEST POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1221 JUMPI POP PUSH1 0x1 PUSH2 0x7D0 JUMP JUMPDEST DUP2 PUSH2 0x122E JUMPI POP PUSH1 0x0 PUSH2 0x7D0 JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0x1244 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0x124E JUMPI PUSH2 0x126A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0x7D0 JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0x125F JUMPI PUSH2 0x125F PUSH2 0x1155 JUMP JUMPDEST POP POP PUSH1 0x1 DUP3 SHL PUSH2 0x7D0 JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0x128D JUMPI POP DUP2 DUP2 EXP PUSH2 0x7D0 JUMP JUMPDEST PUSH2 0x1297 DUP4 DUP4 PUSH2 0x11CF JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DIV DUP3 GT ISZERO PUSH2 0x12AB JUMPI PUSH2 0x12AB PUSH2 0x1155 JUMP JUMPDEST MUL SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x109C DUP4 DUP4 PUSH2 0x1212 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x12D9 JUMPI PUSH2 0x12D9 PUSH2 0x1155 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x12FB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x132A JUMPI PUSH2 0x132A PUSH2 0x1155 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP1 MLOAD PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1050 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x1363 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x136C DUP7 PUSH2 0x1331 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH2 0x138F PUSH1 0x80 DUP8 ADD PUSH2 0x1331 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x13AD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x109C JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DIV MSTORE8 CALLDATASIZE TIMESTAMP 0x21 0x5C 0xDC PUSH8 0x51A7EC385C1A277C ADDRESS CALLER 0xE6 0xEC 0x5D SWAP14 DIFFICULTY LOG3 BASEFEE 0x4F PUSH6 0xB0E0E35F8F64 PUSH20 0x6F6C634300080B00330000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        245,
        6304
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "6": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "DUP1",
      "path": "4"
    },
    "7": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "12": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "DUP1",
      "path": "4"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "REVERT",
      "path": "4"
    },
    "16": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "17": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "POP",
      "path": "4"
    },
    "18": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "21": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "LT",
      "path": "4"
    },
    "22": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x121"
    },
    "25": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "29": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "SHR",
      "path": "4"
    },
    "32": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "DUP1",
      "path": "4"
    },
    "33": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x715018A6"
    },
    "38": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "GT",
      "path": "4"
    },
    "39": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xAD"
    },
    "42": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "43": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "DUP1",
      "path": "4"
    },
    "44": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xD02641A0"
    },
    "49": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "GT",
      "path": "4"
    },
    "50": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "54": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "DUP1",
      "path": "4"
    },
    "55": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xD02641A0"
    },
    "60": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "EQ",
      "path": "4"
    },
    "61": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x280"
    },
    "64": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "65": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "DUP1",
      "path": "4"
    },
    "66": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xDD5B8467"
    },
    "71": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "EQ",
      "path": "4"
    },
    "72": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2A8"
    },
    "75": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "76": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "DUP1",
      "path": "4"
    },
    "77": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xEE0B12D2"
    },
    "82": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "EQ",
      "path": "4"
    },
    "83": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2CB"
    },
    "86": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "87": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "DUP1",
      "path": "4"
    },
    "88": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xF2FDE38B"
    },
    "93": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "EQ",
      "path": "4"
    },
    "94": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2E0"
    },
    "97": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "98": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "DUP1",
      "path": "4"
    },
    "99": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFD5E6DD1"
    },
    "104": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "EQ",
      "path": "4"
    },
    "105": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2F3"
    },
    "108": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "109": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "111": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "DUP1",
      "path": "4"
    },
    "112": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "REVERT",
      "path": "4"
    },
    "113": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "114": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "DUP1",
      "path": "4"
    },
    "115": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x715018A6"
    },
    "120": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "EQ",
      "path": "4"
    },
    "121": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x221"
    },
    "124": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "125": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "DUP1",
      "path": "4"
    },
    "126": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x877DD39D"
    },
    "131": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "EQ",
      "path": "4"
    },
    "132": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x229"
    },
    "135": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "136": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "DUP1",
      "path": "4"
    },
    "137": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8DA5CB5B"
    },
    "142": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "EQ",
      "path": "4"
    },
    "143": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x23C"
    },
    "146": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "147": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "DUP1",
      "path": "4"
    },
    "148": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xAF3F5E22"
    },
    "153": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "EQ",
      "path": "4"
    },
    "154": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x24D"
    },
    "157": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "158": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "DUP1",
      "path": "4"
    },
    "159": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xB83E0234"
    },
    "164": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "EQ",
      "path": "4"
    },
    "165": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x260"
    },
    "168": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "169": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "171": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "DUP1",
      "path": "4"
    },
    "172": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "REVERT",
      "path": "4"
    },
    "173": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "174": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "DUP1",
      "path": "4"
    },
    "175": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x2D1AD8B8"
    },
    "180": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "GT",
      "path": "4"
    },
    "181": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF4"
    },
    "184": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "185": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "DUP1",
      "path": "4"
    },
    "186": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x2D1AD8B8"
    },
    "191": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "EQ",
      "path": "4"
    },
    "192": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1CD"
    },
    "195": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "196": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "DUP1",
      "path": "4"
    },
    "197": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x4178617F"
    },
    "202": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "EQ",
      "path": "4"
    },
    "203": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E0"
    },
    "206": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "207": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "DUP1",
      "path": "4"
    },
    "208": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x54DFEB72"
    },
    "213": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "EQ",
      "path": "4"
    },
    "214": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1F3"
    },
    "217": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "218": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "DUP1",
      "path": "4"
    },
    "219": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x597F3894"
    },
    "224": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "EQ",
      "path": "4"
    },
    "225": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x206"
    },
    "228": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "229": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "DUP1",
      "path": "4"
    },
    "230": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x60AB5852"
    },
    "235": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "EQ",
      "path": "4"
    },
    "236": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x219"
    },
    "239": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "240": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "242": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "DUP1",
      "path": "4"
    },
    "243": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "REVERT",
      "path": "4"
    },
    "244": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "245": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "DUP1",
      "path": "4"
    },
    "246": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xBEA440D"
    },
    "251": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "EQ",
      "path": "4"
    },
    "252": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x126"
    },
    "255": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "256": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "DUP1",
      "path": "4"
    },
    "257": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x184D411E"
    },
    "262": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "EQ",
      "path": "4"
    },
    "263": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x13B"
    },
    "266": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "267": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "DUP1",
      "path": "4"
    },
    "268": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x27927B3E"
    },
    "273": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "EQ",
      "path": "4"
    },
    "274": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x16B"
    },
    "277": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "278": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "DUP1",
      "path": "4"
    },
    "279": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x29161A00"
    },
    "284": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "EQ",
      "path": "4"
    },
    "285": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x194"
    },
    "288": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "289": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "290": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "292": {
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "DUP1",
      "path": "4"
    },
    "293": {
      "first_revert": true,
      "fn": null,
      "offset": [
        245,
        6304
      ],
      "op": "REVERT",
      "path": "4"
    },
    "294": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        967,
        1747
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "295": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        967,
        1747
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x139"
    },
    "298": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        967,
        1747
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x134"
    },
    "301": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        967,
        1747
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "302": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        967,
        1747
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "304": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        967,
        1747
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1055"
    },
    "307": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        967,
        1747
      ],
      "op": "JUMP",
      "path": "4"
    },
    "308": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        967,
        1747
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "309": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        967,
        1747
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x306"
    },
    "312": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        967,
        1747
      ],
      "op": "JUMP",
      "path": "4"
    },
    "313": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        967,
        1747
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "314": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        967,
        1747
      ],
      "op": "STOP",
      "path": "4"
    },
    "315": {
      "offset": [
        661,
        685
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "316": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        661,
        685
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x8"
    },
    "318": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        661,
        685
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "319": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        661,
        685
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14E"
    },
    "322": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        661,
        685
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "323": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "325": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "327": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "329": {
      "op": "SHL"
    },
    "330": {
      "op": "SUB"
    },
    "331": {
      "offset": [
        661,
        685
      ],
      "op": "AND",
      "path": "4"
    },
    "332": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        661,
        685
      ],
      "op": "DUP2",
      "path": "4"
    },
    "333": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        661,
        685
      ],
      "op": "JUMP",
      "path": "4"
    },
    "334": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        661,
        685
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "335": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        661,
        685
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "337": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        661,
        685
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "338": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "340": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "342": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "344": {
      "op": "SHL"
    },
    "345": {
      "op": "SUB"
    },
    "346": {
      "op": "SWAP1"
    },
    "347": {
      "op": "SWAP2"
    },
    "348": {
      "op": "AND"
    },
    "349": {
      "op": "DUP2"
    },
    "350": {
      "op": "MSTORE"
    },
    "351": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "353": {
      "op": "ADD"
    },
    "354": {
      "offset": [
        661,
        685
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "355": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        661,
        685
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "357": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        661,
        685
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "358": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        661,
        685
      ],
      "op": "DUP1",
      "path": "4"
    },
    "359": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        661,
        685
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "360": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        661,
        685
      ],
      "op": "SUB",
      "path": "4"
    },
    "361": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        661,
        685
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "362": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        661,
        685
      ],
      "op": "RETURN",
      "path": "4"
    },
    "363": {
      "offset": [
        477,
        533
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "364": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        477,
        533
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14E"
    },
    "367": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        477,
        533
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x179"
    },
    "370": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        477,
        533
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "371": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        477,
        533
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "373": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        477,
        533
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1081"
    },
    "376": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        477,
        533
      ],
      "op": "JUMP",
      "path": "4"
    },
    "377": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        477,
        533
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "378": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        477,
        533
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "380": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        477,
        533
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "382": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        477,
        533
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "383": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        477,
        533
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "385": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        477,
        533
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "386": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        477,
        533
      ],
      "op": "DUP2",
      "path": "4"
    },
    "387": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        477,
        533
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "388": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        477,
        533
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "390": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        477,
        533
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "391": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        477,
        533
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "392": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        477,
        533
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "393": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "395": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "397": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "399": {
      "op": "SHL"
    },
    "400": {
      "op": "SUB"
    },
    "401": {
      "offset": [
        477,
        533
      ],
      "op": "AND",
      "path": "4"
    },
    "402": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        477,
        533
      ],
      "op": "DUP2",
      "path": "4"
    },
    "403": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        477,
        533
      ],
      "op": "JUMP",
      "path": "4"
    },
    "404": {
      "offset": [
        281,
        350
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "405": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1BF"
    },
    "408": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1A2"
    },
    "411": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "412": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "414": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10A3"
    },
    "417": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        281,
        350
      ],
      "op": "JUMP",
      "path": "4"
    },
    "418": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "419": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "421": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "423": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "424": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "DUP2",
      "path": "4"
    },
    "425": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "426": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "428": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "429": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "DUP4",
      "path": "4"
    },
    "430": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "431": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "433": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "DUP1",
      "path": "4"
    },
    "434": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "DUP5",
      "path": "4"
    },
    "435": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "436": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "437": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "438": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "439": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "440": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "DUP3",
      "path": "4"
    },
    "441": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "442": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "443": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "444": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "445": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "DUP2",
      "path": "4"
    },
    "446": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "JUMP",
      "path": "4"
    },
    "447": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "448": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "450": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        281,
        350
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "451": {
      "op": "SWAP1"
    },
    "452": {
      "op": "DUP2"
    },
    "453": {
      "op": "MSTORE"
    },
    "454": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "456": {
      "op": "ADD"
    },
    "457": {
      "offset": [
        281,
        350
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x162"
    },
    "460": {
      "op": "JUMP"
    },
    "461": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2506,
        3166
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "462": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2506,
        3166
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x139"
    },
    "465": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2506,
        3166
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1DB"
    },
    "468": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2506,
        3166
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "469": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2506,
        3166
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "471": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2506,
        3166
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1081"
    },
    "474": {
      "fn": "TokenFarm.unstakeTokens",
      "jump": "i",
      "offset": [
        2506,
        3166
      ],
      "op": "JUMP",
      "path": "4"
    },
    "475": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2506,
        3166
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "476": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2506,
        3166
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4C0"
    },
    "479": {
      "fn": "TokenFarm.unstakeTokens",
      "jump": "i",
      "offset": [
        2506,
        3166
      ],
      "op": "JUMP",
      "path": "4"
    },
    "480": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1753,
        2025
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "481": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1753,
        2025
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x139"
    },
    "484": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1753,
        2025
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1EE"
    },
    "487": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1753,
        2025
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "488": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1753,
        2025
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "490": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1753,
        2025
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1081"
    },
    "493": {
      "fn": "TokenFarm.addAllowedToken",
      "jump": "i",
      "offset": [
        1753,
        2025
      ],
      "op": "JUMP",
      "path": "4"
    },
    "494": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1753,
        2025
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "495": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1753,
        2025
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x632"
    },
    "498": {
      "fn": "TokenFarm.addAllowedToken",
      "jump": "i",
      "offset": [
        1753,
        2025
      ],
      "op": "JUMP",
      "path": "4"
    },
    "499": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5011,
        5575
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "500": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5011,
        5575
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1BF"
    },
    "503": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5011,
        5575
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x201"
    },
    "506": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5011,
        5575
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "507": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5011,
        5575
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "509": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5011,
        5575
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10A3"
    },
    "512": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "jump": "i",
      "offset": [
        5011,
        5575
      ],
      "op": "JUMP",
      "path": "4"
    },
    "513": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5011,
        5575
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "514": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5011,
        5575
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x750"
    },
    "517": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "jump": "i",
      "offset": [
        5011,
        5575
      ],
      "op": "JUMP",
      "path": "4"
    },
    "518": {
      "offset": [
        627,
        655
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "519": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        627,
        655
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14E"
    },
    "522": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        627,
        655
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x214"
    },
    "525": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        627,
        655
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "526": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        627,
        655
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "528": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        627,
        655
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10CD"
    },
    "531": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "jump": "i",
      "offset": [
        627,
        655
      ],
      "op": "JUMP",
      "path": "4"
    },
    "532": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        627,
        655
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "533": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        627,
        655
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7D6"
    },
    "536": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "jump": "i",
      "offset": [
        627,
        655
      ],
      "op": "JUMP",
      "path": "4"
    },
    "537": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2031,
        2500
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "538": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2031,
        2500
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x139"
    },
    "541": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2031,
        2500
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x800"
    },
    "544": {
      "fn": "TokenFarm.issueTokens",
      "jump": "i",
      "offset": [
        2031,
        2500
      ],
      "op": "JUMP",
      "path": "4"
    },
    "545": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "546": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x139"
    },
    "549": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x8FD"
    },
    "552": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "553": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6007,
        6299
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "554": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6007,
        6299
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x139"
    },
    "557": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6007,
        6299
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x237"
    },
    "560": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6007,
        6299
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "561": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6007,
        6299
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "563": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6007,
        6299
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10A3"
    },
    "566": {
      "fn": "TokenFarm.setPriceFeedContract",
      "jump": "i",
      "offset": [
        6007,
        6299
      ],
      "op": "JUMP",
      "path": "4"
    },
    "567": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6007,
        6299
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "568": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6007,
        6299
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x933"
    },
    "571": {
      "fn": "TokenFarm.setPriceFeedContract",
      "jump": "i",
      "offset": [
        6007,
        6299
      ],
      "op": "JUMP",
      "path": "4"
    },
    "572": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "573": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "575": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0",
      "statement": 0
    },
    "576": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "578": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "580": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "582": {
      "op": "SHL"
    },
    "583": {
      "op": "SUB"
    },
    "584": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "585": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x14E"
    },
    "588": {
      "fn": "Ownable.owner",
      "offset": [
        973,
        1058
      ],
      "op": "JUMP",
      "path": "0"
    },
    "589": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4544,
        5005
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "590": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4544,
        5005
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1BF"
    },
    "593": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4544,
        5005
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x25B"
    },
    "596": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4544,
        5005
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "597": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4544,
        5005
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "599": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4544,
        5005
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1081"
    },
    "602": {
      "fn": "TokenFarm.getUserTotalValue",
      "jump": "i",
      "offset": [
        4544,
        5005
      ],
      "op": "JUMP",
      "path": "4"
    },
    "603": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4544,
        5005
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "604": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4544,
        5005
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA42"
    },
    "607": {
      "fn": "TokenFarm.getUserTotalValue",
      "jump": "i",
      "offset": [
        4544,
        5005
      ],
      "op": "JUMP",
      "path": "4"
    },
    "608": {
      "offset": [
        418,
        471
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "609": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        418,
        471
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1BF"
    },
    "612": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        418,
        471
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x26E"
    },
    "615": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        418,
        471
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "616": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        418,
        471
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "618": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        418,
        471
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1081"
    },
    "621": {
      "fn": "TokenFarm.getUserTotalValue",
      "jump": "i",
      "offset": [
        418,
        471
      ],
      "op": "JUMP",
      "path": "4"
    },
    "622": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        418,
        471
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "623": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        418,
        471
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "625": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        418,
        471
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "627": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        418,
        471
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "628": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        418,
        471
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "630": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        418,
        471
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "631": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        418,
        471
      ],
      "op": "DUP2",
      "path": "4"
    },
    "632": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        418,
        471
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "633": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        418,
        471
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "635": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        418,
        471
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "636": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        418,
        471
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "637": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        418,
        471
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "638": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        418,
        471
      ],
      "op": "DUP2",
      "path": "4"
    },
    "639": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        418,
        471
      ],
      "op": "JUMP",
      "path": "4"
    },
    "640": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5581,
        6001
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "641": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5581,
        6001
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x293"
    },
    "644": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5581,
        6001
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x28E"
    },
    "647": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5581,
        6001
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "648": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5581,
        6001
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "650": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5581,
        6001
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1081"
    },
    "653": {
      "fn": "TokenFarm.getTokenPrice",
      "jump": "i",
      "offset": [
        5581,
        6001
      ],
      "op": "JUMP",
      "path": "4"
    },
    "654": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5581,
        6001
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "655": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5581,
        6001
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB63"
    },
    "658": {
      "fn": "TokenFarm.getTokenPrice",
      "jump": "i",
      "offset": [
        5581,
        6001
      ],
      "op": "JUMP",
      "path": "4"
    },
    "659": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5581,
        6001
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "660": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5581,
        6001
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "662": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5581,
        6001
      ],
      "op": "DUP1",
      "path": "4"
    },
    "663": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5581,
        6001
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "664": {
      "op": "SWAP3"
    },
    "665": {
      "op": "DUP4"
    },
    "666": {
      "op": "MSTORE"
    },
    "667": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "669": {
      "op": "DUP4"
    },
    "670": {
      "op": "ADD"
    },
    "671": {
      "op": "SWAP2"
    },
    "672": {
      "op": "SWAP1"
    },
    "673": {
      "op": "SWAP2"
    },
    "674": {
      "op": "MSTORE"
    },
    "675": {
      "op": "ADD"
    },
    "676": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5581,
        6001
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x162"
    },
    "679": {
      "op": "JUMP"
    },
    "680": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4260,
        4538
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "681": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4260,
        4538
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2BB"
    },
    "684": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4260,
        4538
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2B6"
    },
    "687": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4260,
        4538
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "688": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4260,
        4538
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "690": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4260,
        4538
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1081"
    },
    "693": {
      "fn": "TokenFarm.tokenIsAllowed",
      "jump": "i",
      "offset": [
        4260,
        4538
      ],
      "op": "JUMP",
      "path": "4"
    },
    "694": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4260,
        4538
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "695": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4260,
        4538
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC64"
    },
    "698": {
      "fn": "TokenFarm.tokenIsAllowed",
      "jump": "i",
      "offset": [
        4260,
        4538
      ],
      "op": "JUMP",
      "path": "4"
    },
    "699": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4260,
        4538
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "700": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4260,
        4538
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "702": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4260,
        4538
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "703": {
      "op": "SWAP1"
    },
    "704": {
      "op": "ISZERO"
    },
    "705": {
      "op": "ISZERO"
    },
    "706": {
      "op": "DUP2"
    },
    "707": {
      "op": "MSTORE"
    },
    "708": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "710": {
      "op": "ADD"
    },
    "711": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4260,
        4538
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x162"
    },
    "714": {
      "op": "JUMP"
    },
    "715": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3172,
        3279
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "716": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3172,
        3279
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2D3"
    },
    "719": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3172,
        3279
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCCE"
    },
    "722": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "jump": "i",
      "offset": [
        3172,
        3279
      ],
      "op": "JUMP",
      "path": "4"
    },
    "723": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3172,
        3279
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "724": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3172,
        3279
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "726": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3172,
        3279
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "727": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3172,
        3279
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x162"
    },
    "730": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3172,
        3279
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "731": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3172,
        3279
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "732": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3172,
        3279
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10E6"
    },
    "735": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "jump": "i",
      "offset": [
        3172,
        3279
      ],
      "op": "JUMP",
      "path": "4"
    },
    "736": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "737": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x139"
    },
    "740": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x2EE"
    },
    "743": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "CALLDATASIZE",
      "path": "0"
    },
    "744": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "746": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x1081"
    },
    "749": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "750": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "751": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD30"
    },
    "754": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMP",
      "path": "0"
    },
    "755": {
      "offset": [
        596,
        621
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "756": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        596,
        621
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14E"
    },
    "759": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        596,
        621
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x301"
    },
    "762": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        596,
        621
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "763": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        596,
        621
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "765": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        596,
        621
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x10CD"
    },
    "768": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        596,
        621
      ],
      "op": "JUMP",
      "path": "4"
    },
    "769": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        596,
        621
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "770": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        596,
        621
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDC8"
    },
    "773": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        596,
        621
      ],
      "op": "JUMP",
      "path": "4"
    },
    "774": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        967,
        1747
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "775": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1128,
        1129
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 1,
      "value": "0x0"
    },
    "777": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1119,
        1126
      ],
      "op": "DUP3",
      "path": "4"
    },
    "778": {
      "branch": 46,
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1119,
        1129
      ],
      "op": "GT",
      "path": "4"
    },
    "779": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1111,
        1162
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x35B"
    },
    "782": {
      "branch": 46,
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1111,
        1162
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "783": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1111,
        1162
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "785": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1111,
        1162
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "786": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "790": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "792": {
      "op": "SHL"
    },
    "793": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1111,
        1162
      ],
      "op": "DUP2",
      "path": "4"
    },
    "794": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1111,
        1162
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "795": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "797": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1111,
        1162
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "799": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1111,
        1162
      ],
      "op": "DUP3",
      "path": "4"
    },
    "800": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1111,
        1162
      ],
      "op": "ADD",
      "path": "4"
    },
    "801": {
      "op": "MSTORE"
    },
    "802": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "804": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "806": {
      "op": "DUP3"
    },
    "807": {
      "op": "ADD"
    },
    "808": {
      "op": "MSTORE"
    },
    "809": {
      "op": "PUSH32",
      "value": "0x416D6F756E74206D757374206265206D6F7265207468616E207A65726F000000"
    },
    "842": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "844": {
      "op": "DUP3"
    },
    "845": {
      "op": "ADD"
    },
    "846": {
      "op": "MSTORE"
    },
    "847": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "849": {
      "op": "ADD"
    },
    "850": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1111,
        1162
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "851": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1111,
        1162
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "853": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1111,
        1162
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "854": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1111,
        1162
      ],
      "op": "DUP1",
      "path": "4"
    },
    "855": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1111,
        1162
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "856": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1111,
        1162
      ],
      "op": "SUB",
      "path": "4"
    },
    "857": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1111,
        1162
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "858": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1111,
        1162
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "4"
    },
    "859": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1111,
        1162
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "860": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1180,
        1202
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 2,
      "value": "0x364"
    },
    "863": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1195,
        1201
      ],
      "op": "DUP2",
      "path": "4"
    },
    "864": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1180,
        1194
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC64"
    },
    "867": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        1180,
        1202
      ],
      "op": "JUMP",
      "path": "4"
    },
    "868": {
      "branch": 47,
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1180,
        1202
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "869": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1172,
        1226
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3A7"
    },
    "872": {
      "branch": 47,
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1172,
        1226
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "873": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1172,
        1226
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "875": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1172,
        1226
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "876": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "880": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "882": {
      "op": "SHL"
    },
    "883": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1172,
        1226
      ],
      "op": "DUP2",
      "path": "4"
    },
    "884": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1172,
        1226
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "885": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "887": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1172,
        1226
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "889": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1172,
        1226
      ],
      "op": "DUP3",
      "path": "4"
    },
    "890": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1172,
        1226
      ],
      "op": "ADD",
      "path": "4"
    },
    "891": {
      "op": "MSTORE"
    },
    "892": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "894": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "896": {
      "op": "DUP3"
    },
    "897": {
      "op": "ADD"
    },
    "898": {
      "op": "MSTORE"
    },
    "899": {
      "op": "PUSH20",
      "value": "0x151BDAD95B881A5CC81B9BDD08185B1B1BDDD959"
    },
    "920": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "922": {
      "op": "SHL"
    },
    "923": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "925": {
      "op": "DUP3"
    },
    "926": {
      "op": "ADD"
    },
    "927": {
      "op": "MSTORE"
    },
    "928": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "930": {
      "op": "ADD"
    },
    "931": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1172,
        1226
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x352"
    },
    "934": {
      "op": "JUMP"
    },
    "935": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1172,
        1226
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "936": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 3,
      "value": "0x40"
    },
    "938": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "939": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "944": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "946": {
      "op": "SHL"
    },
    "947": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "DUP2",
      "path": "4"
    },
    "948": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "949": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1383,
        1393
      ],
      "op": "CALLER",
      "path": "4"
    },
    "950": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "952": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "DUP3",
      "path": "4"
    },
    "953": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "ADD",
      "path": "4"
    },
    "954": {
      "op": "MSTORE"
    },
    "955": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1403,
        1407
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "956": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "958": {
      "op": "DUP3"
    },
    "959": {
      "op": "ADD"
    },
    "960": {
      "op": "MSTORE"
    },
    "961": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "963": {
      "op": "DUP2"
    },
    "964": {
      "op": "ADD"
    },
    "965": {
      "op": "DUP4"
    },
    "966": {
      "op": "SWAP1"
    },
    "967": {
      "op": "MSTORE"
    },
    "968": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "970": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "972": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "974": {
      "op": "SHL"
    },
    "975": {
      "op": "SUB"
    },
    "976": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1382
      ],
      "op": "DUP3",
      "path": "4"
    },
    "977": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1382
      ],
      "op": "AND",
      "path": "4"
    },
    "978": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1382
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "979": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1382
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x23B872DD"
    },
    "984": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1382
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "985": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "987": {
      "op": "ADD"
    },
    "988": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "990": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "992": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "993": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "DUP1",
      "path": "4"
    },
    "994": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "DUP4",
      "path": "4"
    },
    "995": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "SUB",
      "path": "4"
    },
    "996": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "DUP2",
      "path": "4"
    },
    "997": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "999": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1000": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "GAS",
      "path": "4"
    },
    "1001": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "CALL",
      "path": "4"
    },
    "1002": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1003": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1004": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1005": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3FA"
    },
    "1008": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1009": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1010": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1012": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1013": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "1014": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1015": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1017": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1018": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1019": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "POP",
      "path": "4"
    },
    "1020": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "POP",
      "path": "4"
    },
    "1021": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "POP",
      "path": "4"
    },
    "1022": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "POP",
      "path": "4"
    },
    "1023": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1025": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1026": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1027": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1029": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "NOT",
      "path": "4"
    },
    "1030": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1032": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1033": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "ADD",
      "path": "4"
    },
    "1034": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "AND",
      "path": "4"
    },
    "1035": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1036": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "ADD",
      "path": "4"
    },
    "1037": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1038": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1040": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1041": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "POP",
      "path": "4"
    },
    "1042": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1043": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "ADD",
      "path": "4"
    },
    "1044": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1045": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x41E"
    },
    "1048": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1049": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1050": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1133"
    },
    "1053": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        1355,
        1418
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1054": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1055": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1355,
        1418
      ],
      "op": "POP",
      "path": "4"
    },
    "1056": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1453,
        1494
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 4,
      "value": "0x429"
    },
    "1059": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1475,
        1485
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1060": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1487,
        1493
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1061": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1453,
        1474
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xDD8"
    },
    "1064": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        1453,
        1494
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1065": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1453,
        1494
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1066": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1068": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1072": {
      "op": "SHL"
    },
    "1073": {
      "op": "SUB"
    },
    "1074": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1558
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 5
    },
    "1075": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1558
      ],
      "op": "AND",
      "path": "4"
    },
    "1076": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1558
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1078": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1558
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1079": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1558
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1080": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1558
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1081": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1550
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1083": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1558
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1085": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1558
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1086": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1558
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1087": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1558
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1088": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1558
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1090": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1558
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1091": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1558
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1092": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1558
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1093": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1559,
        1569
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1094": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1570
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1095": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1570
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1096": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1570
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1097": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1570
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1098": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1570
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1099": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1570
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1100": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1570
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1101": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1581
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1102": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1581
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1103": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1574,
        1581
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1104": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1574,
        1581
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1105": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1558
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1106": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1581
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x45C"
    },
    "1109": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1581
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1110": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1574,
        1581
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1111": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1574,
        1581
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1112": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1581
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x116B"
    },
    "1115": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "i",
      "offset": [
        1536,
        1581
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1116": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1581
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1117": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1581
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1118": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1581
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1119": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1536,
        1581
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1120": {
      "op": "POP"
    },
    "1121": {
      "op": "POP"
    },
    "1122": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1675,
        1685
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1123": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1656,
        1686
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1125": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1656,
        1686
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1126": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1656,
        1686
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1127": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1656,
        1686
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1128": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1656,
        1674
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1130": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1656,
        1686
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1132": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1656,
        1686
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1133": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1656,
        1686
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1135": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1656,
        1686
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1136": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1656,
        1686
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1137": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1656,
        1686
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1138": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1690,
        1691
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1140": {
      "branch": 48,
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1656,
        1691
      ],
      "op": "EQ",
      "path": "4"
    },
    "1141": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1653,
        1741
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1142": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1653,
        1741
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4BC"
    },
    "1145": {
      "branch": 48,
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1653,
        1741
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1146": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1706,
        1713
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 6,
      "value": "0x6"
    },
    "1148": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1706,
        1730
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1149": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1706,
        1730
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1150": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1706,
        1730
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1152": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1706,
        1730
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1153": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1706,
        1730
      ],
      "op": "ADD",
      "path": "4"
    },
    "1154": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1706,
        1730
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1155": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1706,
        1730
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1156": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1158": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1706,
        1730
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1159": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1706,
        1730
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1160": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1706,
        1730
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1161": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1706,
        1730
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1162": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1706,
        1730
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F"
    },
    "1195": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1706,
        1730
      ],
      "op": "ADD",
      "path": "4"
    },
    "1196": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1706,
        1730
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1197": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1706,
        1730
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1198": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1200": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1202": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1204": {
      "op": "SHL"
    },
    "1205": {
      "op": "SUB"
    },
    "1206": {
      "op": "NOT"
    },
    "1207": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1706,
        1730
      ],
      "op": "AND",
      "path": "4"
    },
    "1208": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1719,
        1729
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1209": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1706,
        1730
      ],
      "op": "OR",
      "path": "4"
    },
    "1210": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1706,
        1730
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1211": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1706,
        1730
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1212": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        1653,
        1741
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1213": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        967,
        1747
      ],
      "op": "POP",
      "path": "4"
    },
    "1214": {
      "fn": "TokenFarm.stakeTokens",
      "offset": [
        967,
        1747
      ],
      "op": "POP",
      "path": "4"
    },
    "1215": {
      "fn": "TokenFarm.stakeTokens",
      "jump": "o",
      "offset": [
        967,
        1747
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1216": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2506,
        3166
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1217": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2607,
        2629
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 7,
      "value": "0x4C9"
    },
    "1220": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2622,
        2628
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1221": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2607,
        2621
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC64"
    },
    "1224": {
      "fn": "TokenFarm.unstakeTokens",
      "jump": "i",
      "offset": [
        2607,
        2629
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1225": {
      "branch": 49,
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2607,
        2629
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1226": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2599,
        2653
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x50C"
    },
    "1229": {
      "branch": 49,
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2599,
        2653
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1230": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2599,
        2653
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1232": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2599,
        2653
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1233": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1239": {
      "op": "SHL"
    },
    "1240": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2599,
        2653
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1241": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2599,
        2653
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1244": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2599,
        2653
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1246": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2599,
        2653
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1247": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2599,
        2653
      ],
      "op": "ADD",
      "path": "4"
    },
    "1248": {
      "op": "MSTORE"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1253": {
      "op": "DUP3"
    },
    "1254": {
      "op": "ADD"
    },
    "1255": {
      "op": "MSTORE"
    },
    "1256": {
      "op": "PUSH20",
      "value": "0x151BDAD95B881A5CC81B9BDD08185B1B1BDDD959"
    },
    "1277": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "1279": {
      "op": "SHL"
    },
    "1280": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1282": {
      "op": "DUP3"
    },
    "1283": {
      "op": "ADD"
    },
    "1284": {
      "op": "MSTORE"
    },
    "1285": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1287": {
      "op": "ADD"
    },
    "1288": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2599,
        2653
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x352"
    },
    "1291": {
      "op": "JUMP"
    },
    "1292": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2599,
        2653
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1293": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1295": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1297": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1299": {
      "op": "SHL"
    },
    "1300": {
      "op": "SUB"
    },
    "1301": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2714,
        2736
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1302": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2714,
        2736
      ],
      "op": "AND",
      "path": "4"
    },
    "1303": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2691,
        2711
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1305": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2714,
        2736
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1306": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2714,
        2736
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1307": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2714,
        2736
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1308": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2714,
        2728
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1310": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2714,
        2736
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1312": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2714,
        2736
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1313": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2714,
        2736
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1314": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2714,
        2736
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1315": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2714,
        2736
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1317": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2714,
        2736
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1318": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2714,
        2736
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1319": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2714,
        2736
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1320": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2737,
        2747
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1321": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2714,
        2748
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1322": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2714,
        2748
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1323": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2714,
        2748
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1324": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2714,
        2748
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1325": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2714,
        2748
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1326": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2714,
        2748
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1327": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2714,
        2748
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1328": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2714,
        2748
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1329": {
      "branch": 50,
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2801,
        2817
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 8
    },
    "1330": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2793,
        2840
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x573"
    },
    "1333": {
      "branch": 50,
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2793,
        2840
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1334": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2793,
        2840
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1336": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2793,
        2840
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1337": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1341": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1343": {
      "op": "SHL"
    },
    "1344": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2793,
        2840
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1345": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2793,
        2840
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1346": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1348": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2793,
        2840
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1350": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2793,
        2840
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1351": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2793,
        2840
      ],
      "op": "ADD",
      "path": "4"
    },
    "1352": {
      "op": "MSTORE"
    },
    "1353": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "1355": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1357": {
      "op": "DUP3"
    },
    "1358": {
      "op": "ADD"
    },
    "1359": {
      "op": "MSTORE"
    },
    "1360": {
      "op": "PUSH19",
      "value": "0x151BDAD95B881A5CC81B9BDD081CDD185AD959"
    },
    "1380": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "1382": {
      "op": "SHL"
    },
    "1383": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1385": {
      "op": "DUP3"
    },
    "1386": {
      "op": "ADD"
    },
    "1387": {
      "op": "MSTORE"
    },
    "1388": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1390": {
      "op": "ADD"
    },
    "1391": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2793,
        2840
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x352"
    },
    "1394": {
      "op": "JUMP"
    },
    "1395": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2793,
        2840
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1396": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 9,
      "value": "0x40"
    },
    "1398": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1399": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "1404": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1406": {
      "op": "SHL"
    },
    "1407": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1408": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1409": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2899,
        2909
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1410": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1412": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1413": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "ADD",
      "path": "4"
    },
    "1414": {
      "op": "MSTORE"
    },
    "1415": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1417": {
      "op": "DUP2"
    },
    "1418": {
      "op": "ADD"
    },
    "1419": {
      "op": "DUP3"
    },
    "1420": {
      "op": "SWAP1"
    },
    "1421": {
      "op": "MSTORE"
    },
    "1422": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1424": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1426": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1428": {
      "op": "SHL"
    },
    "1429": {
      "op": "SUB"
    },
    "1430": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2898
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1431": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2898
      ],
      "op": "AND",
      "path": "4"
    },
    "1432": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2898
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1433": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2898
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA9059CBB"
    },
    "1438": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2898
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1439": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1441": {
      "op": "ADD"
    },
    "1442": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1444": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1446": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1447": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1448": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1449": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "SUB",
      "path": "4"
    },
    "1450": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1451": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1453": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "DUP8",
      "path": "4"
    },
    "1454": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "GAS",
      "path": "4"
    },
    "1455": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "CALL",
      "path": "4"
    },
    "1456": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1457": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1458": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1459": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5C0"
    },
    "1462": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1463": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1464": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1466": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1467": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "1468": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1469": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1471": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1472": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1473": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "POP",
      "path": "4"
    },
    "1474": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "POP",
      "path": "4"
    },
    "1475": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "POP",
      "path": "4"
    },
    "1476": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "POP",
      "path": "4"
    },
    "1477": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1479": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1480": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1481": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1483": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "NOT",
      "path": "4"
    },
    "1484": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "1486": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1487": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "ADD",
      "path": "4"
    },
    "1488": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "AND",
      "path": "4"
    },
    "1489": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1490": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "ADD",
      "path": "4"
    },
    "1491": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1492": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1494": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1495": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "POP",
      "path": "4"
    },
    "1496": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1497": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "ADD",
      "path": "4"
    },
    "1498": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1499": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x5E4"
    },
    "1502": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1503": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1504": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1133"
    },
    "1507": {
      "fn": "TokenFarm.unstakeTokens",
      "jump": "i",
      "offset": [
        2875,
        2924
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1508": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2875,
        2924
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1509": {
      "op": "POP"
    },
    "1510": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1512": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1514": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1516": {
      "op": "SHL"
    },
    "1517": {
      "op": "SUB"
    },
    "1518": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2971,
        2993
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 10
    },
    "1519": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2971,
        2993
      ],
      "op": "AND",
      "path": "4"
    },
    "1520": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3008,
        3009
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1522": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2971,
        2993
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1523": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2971,
        2993
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1524": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2971,
        2993
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1525": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2971,
        2985
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1527": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2971,
        2993
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1529": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2971,
        2993
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1530": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2971,
        2993
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1531": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2971,
        2993
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1532": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2971,
        2993
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1534": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2971,
        2993
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1535": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2971,
        2993
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1536": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2971,
        2993
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1537": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2994,
        3004
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1538": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2971,
        3005
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1539": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2971,
        3005
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1540": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2971,
        3005
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1541": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2971,
        3005
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1542": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2971,
        3005
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1543": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2971,
        3005
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1544": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2971,
        3005
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1545": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2971,
        3009
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1546": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2971,
        3009
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1547": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2971,
        3009
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1548": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3060,
        3078
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 11,
      "value": "0x2"
    },
    "1550": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3060,
        3090
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1551": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3060,
        3090
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1552": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3060,
        3090
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1553": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3060,
        3090
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1554": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3060,
        3090
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1555": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3060,
        3095
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1556": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3060,
        3095
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1557": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2971,
        2985
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1558": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2971,
        2985
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1559": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3060,
        3090
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1560": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3060,
        3090
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1561": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3060,
        3095
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x623"
    },
    "1564": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3060,
        3095
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1565": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2971,
        2985
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1566": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        2971,
        2985
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1567": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3060,
        3095
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1183"
    },
    "1570": {
      "fn": "TokenFarm.unstakeTokens",
      "jump": "i",
      "offset": [
        3060,
        3095
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1571": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3060,
        3095
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1572": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3060,
        3095
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1573": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3060,
        3095
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1574": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3060,
        3095
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1575": {
      "op": "POP"
    },
    "1576": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3135,
        3159
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 12,
      "value": "0x4BC"
    },
    "1579": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3135,
        3159
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1580": {
      "op": "POP"
    },
    "1581": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3148,
        3158
      ],
      "op": "CALLER",
      "path": "4"
    },
    "1582": {
      "fn": "TokenFarm.unstakeTokens",
      "offset": [
        3135,
        3147
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE43"
    },
    "1585": {
      "fn": "TokenFarm.unstakeTokens",
      "jump": "i",
      "offset": [
        3135,
        3159
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1586": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1753,
        2025
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1587": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "1589": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "1590": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1592": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1594": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1596": {
      "op": "SHL"
    },
    "1597": {
      "op": "SUB"
    },
    "1598": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "1599": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2",
      "statement": 13
    },
    "1600": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "1601": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x65C"
    },
    "1604": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "1605": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "1607": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "1608": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1612": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1614": {
      "op": "SHL"
    },
    "1615": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "1616": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "1617": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "1619": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "1620": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x352"
    },
    "1623": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "1624": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x119A"
    },
    "1627": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "1628": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "1629": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1631": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1633": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1635": {
      "op": "SHL"
    },
    "1636": {
      "op": "SUB"
    },
    "1637": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1865,
        1885
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 14
    },
    "1638": {
      "branch": 51,
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1865,
        1885
      ],
      "op": "AND",
      "path": "4"
    },
    "1639": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1857,
        1918
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6B2"
    },
    "1642": {
      "branch": 51,
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1857,
        1918
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1643": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1857,
        1918
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1645": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1857,
        1918
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1646": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1650": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1652": {
      "op": "SHL"
    },
    "1653": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1857,
        1918
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1654": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1857,
        1918
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1655": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1657": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1857,
        1918
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1659": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1857,
        1918
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1660": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1857,
        1918
      ],
      "op": "ADD",
      "path": "4"
    },
    "1661": {
      "op": "MSTORE"
    },
    "1662": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "1664": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1666": {
      "op": "DUP3"
    },
    "1667": {
      "op": "ADD"
    },
    "1668": {
      "op": "MSTORE"
    },
    "1669": {
      "op": "PUSH32",
      "value": "0x546F6B656E206D75737420626520612076616C69642061646472657373000000"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1704": {
      "op": "DUP3"
    },
    "1705": {
      "op": "ADD"
    },
    "1706": {
      "op": "MSTORE"
    },
    "1707": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1709": {
      "op": "ADD"
    },
    "1710": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1857,
        1918
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x352"
    },
    "1713": {
      "op": "JUMP"
    },
    "1714": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1857,
        1918
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1715": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1937,
        1959
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 15,
      "value": "0x6BB"
    },
    "1718": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1952,
        1958
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1719": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1937,
        1951
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC64"
    },
    "1722": {
      "fn": "TokenFarm.addAllowedToken",
      "jump": "i",
      "offset": [
        1937,
        1959
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1723": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1937,
        1959
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1724": {
      "branch": 52,
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1936,
        1959
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1725": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1928,
        1982
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x6FE"
    },
    "1728": {
      "branch": 52,
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1928,
        1982
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1729": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1928,
        1982
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1731": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1928,
        1982
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1732": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1736": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1738": {
      "op": "SHL"
    },
    "1739": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1928,
        1982
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1740": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1928,
        1982
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1741": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1743": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1928,
        1982
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1745": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1928,
        1982
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1746": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1928,
        1982
      ],
      "op": "ADD",
      "path": "4"
    },
    "1747": {
      "op": "MSTORE"
    },
    "1748": {
      "op": "PUSH1",
      "value": "0x13"
    },
    "1750": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1752": {
      "op": "DUP3"
    },
    "1753": {
      "op": "ADD"
    },
    "1754": {
      "op": "MSTORE"
    },
    "1755": {
      "op": "PUSH19",
      "value": "0x151BDAD95B88185B1C9958591E481859191959"
    },
    "1775": {
      "op": "PUSH1",
      "value": "0x6A"
    },
    "1777": {
      "op": "SHL"
    },
    "1778": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1780": {
      "op": "DUP3"
    },
    "1781": {
      "op": "ADD"
    },
    "1782": {
      "op": "MSTORE"
    },
    "1783": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1785": {
      "op": "ADD"
    },
    "1786": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1928,
        1982
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x352"
    },
    "1789": {
      "op": "JUMP"
    },
    "1790": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1928,
        1982
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1791": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1992,
        2005
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 16,
      "value": "0x4"
    },
    "1793": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1992,
        2018
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1794": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1992,
        2018
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1795": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1992,
        2018
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1797": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1992,
        2018
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1798": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1992,
        2018
      ],
      "op": "ADD",
      "path": "4"
    },
    "1799": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1992,
        2018
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1800": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1992,
        2018
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1801": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1803": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1992,
        2018
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1804": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1992,
        2018
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1805": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1992,
        2018
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1806": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1992,
        2018
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1807": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1992,
        2018
      ],
      "op": "PUSH32",
      "path": "4",
      "value": "0x8A35ACFBC15FF81A39AE7D344FD709F28E8600B4AA8C65C6B64BFE7FE36BD19B"
    },
    "1840": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1992,
        2018
      ],
      "op": "ADD",
      "path": "4"
    },
    "1841": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1992,
        2018
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1842": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1992,
        2018
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1843": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1845": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1847": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1849": {
      "op": "SHL"
    },
    "1850": {
      "op": "SUB"
    },
    "1851": {
      "op": "NOT"
    },
    "1852": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1992,
        2018
      ],
      "op": "AND",
      "path": "4"
    },
    "1853": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1855": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1857": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1859": {
      "op": "SHL"
    },
    "1860": {
      "op": "SUB"
    },
    "1861": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1992,
        2018
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1862": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1992,
        2018
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1863": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1992,
        2018
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1864": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1992,
        2018
      ],
      "op": "AND",
      "path": "4"
    },
    "1865": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1992,
        2018
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1866": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1992,
        2018
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1867": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1992,
        2018
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1868": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1992,
        2018
      ],
      "op": "OR",
      "path": "4"
    },
    "1869": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1992,
        2018
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1870": {
      "fn": "TokenFarm.addAllowedToken",
      "offset": [
        1992,
        2018
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1871": {
      "fn": "TokenFarm.addAllowedToken",
      "jump": "o",
      "offset": [
        1753,
        2025
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1872": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5011,
        5575
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1873": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1875": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1877": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1879": {
      "op": "SHL"
    },
    "1880": {
      "op": "SUB"
    },
    "1881": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5177,
        5202
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1882": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5177,
        5202
      ],
      "op": "AND",
      "path": "4"
    },
    "1883": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5107,
        5114
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1885": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5177,
        5202
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1886": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5177,
        5202
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1887": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5177,
        5202
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1888": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5177,
        5195
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "1890": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5177,
        5202
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1892": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5177,
        5202
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1893": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5177,
        5202
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1895": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5177,
        5202
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1896": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5177,
        5202
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1897": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5177,
        5202
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1898": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5174,
        5241
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x775"
    },
    "1901": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5174,
        5241
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1902": {
      "op": "POP"
    },
    "1903": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5229,
        5230
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 17,
      "value": "0x0"
    },
    "1905": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5222,
        5230
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7D0"
    },
    "1908": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5222,
        5230
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1909": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5174,
        5241
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1910": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5443,
        5458
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1912": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5460,
        5473
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1913": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5477,
        5498
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x781"
    },
    "1916": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5491,
        5497
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1917": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5477,
        5490
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB63"
    },
    "1920": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "jump": "i",
      "offset": [
        5477,
        5498
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1921": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5477,
        5498
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1922": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5441,
        5498
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1923": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5441,
        5498
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1924": {
      "op": "POP"
    },
    "1925": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5441,
        5498
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1926": {
      "op": "POP"
    },
    "1927": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5555,
        5567
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 18,
      "value": "0x791"
    },
    "1930": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5441,
        5498
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1931": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5555,
        5557
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA"
    },
    "1933": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5555,
        5567
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12B3"
    },
    "1936": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "jump": "i",
      "offset": [
        5555,
        5567
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1937": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5555,
        5567
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1938": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1940": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1942": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1944": {
      "op": "SHL"
    },
    "1945": {
      "op": "SUB"
    },
    "1946": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5525,
        5547
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1947": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5525,
        5547
      ],
      "op": "DUP7",
      "path": "4"
    },
    "1948": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5525,
        5547
      ],
      "op": "AND",
      "path": "4"
    },
    "1949": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5525,
        5547
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1951": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5525,
        5547
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1952": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5525,
        5547
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1953": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5525,
        5547
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1954": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5525,
        5539
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "1956": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5525,
        5547
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "1958": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5525,
        5547
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1959": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5525,
        5547
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1960": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5525,
        5547
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1961": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5525,
        5547
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1963": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5525,
        5547
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1964": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5525,
        5547
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1965": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5525,
        5547
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1966": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5525,
        5554
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "1967": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5525,
        5554
      ],
      "op": "DUP11",
      "path": "4"
    },
    "1968": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5525,
        5554
      ],
      "op": "AND",
      "path": "4"
    },
    "1969": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5525,
        5554
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1970": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5525,
        5554
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1971": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5525,
        5554
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1972": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5525,
        5554
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1973": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5525,
        5554
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1974": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5525,
        5554
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "1975": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5525,
        5554
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1976": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5512,
        5554
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7C1"
    },
    "1979": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5512,
        5554
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1980": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5512,
        5522
      ],
      "op": "DUP5",
      "path": "4"
    },
    "1981": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5512,
        5554
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12BF"
    },
    "1984": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "jump": "i",
      "offset": [
        5512,
        5554
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1985": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5512,
        5554
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1986": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5512,
        5567
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7CB"
    },
    "1989": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5512,
        5567
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1990": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5512,
        5567
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1991": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5512,
        5567
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12DE"
    },
    "1994": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "jump": "i",
      "offset": [
        5512,
        5567
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1995": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5512,
        5567
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1996": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5504,
        5568
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1997": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5504,
        5568
      ],
      "op": "POP",
      "path": "4"
    },
    "1998": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5504,
        5568
      ],
      "op": "POP",
      "path": "4"
    },
    "1999": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5504,
        5568
      ],
      "op": "POP",
      "path": "4"
    },
    "2000": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5011,
        5575
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2001": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5011,
        5575
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2002": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5011,
        5575
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2003": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5011,
        5575
      ],
      "op": "POP",
      "path": "4"
    },
    "2004": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        5011,
        5575
      ],
      "op": "POP",
      "path": "4"
    },
    "2005": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "jump": "o",
      "offset": [
        5011,
        5575
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2006": {
      "offset": [
        627,
        655
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2007": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        627,
        655
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x7"
    },
    "2009": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        627,
        655
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2010": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        627,
        655
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2011": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        627,
        655
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2012": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        627,
        655
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2013": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        627,
        655
      ],
      "op": "LT",
      "path": "4"
    },
    "2014": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        627,
        655
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7E6"
    },
    "2017": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        627,
        655
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2018": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        627,
        655
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2020": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        627,
        655
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2021": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        627,
        655
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2022": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        627,
        655
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2023": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        627,
        655
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2025": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        627,
        655
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2026": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        627,
        655
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2027": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        627,
        655
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2028": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        627,
        655
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2030": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        627,
        655
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2031": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        627,
        655
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2032": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        627,
        655
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2033": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        627,
        655
      ],
      "op": "ADD",
      "path": "4"
    },
    "2034": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        627,
        655
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2035": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2037": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2039": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2041": {
      "op": "SHL"
    },
    "2042": {
      "op": "SUB"
    },
    "2043": {
      "offset": [
        627,
        655
      ],
      "op": "AND",
      "path": "4"
    },
    "2044": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "offset": [
        627,
        655
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2045": {
      "op": "POP"
    },
    "2046": {
      "offset": [
        627,
        655
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2047": {
      "fn": "TokenFarm.getUserSingleTokenUsdValue",
      "jump": "o",
      "offset": [
        627,
        655
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2048": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2031,
        2500
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2049": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2051": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2052": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2054": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2056": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2058": {
      "op": "SHL"
    },
    "2059": {
      "op": "SUB"
    },
    "2060": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2061": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2062": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2063": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x82A"
    },
    "2066": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2067": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2069": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2070": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2074": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2076": {
      "op": "SHL"
    },
    "2077": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2078": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2079": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2081": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2082": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x352"
    },
    "2085": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2086": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x119A"
    },
    "2089": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2090": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2091": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2138,
        2158
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2093": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2134,
        2494
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2094": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2175,
        2182
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "2096": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2175,
        2189
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2097": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2162,
        2189
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2098": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2162,
        2189
      ],
      "op": "LT",
      "path": "4"
    },
    "2099": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2134,
        2494
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2100": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2134,
        2494
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8FA"
    },
    "2103": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2134,
        2494
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2104": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2221,
        2238
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2106": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2241,
        2248
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "2108": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2249,
        2261
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2109": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2241,
        2262
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2110": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2241,
        2262
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2111": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2241,
        2262
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2112": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2241,
        2262
      ],
      "op": "LT",
      "path": "4"
    },
    "2113": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2241,
        2262
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x84C"
    },
    "2116": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2241,
        2262
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2117": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2241,
        2262
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x84C"
    },
    "2120": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2241,
        2262
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1300"
    },
    "2123": {
      "fn": "TokenFarm.issueTokens",
      "jump": "i",
      "offset": [
        2241,
        2262
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2124": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2241,
        2262
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2125": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2241,
        2262
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2127": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2241,
        2262
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2128": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2241,
        2262
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2129": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2241,
        2262
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2130": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2241,
        2262
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2132": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2241,
        2262
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2133": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2241,
        2262
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2134": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2241,
        2262
      ],
      "op": "ADD",
      "path": "4"
    },
    "2135": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2241,
        2262
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2142": {
      "op": "SHL"
    },
    "2143": {
      "op": "SUB"
    },
    "2144": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2241,
        2262
      ],
      "op": "AND",
      "path": "4"
    },
    "2145": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2241,
        2262
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2146": {
      "op": "POP"
    },
    "2147": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2298,
        2326
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x86B"
    },
    "2150": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2241,
        2262
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2151": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2298,
        2315
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA42"
    },
    "2154": {
      "fn": "TokenFarm.issueTokens",
      "jump": "i",
      "offset": [
        2298,
        2326
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2155": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2298,
        2326
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2156": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2447
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 19,
      "value": "0x8"
    },
    "2158": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2447
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2159": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2161": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2162": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "2167": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2169": {
      "op": "SHL"
    },
    "2170": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2171": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2172": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2174": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2176": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2178": {
      "op": "SHL"
    },
    "2179": {
      "op": "SUB"
    },
    "2180": {
      "op": "DUP6"
    },
    "2181": {
      "op": "DUP2"
    },
    "2182": {
      "op": "AND"
    },
    "2183": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2185": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2186": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "ADD",
      "path": "4"
    },
    "2187": {
      "op": "MSTORE"
    },
    "2188": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2190": {
      "op": "DUP3"
    },
    "2191": {
      "op": "ADD"
    },
    "2192": {
      "op": "DUP5"
    },
    "2193": {
      "op": "SWAP1"
    },
    "2194": {
      "op": "MSTORE"
    },
    "2195": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2276,
        2326
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2196": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2276,
        2326
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2197": {
      "op": "POP"
    },
    "2198": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2447
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2199": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2447
      ],
      "op": "AND",
      "path": "4"
    },
    "2200": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2447
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2201": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2456
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xA9059CBB"
    },
    "2206": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2456
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2207": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2209": {
      "op": "ADD"
    },
    "2210": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2212": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2214": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2215": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2216": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2217": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "SUB",
      "path": "4"
    },
    "2218": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2219": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2221": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "DUP8",
      "path": "4"
    },
    "2222": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "GAS",
      "path": "4"
    },
    "2223": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "CALL",
      "path": "4"
    },
    "2224": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2225": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2226": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2227": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8C0"
    },
    "2230": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2231": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2232": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2234": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2235": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "2236": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2237": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2239": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "REVERT",
      "path": "4"
    },
    "2240": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2241": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "POP",
      "path": "4"
    },
    "2242": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "POP",
      "path": "4"
    },
    "2243": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "POP",
      "path": "4"
    },
    "2244": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "POP",
      "path": "4"
    },
    "2245": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2247": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2248": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "2249": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2251": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "NOT",
      "path": "4"
    },
    "2252": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "2254": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2255": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "ADD",
      "path": "4"
    },
    "2256": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "AND",
      "path": "4"
    },
    "2257": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2258": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "ADD",
      "path": "4"
    },
    "2259": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2260": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2262": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2263": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "POP",
      "path": "4"
    },
    "2264": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2265": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "ADD",
      "path": "4"
    },
    "2266": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2267": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8E4"
    },
    "2270": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2271": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2272": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1133"
    },
    "2275": {
      "fn": "TokenFarm.issueTokens",
      "jump": "i",
      "offset": [
        2437,
        2483
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2276": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2277": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2437,
        2483
      ],
      "op": "POP",
      "path": "4"
    },
    "2278": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2207,
        2494
      ],
      "op": "POP",
      "path": "4"
    },
    "2279": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2207,
        2494
      ],
      "op": "POP",
      "path": "4"
    },
    "2280": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2191,
        2205
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 20
    },
    "2281": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2191,
        2205
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2282": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2191,
        2205
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x8F2"
    },
    "2285": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2191,
        2205
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2286": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2191,
        2205
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1316"
    },
    "2289": {
      "fn": "TokenFarm.issueTokens",
      "jump": "i",
      "offset": [
        2191,
        2205
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2290": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2191,
        2205
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2291": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2191,
        2205
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2292": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2191,
        2205
      ],
      "op": "POP",
      "path": "4"
    },
    "2293": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2191,
        2205
      ],
      "op": "POP",
      "path": "4"
    },
    "2294": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2134,
        2494
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x82D"
    },
    "2297": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2134,
        2494
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2298": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2134,
        2494
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2299": {
      "fn": "TokenFarm.issueTokens",
      "offset": [
        2134,
        2494
      ],
      "op": "POP",
      "path": "4"
    },
    "2300": {
      "fn": "TokenFarm.issueTokens",
      "jump": "o",
      "offset": [
        2031,
        2500
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2301": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2302": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2304": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2305": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2307": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2309": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2311": {
      "op": "SHL"
    },
    "2312": {
      "op": "SUB"
    },
    "2313": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2314": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2315": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2316": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x927"
    },
    "2319": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2320": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2322": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2323": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2327": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2329": {
      "op": "SHL"
    },
    "2330": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2331": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2332": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2334": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2335": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x352"
    },
    "2338": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2339": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x119A"
    },
    "2342": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2343": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2344": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 21,
      "value": "0x931"
    },
    "2347": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1687,
        1688
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2349": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1678
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF84"
    },
    "2352": {
      "fn": "Ownable.renounceOwnership",
      "jump": "i",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2353": {
      "fn": "Ownable.renounceOwnership",
      "offset": [
        1669,
        1690
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2354": {
      "fn": "Ownable.renounceOwnership",
      "jump": "o",
      "offset": [
        1605,
        1697
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2355": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6007,
        6299
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2356": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "2358": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "2359": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2361": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2363": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2365": {
      "op": "SHL"
    },
    "2366": {
      "op": "SUB"
    },
    "2367": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "2368": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2"
    },
    "2369": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "2370": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x95D"
    },
    "2373": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "2374": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "2376": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "2377": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2381": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2383": {
      "op": "SHL"
    },
    "2384": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "2385": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "2386": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "2388": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "2389": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x352"
    },
    "2392": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "2393": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x119A"
    },
    "2396": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "2397": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "2398": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2400": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2402": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2404": {
      "op": "SHL"
    },
    "2405": {
      "op": "SUB"
    },
    "2406": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6107,
        6127
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 22
    },
    "2407": {
      "branch": 53,
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6107,
        6127
      ],
      "op": "AND",
      "path": "4"
    },
    "2408": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6099,
        6160
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x9B3"
    },
    "2411": {
      "branch": 53,
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6099,
        6160
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2412": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6099,
        6160
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2414": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6099,
        6160
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2415": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2419": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2421": {
      "op": "SHL"
    },
    "2422": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6099,
        6160
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2423": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6099,
        6160
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2424": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2426": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6099,
        6160
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2428": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6099,
        6160
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2429": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6099,
        6160
      ],
      "op": "ADD",
      "path": "4"
    },
    "2430": {
      "op": "MSTORE"
    },
    "2431": {
      "op": "PUSH1",
      "value": "0x1D"
    },
    "2433": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2435": {
      "op": "DUP3"
    },
    "2436": {
      "op": "ADD"
    },
    "2437": {
      "op": "MSTORE"
    },
    "2438": {
      "op": "PUSH32",
      "value": "0x546F6B656E206D75737420626520612076616C69642061646472657373000000"
    },
    "2471": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2473": {
      "op": "DUP3"
    },
    "2474": {
      "op": "ADD"
    },
    "2475": {
      "op": "MSTORE"
    },
    "2476": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2478": {
      "op": "ADD"
    },
    "2479": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6099,
        6160
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x352"
    },
    "2482": {
      "op": "JUMP"
    },
    "2483": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6099,
        6160
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2484": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2486": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2488": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2490": {
      "op": "SHL"
    },
    "2491": {
      "op": "SUB"
    },
    "2492": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6178,
        6202
      ],
      "op": "DUP2",
      "path": "4",
      "statement": 23
    },
    "2493": {
      "branch": 54,
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6178,
        6202
      ],
      "op": "AND",
      "path": "4"
    },
    "2494": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6170,
        6240
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA14"
    },
    "2497": {
      "branch": 54,
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6170,
        6240
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2498": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6170,
        6240
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2500": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6170,
        6240
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2501": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2505": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2507": {
      "op": "SHL"
    },
    "2508": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6170,
        6240
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2509": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6170,
        6240
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2510": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2512": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6170,
        6240
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2514": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6170,
        6240
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2515": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6170,
        6240
      ],
      "op": "ADD",
      "path": "4"
    },
    "2516": {
      "op": "MSTORE"
    },
    "2517": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "2519": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2521": {
      "op": "DUP3"
    },
    "2522": {
      "op": "ADD"
    },
    "2523": {
      "op": "MSTORE"
    },
    "2524": {
      "op": "PUSH32",
      "value": "0x50726963652066656564206D75737420626520612076616C6964206164647265"
    },
    "2557": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2559": {
      "op": "DUP3"
    },
    "2560": {
      "op": "ADD"
    },
    "2561": {
      "op": "MSTORE"
    },
    "2562": {
      "op": "PUSH2",
      "value": "0x7373"
    },
    "2565": {
      "op": "PUSH1",
      "value": "0xF0"
    },
    "2567": {
      "op": "SHL"
    },
    "2568": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2570": {
      "op": "DUP3"
    },
    "2571": {
      "op": "ADD"
    },
    "2572": {
      "op": "MSTORE"
    },
    "2573": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "2575": {
      "op": "ADD"
    },
    "2576": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6170,
        6240
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x352"
    },
    "2579": {
      "op": "JUMP"
    },
    "2580": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6170,
        6240
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2581": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2583": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2585": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2587": {
      "op": "SHL"
    },
    "2588": {
      "op": "SUB"
    },
    "2589": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6250,
        6279
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 24
    },
    "2590": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6250,
        6279
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2591": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6250,
        6279
      ],
      "op": "AND",
      "path": "4"
    },
    "2592": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6250,
        6279
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2594": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6250,
        6279
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2595": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6250,
        6279
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2596": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6250,
        6279
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2597": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6250,
        6271
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "2599": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6250,
        6279
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2601": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6250,
        6279
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2602": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6250,
        6279
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2604": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6250,
        6279
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2605": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6250,
        6279
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2606": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6250,
        6292
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2607": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6250,
        6292
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2608": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2610": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2612": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2614": {
      "op": "SHL"
    },
    "2615": {
      "op": "SUB"
    },
    "2616": {
      "op": "NOT"
    },
    "2617": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6250,
        6292
      ],
      "op": "AND",
      "path": "4"
    },
    "2618": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6250,
        6292
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2619": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6250,
        6292
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2620": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6250,
        6292
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2621": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6250,
        6292
      ],
      "op": "AND",
      "path": "4"
    },
    "2622": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6250,
        6292
      ],
      "op": "OR",
      "path": "4"
    },
    "2623": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6250,
        6292
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2624": {
      "fn": "TokenFarm.setPriceFeedContract",
      "offset": [
        6250,
        6292
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "2625": {
      "fn": "TokenFarm.setPriceFeedContract",
      "jump": "o",
      "offset": [
        6007,
        6299
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2626": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4544,
        5005
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2627": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4606,
        4613
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2629": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4606,
        4613
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2630": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2632": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2634": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2636": {
      "op": "SHL"
    },
    "2637": {
      "op": "SUB"
    },
    "2638": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4664,
        4683
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 25
    },
    "2639": {
      "branch": 55,
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4664,
        4683
      ],
      "op": "AND",
      "path": "4"
    },
    "2640": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4656,
        4715
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA9B"
    },
    "2643": {
      "branch": 55,
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4656,
        4715
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2644": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4656,
        4715
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2646": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4656,
        4715
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2647": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2651": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2653": {
      "op": "SHL"
    },
    "2654": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4656,
        4715
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2655": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4656,
        4715
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2656": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2658": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4656,
        4715
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2660": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4656,
        4715
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2661": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4656,
        4715
      ],
      "op": "ADD",
      "path": "4"
    },
    "2662": {
      "op": "MSTORE"
    },
    "2663": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "2665": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2667": {
      "op": "DUP3"
    },
    "2668": {
      "op": "ADD"
    },
    "2669": {
      "op": "MSTORE"
    },
    "2670": {
      "op": "PUSH32",
      "value": "0x55736572206D75737420626520612076616C6964206164647265737300000000"
    },
    "2703": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2705": {
      "op": "DUP3"
    },
    "2706": {
      "op": "ADD"
    },
    "2707": {
      "op": "MSTORE"
    },
    "2708": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2710": {
      "op": "ADD"
    },
    "2711": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4656,
        4715
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x352"
    },
    "2714": {
      "op": "JUMP"
    },
    "2715": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4656,
        4715
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2716": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2718": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2720": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2722": {
      "op": "SHL"
    },
    "2723": {
      "op": "SUB"
    },
    "2724": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4733,
        4758
      ],
      "op": "DUP4",
      "path": "4",
      "statement": 26
    },
    "2725": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4733,
        4758
      ],
      "op": "AND",
      "path": "4"
    },
    "2726": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4761,
        4762
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2728": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4733,
        4758
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2729": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4733,
        4758
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2730": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4733,
        4758
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2731": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4733,
        4751
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "2733": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4733,
        4758
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2735": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4733,
        4758
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2736": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4733,
        4758
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2738": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4733,
        4758
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2739": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4733,
        4758
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2740": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4733,
        4758
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2741": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4725,
        4791
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB00"
    },
    "2744": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4725,
        4791
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2745": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4725,
        4791
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2747": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4725,
        4791
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2748": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "2752": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "2754": {
      "op": "SHL"
    },
    "2755": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4725,
        4791
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2756": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4725,
        4791
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2757": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2759": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4725,
        4791
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2761": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4725,
        4791
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2762": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4725,
        4791
      ],
      "op": "ADD",
      "path": "4"
    },
    "2763": {
      "op": "MSTORE"
    },
    "2764": {
      "op": "PUSH1",
      "value": "0x19"
    },
    "2766": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2768": {
      "op": "DUP3"
    },
    "2769": {
      "op": "ADD"
    },
    "2770": {
      "op": "MSTORE"
    },
    "2771": {
      "op": "PUSH32",
      "value": "0x5573657220686173206E6F20746F6B656E73207374616B656400000000000000"
    },
    "2804": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "2806": {
      "op": "DUP3"
    },
    "2807": {
      "op": "ADD"
    },
    "2808": {
      "op": "MSTORE"
    },
    "2809": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2811": {
      "op": "ADD"
    },
    "2812": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4725,
        4791
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x352"
    },
    "2815": {
      "op": "JUMP"
    },
    "2816": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4725,
        4791
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2817": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4805,
        4823
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2819": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4801,
        4972
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2820": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4838,
        4851
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2822": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4838,
        4858
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2823": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4827,
        4858
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2824": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4827,
        4858
      ],
      "op": "LT",
      "path": "4"
    },
    "2825": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4801,
        4972
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2826": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4801,
        4972
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB5C"
    },
    "2829": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4801,
        4972
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2830": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4901,
        4961
      ],
      "op": "PUSH2",
      "path": "4",
      "statement": 27,
      "value": "0xB3E"
    },
    "2833": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4928,
        4933
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2834": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4935,
        4948
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2836": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4949,
        4959
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2837": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4935,
        4960
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2838": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4935,
        4960
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2839": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4935,
        4960
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2840": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4935,
        4960
      ],
      "op": "LT",
      "path": "4"
    },
    "2841": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4935,
        4960
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB24"
    },
    "2844": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4935,
        4960
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "2845": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4935,
        4960
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB24"
    },
    "2848": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4935,
        4960
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1300"
    },
    "2851": {
      "fn": "TokenFarm.getUserTotalValue",
      "jump": "i",
      "offset": [
        4935,
        4960
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2852": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4935,
        4960
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2853": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4935,
        4960
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2855": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4935,
        4960
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2856": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4935,
        4960
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2857": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4935,
        4960
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2858": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4935,
        4960
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2860": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4935,
        4960
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2861": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4935,
        4960
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2862": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4935,
        4960
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2863": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4935,
        4960
      ],
      "op": "ADD",
      "path": "4"
    },
    "2864": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4935,
        4960
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2869": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2871": {
      "op": "SHL"
    },
    "2872": {
      "op": "SUB"
    },
    "2873": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4935,
        4960
      ],
      "op": "AND",
      "path": "4"
    },
    "2874": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4901,
        4927
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x750"
    },
    "2877": {
      "fn": "TokenFarm.getUserTotalValue",
      "jump": "i",
      "offset": [
        4901,
        4961
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2878": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4901,
        4961
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2879": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4887,
        4961
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB48"
    },
    "2882": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4887,
        4961
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2883": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4887,
        4961
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2884": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4887,
        4961
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x116B"
    },
    "2887": {
      "fn": "TokenFarm.getUserTotalValue",
      "jump": "i",
      "offset": [
        4887,
        4961
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2888": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4887,
        4961
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2889": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4887,
        4961
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2890": {
      "op": "POP"
    },
    "2891": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4860,
        4872
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 28
    },
    "2892": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4860,
        4872
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB54"
    },
    "2895": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4860,
        4872
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2896": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4860,
        4872
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1316"
    },
    "2899": {
      "fn": "TokenFarm.getUserTotalValue",
      "jump": "i",
      "offset": [
        4860,
        4872
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2900": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4860,
        4872
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2901": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4860,
        4872
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2902": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4860,
        4872
      ],
      "op": "POP",
      "path": "4"
    },
    "2903": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4860,
        4872
      ],
      "op": "POP",
      "path": "4"
    },
    "2904": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4801,
        4972
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB03"
    },
    "2907": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4801,
        4972
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2908": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4801,
        4972
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2909": {
      "op": "POP"
    },
    "2910": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4988,
        4998
      ],
      "op": "SWAP3",
      "path": "4",
      "statement": 29
    },
    "2911": {
      "fn": "TokenFarm.getUserTotalValue",
      "offset": [
        4544,
        5005
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2912": {
      "op": "POP"
    },
    "2913": {
      "op": "POP"
    },
    "2914": {
      "fn": "TokenFarm.getUserTotalValue",
      "jump": "o",
      "offset": [
        4544,
        5005
      ],
      "op": "JUMP",
      "path": "4"
    },
    "2915": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5581,
        6001
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "2916": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2918": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2920": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2922": {
      "op": "SHL"
    },
    "2923": {
      "op": "SUB"
    },
    "2924": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5723,
        5752
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2925": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5723,
        5752
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2926": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5723,
        5752
      ],
      "op": "AND",
      "path": "4"
    },
    "2927": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5640,
        5647
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "2929": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5723,
        5752
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2930": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5723,
        5752
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2931": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5723,
        5752
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2932": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5723,
        5744
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "2934": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5723,
        5752
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "2936": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5723,
        5752
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2937": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5723,
        5752
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "2939": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5723,
        5752
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2940": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5723,
        5752
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2941": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5723,
        5752
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "2942": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5723,
        5752
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "2943": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2944": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2945": {
      "op": "PUSH4",
      "value": "0x3FABE5A3"
    },
    "2950": {
      "op": "PUSH1",
      "value": "0xE2"
    },
    "2952": {
      "op": "SHL"
    },
    "2953": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2954": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "2955": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2956": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "2957": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5640,
        5647
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2958": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5640,
        5647
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2959": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5640,
        5647
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2960": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5640,
        5647
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "2961": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5723,
        5752
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2962": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5723,
        5752
      ],
      "op": "AND",
      "path": "4"
    },
    "2963": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5723,
        5752
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2964": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5723,
        5752
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2965": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5723,
        5752
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2966": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5640,
        5647
      ],
      "op": "DUP5",
      "path": "4"
    },
    "2967": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5640,
        5647
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2968": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5723,
        5752
      ],
      "op": "DUP4",
      "path": "4"
    },
    "2969": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5723,
        5752
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2970": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5890
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFEAF968C"
    },
    "2975": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5890
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2976": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "2978": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2979": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2980": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "ADD",
      "path": "4"
    },
    "2981": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2982": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xA0"
    },
    "2984": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "2985": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2986": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "2987": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2988": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "DUP3",
      "path": "4"
    },
    "2989": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "2990": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "SUB",
      "path": "4"
    },
    "2991": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "ADD",
      "path": "4"
    },
    "2992": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "DUP2",
      "path": "4"
    },
    "2993": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5723,
        5752
      ],
      "op": "DUP7",
      "path": "4"
    },
    "2994": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "GAS",
      "path": "4"
    },
    "2995": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "2996": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2997": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "DUP1",
      "path": "4"
    },
    "2998": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "2999": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBC4"
    },
    "3002": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3003": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3004": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3006": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3007": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "3008": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3009": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3011": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3012": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3013": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "POP",
      "path": "4"
    },
    "3014": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "POP",
      "path": "4"
    },
    "3015": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "POP",
      "path": "4"
    },
    "3016": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "POP",
      "path": "4"
    },
    "3017": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3019": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3020": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3021": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "3023": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "NOT",
      "path": "4"
    },
    "3024": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "3026": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3027": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "ADD",
      "path": "4"
    },
    "3028": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "AND",
      "path": "4"
    },
    "3029": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3030": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "ADD",
      "path": "4"
    },
    "3031": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3032": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3034": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3035": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "POP",
      "path": "4"
    },
    "3036": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3037": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "ADD",
      "path": "4"
    },
    "3038": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3039": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xBE8"
    },
    "3042": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3043": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3044": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x134B"
    },
    "3047": {
      "fn": "TokenFarm.getTokenPrice",
      "jump": "i",
      "offset": [
        5865,
        5892
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3048": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5865,
        5892
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3049": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5846,
        5892
      ],
      "op": "POP",
      "path": "4"
    },
    "3050": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5846,
        5892
      ],
      "op": "POP",
      "path": "4"
    },
    "3051": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5846,
        5892
      ],
      "op": "POP",
      "path": "4"
    },
    "3052": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5846,
        5892
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3053": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5846,
        5892
      ],
      "op": "POP",
      "path": "4"
    },
    "3054": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5846,
        5892
      ],
      "op": "POP",
      "path": "4"
    },
    "3055": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5903,
        5919
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3057": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5939
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3058": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3060": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3062": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3064": {
      "op": "SHL"
    },
    "3065": {
      "op": "SUB"
    },
    "3066": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5948
      ],
      "op": "AND",
      "path": "4"
    },
    "3067": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5948
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x313CE567"
    },
    "3072": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3074": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3075": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3076": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xFFFFFFFF"
    },
    "3081": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "AND",
      "path": "4"
    },
    "3082": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "3084": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "SHL",
      "path": "4"
    },
    "3085": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3086": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3087": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3089": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "ADD",
      "path": "4"
    },
    "3090": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3092": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3094": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3095": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3096": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3097": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "SUB",
      "path": "4"
    },
    "3098": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3099": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "DUP7",
      "path": "4"
    },
    "3100": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "GAS",
      "path": "4"
    },
    "3101": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "STATICCALL",
      "path": "4"
    },
    "3102": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3103": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3104": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3105": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC2E"
    },
    "3108": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3109": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3110": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3112": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3113": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "3114": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3115": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3117": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3118": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3119": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "POP",
      "path": "4"
    },
    "3120": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "POP",
      "path": "4"
    },
    "3121": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "POP",
      "path": "4"
    },
    "3122": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "POP",
      "path": "4"
    },
    "3123": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3125": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3126": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "3127": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "3129": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "NOT",
      "path": "4"
    },
    "3130": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1F"
    },
    "3132": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3133": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "ADD",
      "path": "4"
    },
    "3134": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "AND",
      "path": "4"
    },
    "3135": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3136": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "ADD",
      "path": "4"
    },
    "3137": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3138": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3140": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3141": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "POP",
      "path": "4"
    },
    "3142": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3143": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "ADD",
      "path": "4"
    },
    "3144": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3145": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC52"
    },
    "3148": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3149": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3150": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x139B"
    },
    "3153": {
      "fn": "TokenFarm.getTokenPrice",
      "jump": "i",
      "offset": [
        5930,
        5950
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3154": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5930,
        5950
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3155": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5977,
        5982
      ],
      "op": "SWAP2",
      "path": "4",
      "statement": 30
    },
    "3156": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5977,
        5982
      ],
      "op": "SWAP8",
      "path": "4"
    },
    "3157": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5922,
        5951
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xFF"
    },
    "3159": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5922,
        5951
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3160": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5922,
        5951
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3161": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5922,
        5951
      ],
      "op": "AND",
      "path": "4"
    },
    "3162": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5922,
        5951
      ],
      "op": "SWAP7",
      "path": "4"
    },
    "3163": {
      "op": "POP"
    },
    "3164": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5977,
        5982
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3165": {
      "fn": "TokenFarm.getTokenPrice",
      "offset": [
        5977,
        5982
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "3166": {
      "op": "POP"
    },
    "3167": {
      "op": "POP"
    },
    "3168": {
      "op": "POP"
    },
    "3169": {
      "op": "POP"
    },
    "3170": {
      "op": "POP"
    },
    "3171": {
      "fn": "TokenFarm.getTokenPrice",
      "jump": "o",
      "offset": [
        5581,
        6001
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3172": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4260,
        4538
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3173": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4315,
        4319
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3175": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4315,
        4319
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3176": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4330,
        4510
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3177": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4368,
        4381
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3179": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4368,
        4388
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3180": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4357,
        4388
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3181": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4357,
        4388
      ],
      "op": "LT",
      "path": "4"
    },
    "3182": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4330,
        4510
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3183": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4330,
        4510
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCC5"
    },
    "3186": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4330,
        4510
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3187": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4449,
        4455
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3188": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3190": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3192": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3194": {
      "op": "SHL"
    },
    "3195": {
      "op": "SUB"
    },
    "3196": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4420,
        4455
      ],
      "op": "AND",
      "path": "4"
    },
    "3197": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4420,
        4433
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3199": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4434,
        4444
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3200": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4420,
        4445
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3201": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4420,
        4445
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3202": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4420,
        4445
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3203": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4420,
        4445
      ],
      "op": "LT",
      "path": "4"
    },
    "3204": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4420,
        4445
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC8F"
    },
    "3207": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4420,
        4445
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3208": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4420,
        4445
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC8F"
    },
    "3211": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4420,
        4445
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1300"
    },
    "3214": {
      "fn": "TokenFarm.tokenIsAllowed",
      "jump": "i",
      "offset": [
        4420,
        4445
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3215": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4420,
        4445
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3216": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4420,
        4445
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3218": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4420,
        4445
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3219": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4420,
        4445
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3220": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4420,
        4445
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3221": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4420,
        4445
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3223": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4420,
        4445
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3224": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4420,
        4445
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3225": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4420,
        4445
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3226": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4420,
        4445
      ],
      "op": "ADD",
      "path": "4"
    },
    "3227": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4420,
        4445
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3230": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3232": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3234": {
      "op": "SHL"
    },
    "3235": {
      "op": "SUB"
    },
    "3236": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4420,
        4445
      ],
      "op": "AND",
      "path": "4"
    },
    "3237": {
      "branch": 56,
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4420,
        4455
      ],
      "op": "EQ",
      "path": "4"
    },
    "3238": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4417,
        4500
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3239": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4417,
        4500
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCB3"
    },
    "3242": {
      "branch": 56,
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4417,
        4500
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3243": {
      "op": "POP"
    },
    "3244": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4481,
        4485
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 31,
      "value": "0x1"
    },
    "3246": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4481,
        4485
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3247": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4260,
        4538
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3248": {
      "op": "POP"
    },
    "3249": {
      "op": "POP"
    },
    "3250": {
      "fn": "TokenFarm.tokenIsAllowed",
      "jump": "o",
      "offset": [
        4260,
        4538
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3251": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4417,
        4500
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3252": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4390,
        4402
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 32
    },
    "3253": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4390,
        4402
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xCBD"
    },
    "3256": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4390,
        4402
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3257": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4390,
        4402
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1316"
    },
    "3260": {
      "fn": "TokenFarm.tokenIsAllowed",
      "jump": "i",
      "offset": [
        4390,
        4402
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3261": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4390,
        4402
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3262": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4390,
        4402
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3263": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4390,
        4402
      ],
      "op": "POP",
      "path": "4"
    },
    "3264": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4390,
        4402
      ],
      "op": "POP",
      "path": "4"
    },
    "3265": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4330,
        4510
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC68"
    },
    "3268": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4330,
        4510
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3269": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4330,
        4510
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3270": {
      "op": "POP"
    },
    "3271": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4526,
        4531
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 33,
      "value": "0x0"
    },
    "3273": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4526,
        4531
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3274": {
      "fn": "TokenFarm.tokenIsAllowed",
      "offset": [
        4260,
        4538
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3275": {
      "op": "POP"
    },
    "3276": {
      "op": "POP"
    },
    "3277": {
      "fn": "TokenFarm.tokenIsAllowed",
      "jump": "o",
      "offset": [
        4260,
        4538
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3278": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3172,
        3279
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3279": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3223,
        3239
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x60"
    },
    "3281": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3258,
        3271
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 34,
      "value": "0x4"
    },
    "3283": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3284": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3285": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3286": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3288": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "MUL",
      "path": "4"
    },
    "3289": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3291": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "ADD",
      "path": "4"
    },
    "3292": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3294": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "3295": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3296": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3297": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "ADD",
      "path": "4"
    },
    "3298": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3300": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3301": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3302": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3303": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3304": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3305": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3306": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3307": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3308": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3310": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "ADD",
      "path": "4"
    },
    "3311": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3312": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3313": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3314": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3315": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3316": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD26"
    },
    "3319": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3320": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3322": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "MUL",
      "path": "4"
    },
    "3323": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3324": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "ADD",
      "path": "4"
    },
    "3325": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3326": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3327": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3329": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3330": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3332": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3334": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3335": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3336": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3337": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3338": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3339": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3343": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3345": {
      "op": "SHL"
    },
    "3346": {
      "op": "SUB"
    },
    "3347": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "AND",
      "path": "4"
    },
    "3348": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3349": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3350": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3352": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3353": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3354": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "ADD",
      "path": "4"
    },
    "3355": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3356": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3358": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "ADD",
      "path": "4"
    },
    "3359": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3360": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3361": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "GT",
      "path": "4"
    },
    "3362": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD08"
    },
    "3365": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3366": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3367": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "POP",
      "path": "4"
    },
    "3368": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "POP",
      "path": "4"
    },
    "3369": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "POP",
      "path": "4"
    },
    "3370": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "POP",
      "path": "4"
    },
    "3371": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "POP",
      "path": "4"
    },
    "3372": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3373": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3250,
        3272
      ],
      "op": "POP",
      "path": "4"
    },
    "3374": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "offset": [
        3172,
        3279
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3375": {
      "fn": "TokenFarm.fetchAllowedTokens",
      "jump": "o",
      "offset": [
        3172,
        3279
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3376": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1846,
        2035
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3377": {
      "fn": "Ownable.owner",
      "offset": [
        1019,
        1026
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3379": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3380": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3382": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3384": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3386": {
      "op": "SHL"
    },
    "3387": {
      "op": "SUB"
    },
    "3388": {
      "fn": "Ownable.owner",
      "offset": [
        1045,
        1051
      ],
      "op": "AND",
      "path": "0"
    },
    "3389": {
      "fn": "Context._msgSender",
      "offset": [
        665,
        675
      ],
      "op": "CALLER",
      "path": "2"
    },
    "3390": {
      "offset": [
        1185,
        1208
      ],
      "op": "EQ",
      "path": "0"
    },
    "3391": {
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xD5A"
    },
    "3394": {
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3395": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3397": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3398": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3402": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3404": {
      "op": "SHL"
    },
    "3405": {
      "offset": [
        1177,
        1245
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3406": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3407": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3409": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "ADD",
      "path": "0"
    },
    "3410": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x352"
    },
    "3413": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "3414": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x119A"
    },
    "3417": {
      "fn": "Context._msgSender",
      "jump": "i",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3418": {
      "fn": "Context._msgSender",
      "offset": [
        1177,
        1245
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3419": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3421": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3423": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3425": {
      "op": "SHL"
    },
    "3426": {
      "op": "SUB"
    },
    "3427": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "DUP2",
      "path": "0",
      "statement": 35
    },
    "3428": {
      "branch": 59,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1934,
        1956
      ],
      "op": "AND",
      "path": "0"
    },
    "3429": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xDBF"
    },
    "3432": {
      "branch": 59,
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPI",
      "path": "0"
    },
    "3433": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x40"
    },
    "3435": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "3436": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3440": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3442": {
      "op": "SHL"
    },
    "3443": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3444": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "MSTORE",
      "path": "0"
    },
    "3445": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3447": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x4"
    },
    "3449": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "DUP3",
      "path": "0"
    },
    "3450": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "ADD",
      "path": "0"
    },
    "3451": {
      "op": "MSTORE"
    },
    "3452": {
      "op": "PUSH1",
      "value": "0x26"
    },
    "3454": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3456": {
      "op": "DUP3"
    },
    "3457": {
      "op": "ADD"
    },
    "3458": {
      "op": "MSTORE"
    },
    "3459": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
    },
    "3492": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3494": {
      "op": "DUP3"
    },
    "3495": {
      "op": "ADD"
    },
    "3496": {
      "op": "MSTORE"
    },
    "3497": {
      "op": "PUSH6",
      "value": "0x646472657373"
    },
    "3504": {
      "op": "PUSH1",
      "value": "0xD0"
    },
    "3506": {
      "op": "SHL"
    },
    "3507": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "3509": {
      "op": "DUP3"
    },
    "3510": {
      "op": "ADD"
    },
    "3511": {
      "op": "MSTORE"
    },
    "3512": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "3514": {
      "op": "ADD"
    },
    "3515": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0x352"
    },
    "3518": {
      "op": "JUMP"
    },
    "3519": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        1926,
        1999
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3520": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2028
      ],
      "op": "PUSH2",
      "path": "0",
      "statement": 36,
      "value": "0x8FA"
    },
    "3523": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2019,
        2027
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3524": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        2009,
        2018
      ],
      "op": "PUSH2",
      "path": "0",
      "value": "0xF84"
    },
    "3527": {
      "fn": "Ownable.transferOwnership",
      "jump": "i",
      "offset": [
        2009,
        2028
      ],
      "op": "JUMP",
      "path": "0"
    },
    "3528": {
      "offset": [
        596,
        621
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3529": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        596,
        621
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "3531": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        596,
        621
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3532": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        596,
        621
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3533": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        596,
        621
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3534": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        596,
        621
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3535": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        596,
        621
      ],
      "op": "LT",
      "path": "4"
    },
    "3536": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        596,
        621
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x7E6"
    },
    "3539": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        596,
        621
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3540": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        596,
        621
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3542": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        596,
        621
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3543": {
      "fn": "Ownable.transferOwnership",
      "offset": [
        596,
        621
      ],
      "op": "REVERT",
      "path": "4"
    },
    "3544": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3314,
        3520
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3545": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3547": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3549": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3551": {
      "op": "SHL"
    },
    "3552": {
      "op": "SUB"
    },
    "3553": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3397,
        3419
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3554": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3397,
        3419
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3555": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3397,
        3419
      ],
      "op": "AND",
      "path": "4"
    },
    "3556": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3430,
        3431
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3558": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3397,
        3419
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3559": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3397,
        3419
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3560": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3397,
        3419
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3561": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3397,
        3411
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3563": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3397,
        3419
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3565": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3397,
        3419
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3566": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3397,
        3419
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3567": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3397,
        3419
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3568": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3397,
        3419
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3570": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3397,
        3419
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3571": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3397,
        3419
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3572": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3397,
        3419
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3573": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3397,
        3426
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "3574": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3397,
        3426
      ],
      "op": "DUP7",
      "path": "4"
    },
    "3575": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3397,
        3426
      ],
      "op": "AND",
      "path": "4"
    },
    "3576": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3397,
        3426
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3577": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3397,
        3426
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3578": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3397,
        3426
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3579": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3397,
        3426
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3580": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3397,
        3426
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3581": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3397,
        3426
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3582": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3397,
        3426
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3583": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3394,
        3514
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4BC"
    },
    "3586": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3394,
        3514
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3591": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3593": {
      "op": "SHL"
    },
    "3594": {
      "op": "SUB"
    },
    "3595": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3474,
        3499
      ],
      "op": "DUP3",
      "path": "4",
      "statement": 37
    },
    "3596": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3474,
        3499
      ],
      "op": "AND",
      "path": "4"
    },
    "3597": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3474,
        3499
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3599": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3474,
        3499
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3600": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3474,
        3499
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3601": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3474,
        3499
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3602": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3474,
        3492
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "3604": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3474,
        3499
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3606": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3474,
        3499
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3607": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3474,
        3499
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3609": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3474,
        3499
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3610": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3474,
        3499
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3611": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3474,
        3499
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3612": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3474,
        3503
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE26"
    },
    "3615": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3474,
        3503
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3616": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3502,
        3503
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3618": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3474,
        3503
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x116B"
    },
    "3621": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "jump": "i",
      "offset": [
        3474,
        3503
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3622": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3474,
        3503
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3623": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3625": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3627": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3629": {
      "op": "SHL"
    },
    "3630": {
      "op": "SUB"
    },
    "3631": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3446,
        3471
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3632": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3446,
        3471
      ],
      "op": "AND",
      "path": "4"
    },
    "3633": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3446,
        3471
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3635": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3446,
        3471
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3636": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3446,
        3471
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3637": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3446,
        3471
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3638": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3446,
        3464
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "3640": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3446,
        3471
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3642": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3446,
        3471
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3643": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3446,
        3471
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3645": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3446,
        3471
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3646": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3446,
        3471
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3647": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3446,
        3503
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3648": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3314,
        3520
      ],
      "op": "POP",
      "path": "4"
    },
    "3649": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "offset": [
        3314,
        3520
      ],
      "op": "POP",
      "path": "4"
    },
    "3650": {
      "fn": "TokenFarm.addUniqueTokensStaked",
      "jump": "o",
      "offset": [
        3314,
        3520
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3651": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3526,
        4254
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3652": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3646,
        3664
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3654": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3642,
        3833
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3655": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3679,
        3692
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3657": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3679,
        3699
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3658": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3668,
        3699
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3659": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3668,
        3699
      ],
      "op": "LT",
      "path": "4"
    },
    "3660": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3642,
        3833
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3661": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3642,
        3833
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEBA"
    },
    "3664": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3642,
        3833
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3665": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3782,
        3783
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3667": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3731,
        3745
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3669": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3731,
        3772
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3671": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3746,
        3759
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "3673": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3760,
        3770
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3674": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3746,
        3771
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3675": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3746,
        3771
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3676": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3746,
        3771
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3677": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3746,
        3771
      ],
      "op": "LT",
      "path": "4"
    },
    "3678": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3746,
        3771
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE69"
    },
    "3681": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3746,
        3771
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3682": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3746,
        3771
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE69"
    },
    "3685": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3746,
        3771
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1300"
    },
    "3688": {
      "fn": "TokenFarm.removeStaker",
      "jump": "i",
      "offset": [
        3746,
        3771
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3689": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3746,
        3771
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3690": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3746,
        3771
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3692": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3746,
        3771
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3693": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3746,
        3771
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3694": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3746,
        3771
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3695": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3746,
        3771
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3697": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3746,
        3771
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3698": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3746,
        3771
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3699": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3746,
        3771
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3700": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3746,
        3771
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3701": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3746,
        3771
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3702": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3746,
        3771
      ],
      "op": "ADD",
      "path": "4"
    },
    "3703": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3746,
        3771
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3708": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3710": {
      "op": "SHL"
    },
    "3711": {
      "op": "SUB"
    },
    "3712": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3746,
        3771
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3713": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3746,
        3771
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3714": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3746,
        3771
      ],
      "op": "AND",
      "path": "4"
    },
    "3715": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3731,
        3772
      ],
      "op": "DUP5",
      "path": "4"
    },
    "3716": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3731,
        3772
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3717": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3731,
        3772
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3718": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3731,
        3772
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3719": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3731,
        3772
      ],
      "op": "ADD",
      "path": "4"
    },
    "3720": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3731,
        3772
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "3721": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3731,
        3772
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3722": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3731,
        3772
      ],
      "op": "SWAP5",
      "path": "4"
    },
    "3723": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3731,
        3772
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3724": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3731,
        3772
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "3726": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3731,
        3772
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3727": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3731,
        3772
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3728": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3731,
        3772
      ],
      "op": "ADD",
      "path": "4"
    },
    "3729": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3731,
        3772
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3730": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3731,
        3772
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3731": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3731,
        3779
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "3732": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3731,
        3779
      ],
      "op": "DUP8",
      "path": "4"
    },
    "3733": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3731,
        3779
      ],
      "op": "AND",
      "path": "4"
    },
    "3734": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3731,
        3779
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3735": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3731,
        3779
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3736": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3731,
        3779
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3737": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3731,
        3779
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3738": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3731,
        3779
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3739": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3731,
        3779
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3740": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3731,
        3779
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3741": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3731,
        3779
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3742": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3731,
        3779
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3743": {
      "branch": 57,
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3731,
        3783
      ],
      "op": "GT",
      "path": "4"
    },
    "3744": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3728,
        3823
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3745": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3728,
        3823
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEA8"
    },
    "3748": {
      "branch": 57,
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3728,
        3823
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3749": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3802,
        3809
      ],
      "op": "POP",
      "path": "4",
      "statement": 38
    },
    "3750": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3526,
        4254
      ],
      "op": "POP",
      "path": "4"
    },
    "3751": {
      "fn": "TokenFarm.removeStaker",
      "jump": "o",
      "offset": [
        3526,
        4254
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3752": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3728,
        3823
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3753": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3701,
        3713
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 39
    },
    "3754": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3701,
        3713
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEB2"
    },
    "3757": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3701,
        3713
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3758": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3701,
        3713
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1316"
    },
    "3761": {
      "fn": "TokenFarm.removeStaker",
      "jump": "i",
      "offset": [
        3701,
        3713
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3762": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3701,
        3713
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3763": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3701,
        3713
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3764": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3701,
        3713
      ],
      "op": "POP",
      "path": "4"
    },
    "3765": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3701,
        3713
      ],
      "op": "POP",
      "path": "4"
    },
    "3766": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3642,
        3833
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE46"
    },
    "3769": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3642,
        3833
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3770": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3642,
        3833
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3771": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3642,
        3833
      ],
      "op": "POP",
      "path": "4"
    },
    "3772": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3965,
        3984
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3774": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3961,
        4157
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3775": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4000,
        4007
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "3777": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4000,
        4014
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3778": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3988,
        4014
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3779": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3988,
        4014
      ],
      "op": "LT",
      "path": "4"
    },
    "3780": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3961,
        4157
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "3781": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3961,
        4157
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF62"
    },
    "3784": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3961,
        4157
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3785": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4071,
        4076
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3786": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3788": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3790": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3792": {
      "op": "SHL"
    },
    "3793": {
      "op": "SUB"
    },
    "3794": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4047,
        4076
      ],
      "op": "AND",
      "path": "4"
    },
    "3795": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4047,
        4054
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "3797": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4055,
        4066
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3798": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4047,
        4067
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3799": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4047,
        4067
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3800": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4047,
        4067
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3801": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4047,
        4067
      ],
      "op": "LT",
      "path": "4"
    },
    "3802": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4047,
        4067
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEE5"
    },
    "3805": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4047,
        4067
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3806": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4047,
        4067
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEE5"
    },
    "3809": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4047,
        4067
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1300"
    },
    "3812": {
      "fn": "TokenFarm.removeStaker",
      "jump": "i",
      "offset": [
        4047,
        4067
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3813": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4047,
        4067
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3814": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4047,
        4067
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3816": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4047,
        4067
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3817": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4047,
        4067
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3818": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4047,
        4067
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3819": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4047,
        4067
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3821": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4047,
        4067
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3822": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4047,
        4067
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3823": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4047,
        4067
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3824": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4047,
        4067
      ],
      "op": "ADD",
      "path": "4"
    },
    "3825": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4047,
        4067
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3826": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3828": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3830": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3832": {
      "op": "SHL"
    },
    "3833": {
      "op": "SUB"
    },
    "3834": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4047,
        4067
      ],
      "op": "AND",
      "path": "4"
    },
    "3835": {
      "branch": 58,
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4047,
        4076
      ],
      "op": "EQ",
      "path": "4"
    },
    "3836": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4044,
        4147
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF50"
    },
    "3839": {
      "branch": 58,
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4044,
        4147
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3840": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4095,
        4105
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 40,
      "value": "0x7"
    },
    "3842": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4111,
        4118
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "3844": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4119,
        4130
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3845": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4111,
        4131
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3846": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4111,
        4131
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3847": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4111,
        4131
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3848": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4111,
        4131
      ],
      "op": "LT",
      "path": "4"
    },
    "3849": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4111,
        4131
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF14"
    },
    "3852": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4111,
        4131
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "3853": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4111,
        4131
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF14"
    },
    "3856": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4111,
        4131
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1300"
    },
    "3859": {
      "fn": "TokenFarm.removeStaker",
      "jump": "i",
      "offset": [
        4111,
        4131
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3860": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4111,
        4131
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3861": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4111,
        4131
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "3863": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4111,
        4131
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3864": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4111,
        4131
      ],
      "op": "DUP3",
      "path": "4"
    },
    "3865": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4111,
        4131
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3866": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4111,
        4131
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "3868": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4111,
        4131
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3869": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4111,
        4131
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3870": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4111,
        4131
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3871": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4111,
        4131
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3872": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4111,
        4131
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3873": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4111,
        4131
      ],
      "op": "ADD",
      "path": "4"
    },
    "3874": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4111,
        4131
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3875": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4095,
        4132
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3876": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4095,
        4132
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3877": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4111,
        4131
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x1"
    },
    "3879": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4095,
        4132
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3880": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4095,
        4132
      ],
      "op": "ADD",
      "path": "4"
    },
    "3881": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4095,
        4132
      ],
      "op": "DUP6",
      "path": "4"
    },
    "3882": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4095,
        4132
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3883": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4095,
        4132
      ],
      "op": "SWAP4",
      "path": "4"
    },
    "3884": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4095,
        4132
      ],
      "op": "DUP4",
      "path": "4"
    },
    "3885": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4095,
        4132
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "3886": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4095,
        4132
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3887": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4095,
        4132
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "3888": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4095,
        4132
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3889": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4095,
        4132
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3890": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4095,
        4132
      ],
      "op": "ADD",
      "path": "4"
    },
    "3891": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4095,
        4132
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3892": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4095,
        4132
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3893": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3895": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3897": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3899": {
      "op": "SHL"
    },
    "3900": {
      "op": "SUB"
    },
    "3901": {
      "op": "NOT"
    },
    "3902": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4095,
        4132
      ],
      "op": "AND",
      "path": "4"
    },
    "3903": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3905": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3907": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3909": {
      "op": "SHL"
    },
    "3910": {
      "op": "SUB"
    },
    "3911": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4111,
        4131
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3912": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4111,
        4131
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "3913": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4111,
        4131
      ],
      "op": "AND",
      "path": "4"
    },
    "3914": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4095,
        4132
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3915": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4095,
        4132
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3916": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4095,
        4132
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3917": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4095,
        4132
      ],
      "op": "OR",
      "path": "4"
    },
    "3918": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4095,
        4132
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "3919": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4095,
        4132
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "3920": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4044,
        4147
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3921": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4016,
        4029
      ],
      "op": "DUP1",
      "path": "4",
      "statement": 41
    },
    "3922": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4016,
        4029
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF5A"
    },
    "3925": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4016,
        4029
      ],
      "op": "DUP2",
      "path": "4"
    },
    "3926": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4016,
        4029
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1316"
    },
    "3929": {
      "fn": "TokenFarm.removeStaker",
      "jump": "i",
      "offset": [
        4016,
        4029
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3930": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4016,
        4029
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3931": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4016,
        4029
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3932": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4016,
        4029
      ],
      "op": "POP",
      "path": "4"
    },
    "3933": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4016,
        4029
      ],
      "op": "POP",
      "path": "4"
    },
    "3934": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3961,
        4157
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEBE"
    },
    "3937": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3961,
        4157
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3938": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        3961,
        4157
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3939": {
      "op": "POP"
    },
    "3940": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4176,
        4186
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 42,
      "value": "0x7"
    },
    "3942": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4166,
        4186
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3943": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4166,
        4186
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3944": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4166,
        4186
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF73"
    },
    "3947": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4166,
        4186
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3948": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4166,
        4173
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x6"
    },
    "3950": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4166,
        4173
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3951": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4166,
        4186
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFD4"
    },
    "3954": {
      "fn": "TokenFarm.removeStaker",
      "jump": "i",
      "offset": [
        4166,
        4186
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3955": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4166,
        4186
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "3956": {
      "op": "POP"
    },
    "3957": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4237,
        4247
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 43,
      "value": "0x5"
    },
    "3959": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4224,
        4247
      ],
      "op": "DUP1",
      "path": "4"
    },
    "3960": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4224,
        4247
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "3961": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4224,
        4247
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4BC"
    },
    "3964": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4224,
        4247
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3965": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4224,
        4234
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x7"
    },
    "3967": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4224,
        4234
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "3968": {
      "fn": "TokenFarm.removeStaker",
      "offset": [
        4224,
        4247
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xFD4"
    },
    "3971": {
      "fn": "TokenFarm.removeStaker",
      "jump": "i",
      "offset": [
        4224,
        4247
      ],
      "op": "JUMP",
      "path": "4"
    },
    "3972": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMPDEST",
      "path": "0"
    },
    "3973": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "PUSH1",
      "path": "0",
      "value": "0x0"
    },
    "3975": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP1",
      "path": "0"
    },
    "3976": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SLOAD",
      "path": "0"
    },
    "3977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3979": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3981": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3983": {
      "op": "SHL"
    },
    "3984": {
      "op": "SUB"
    },
    "3985": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0",
      "statement": 44
    },
    "3986": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "3987": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "3988": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3990": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3992": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3994": {
      "op": "SHL"
    },
    "3995": {
      "op": "SUB"
    },
    "3996": {
      "op": "NOT"
    },
    "3997": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP4",
      "path": "0"
    },
    "3998": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "AND",
      "path": "0"
    },
    "3999": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP2",
      "path": "0"
    },
    "4000": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "OR",
      "path": "0"
    },
    "4001": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "DUP5",
      "path": "0"
    },
    "4002": {
      "fn": "Ownable._setOwner",
      "offset": [
        2131,
        2148
      ],
      "op": "SSTORE",
      "path": "0"
    },
    "4003": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH1",
      "path": "0",
      "statement": 45,
      "value": "0x40"
    },
    "4005": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "MLOAD",
      "path": "0"
    },
    "4006": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4007": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4008": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4009": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "AND",
      "path": "0"
    },
    "4010": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP3",
      "path": "0"
    },
    "4011": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "DUP4",
      "path": "0"
    },
    "4012": {
      "fn": "Ownable._setOwner",
      "offset": [
        2115,
        2121
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4013": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "PUSH32",
      "path": "0",
      "value": "0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
    },
    "4046": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "SWAP2",
      "path": "0"
    },
    "4047": {
      "fn": "Ownable._setOwner",
      "offset": [
        2096,
        2112
      ],
      "op": "SWAP1",
      "path": "0"
    },
    "4048": {
      "fn": "Ownable._setOwner",
      "offset": [
        2163,
        2203
      ],
      "op": "LOG3",
      "path": "0"
    },
    "4049": {
      "fn": "Ownable._setOwner",
      "offset": [
        2086,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "4050": {
      "fn": "Ownable._setOwner",
      "offset": [
        2041,
        2210
      ],
      "op": "POP",
      "path": "0"
    },
    "4051": {
      "fn": "Ownable._setOwner",
      "jump": "o",
      "offset": [
        2041,
        2210
      ],
      "op": "JUMP",
      "path": "0"
    },
    "4052": {
      "op": "JUMPDEST"
    },
    "4053": {
      "op": "DUP3"
    },
    "4054": {
      "op": "DUP1"
    },
    "4055": {
      "op": "SLOAD"
    },
    "4056": {
      "op": "DUP3"
    },
    "4057": {
      "op": "DUP3"
    },
    "4058": {
      "op": "SSTORE"
    },
    "4059": {
      "op": "SWAP1"
    },
    "4060": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4062": {
      "op": "MSTORE"
    },
    "4063": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4065": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4067": {
      "op": "KECCAK256"
    },
    "4068": {
      "op": "SWAP1"
    },
    "4069": {
      "op": "DUP2"
    },
    "4070": {
      "op": "ADD"
    },
    "4071": {
      "op": "SWAP3"
    },
    "4072": {
      "op": "DUP3"
    },
    "4073": {
      "op": "ISZERO"
    },
    "4074": {
      "op": "PUSH2",
      "value": "0x1014"
    },
    "4077": {
      "op": "JUMPI"
    },
    "4078": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4080": {
      "op": "MSTORE"
    },
    "4081": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4083": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4085": {
      "op": "KECCAK256"
    },
    "4086": {
      "op": "SWAP2"
    },
    "4087": {
      "op": "DUP3"
    },
    "4088": {
      "op": "ADD"
    },
    "4089": {
      "op": "JUMPDEST"
    },
    "4090": {
      "op": "DUP3"
    },
    "4091": {
      "op": "DUP2"
    },
    "4092": {
      "op": "GT"
    },
    "4093": {
      "op": "ISZERO"
    },
    "4094": {
      "op": "PUSH2",
      "value": "0x1014"
    },
    "4097": {
      "op": "JUMPI"
    },
    "4098": {
      "op": "DUP3"
    },
    "4099": {
      "op": "SLOAD"
    },
    "4100": {
      "op": "DUP3"
    },
    "4101": {
      "op": "SSTORE"
    },
    "4102": {
      "op": "SWAP2"
    },
    "4103": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4105": {
      "op": "ADD"
    },
    "4106": {
      "op": "SWAP2"
    },
    "4107": {
      "op": "SWAP1"
    },
    "4108": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4110": {
      "op": "ADD"
    },
    "4111": {
      "op": "SWAP1"
    },
    "4112": {
      "op": "PUSH2",
      "value": "0xFF9"
    },
    "4115": {
      "op": "JUMP"
    },
    "4116": {
      "op": "JUMPDEST"
    },
    "4117": {
      "op": "POP"
    },
    "4118": {
      "op": "PUSH2",
      "value": "0x1020"
    },
    "4121": {
      "op": "SWAP3"
    },
    "4122": {
      "op": "SWAP2"
    },
    "4123": {
      "op": "POP"
    },
    "4124": {
      "op": "PUSH2",
      "value": "0x1024"
    },
    "4127": {
      "jump": "i",
      "op": "JUMP"
    },
    "4128": {
      "op": "JUMPDEST"
    },
    "4129": {
      "op": "POP"
    },
    "4130": {
      "op": "SWAP1"
    },
    "4131": {
      "jump": "o",
      "op": "JUMP"
    },
    "4132": {
      "op": "JUMPDEST"
    },
    "4133": {
      "op": "JUMPDEST"
    },
    "4134": {
      "op": "DUP1"
    },
    "4135": {
      "op": "DUP3"
    },
    "4136": {
      "op": "GT"
    },
    "4137": {
      "op": "ISZERO"
    },
    "4138": {
      "op": "PUSH2",
      "value": "0x1020"
    },
    "4141": {
      "op": "JUMPI"
    },
    "4142": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4144": {
      "op": "DUP2"
    },
    "4145": {
      "op": "SSTORE"
    },
    "4146": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4148": {
      "op": "ADD"
    },
    "4149": {
      "op": "PUSH2",
      "value": "0x1025"
    },
    "4152": {
      "op": "JUMP"
    },
    "4153": {
      "op": "JUMPDEST"
    },
    "4154": {
      "op": "DUP1"
    },
    "4155": {
      "op": "CALLDATALOAD"
    },
    "4156": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4158": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4160": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4162": {
      "op": "SHL"
    },
    "4163": {
      "op": "SUB"
    },
    "4164": {
      "op": "DUP2"
    },
    "4165": {
      "op": "AND"
    },
    "4166": {
      "op": "DUP2"
    },
    "4167": {
      "op": "EQ"
    },
    "4168": {
      "op": "PUSH2",
      "value": "0x1050"
    },
    "4171": {
      "op": "JUMPI"
    },
    "4172": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4174": {
      "op": "DUP1"
    },
    "4175": {
      "op": "REVERT"
    },
    "4176": {
      "op": "JUMPDEST"
    },
    "4177": {
      "op": "SWAP2"
    },
    "4178": {
      "op": "SWAP1"
    },
    "4179": {
      "op": "POP"
    },
    "4180": {
      "jump": "o",
      "op": "JUMP"
    },
    "4181": {
      "op": "JUMPDEST"
    },
    "4182": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4184": {
      "op": "DUP1"
    },
    "4185": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4187": {
      "op": "DUP4"
    },
    "4188": {
      "op": "DUP6"
    },
    "4189": {
      "op": "SUB"
    },
    "4190": {
      "op": "SLT"
    },
    "4191": {
      "op": "ISZERO"
    },
    "4192": {
      "op": "PUSH2",
      "value": "0x1068"
    },
    "4195": {
      "op": "JUMPI"
    },
    "4196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4198": {
      "op": "DUP1"
    },
    "4199": {
      "op": "REVERT"
    },
    "4200": {
      "op": "JUMPDEST"
    },
    "4201": {
      "op": "DUP3"
    },
    "4202": {
      "op": "CALLDATALOAD"
    },
    "4203": {
      "op": "SWAP2"
    },
    "4204": {
      "op": "POP"
    },
    "4205": {
      "op": "PUSH2",
      "value": "0x1078"
    },
    "4208": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4210": {
      "op": "DUP5"
    },
    "4211": {
      "op": "ADD"
    },
    "4212": {
      "op": "PUSH2",
      "value": "0x1039"
    },
    "4215": {
      "jump": "i",
      "op": "JUMP"
    },
    "4216": {
      "op": "JUMPDEST"
    },
    "4217": {
      "op": "SWAP1"
    },
    "4218": {
      "op": "POP"
    },
    "4219": {
      "op": "SWAP3"
    },
    "4220": {
      "op": "POP"
    },
    "4221": {
      "op": "SWAP3"
    },
    "4222": {
      "op": "SWAP1"
    },
    "4223": {
      "op": "POP"
    },
    "4224": {
      "jump": "o",
      "op": "JUMP"
    },
    "4225": {
      "op": "JUMPDEST"
    },
    "4226": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4228": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4230": {
      "op": "DUP3"
    },
    "4231": {
      "op": "DUP5"
    },
    "4232": {
      "op": "SUB"
    },
    "4233": {
      "op": "SLT"
    },
    "4234": {
      "op": "ISZERO"
    },
    "4235": {
      "op": "PUSH2",
      "value": "0x1093"
    },
    "4238": {
      "op": "JUMPI"
    },
    "4239": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4241": {
      "op": "DUP1"
    },
    "4242": {
      "op": "REVERT"
    },
    "4243": {
      "op": "JUMPDEST"
    },
    "4244": {
      "op": "PUSH2",
      "value": "0x109C"
    },
    "4247": {
      "op": "DUP3"
    },
    "4248": {
      "op": "PUSH2",
      "value": "0x1039"
    },
    "4251": {
      "jump": "i",
      "op": "JUMP"
    },
    "4252": {
      "op": "JUMPDEST"
    },
    "4253": {
      "op": "SWAP4"
    },
    "4254": {
      "op": "SWAP3"
    },
    "4255": {
      "op": "POP"
    },
    "4256": {
      "op": "POP"
    },
    "4257": {
      "op": "POP"
    },
    "4258": {
      "jump": "o",
      "op": "JUMP"
    },
    "4259": {
      "op": "JUMPDEST"
    },
    "4260": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4262": {
      "op": "DUP1"
    },
    "4263": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4265": {
      "op": "DUP4"
    },
    "4266": {
      "op": "DUP6"
    },
    "4267": {
      "op": "SUB"
    },
    "4268": {
      "op": "SLT"
    },
    "4269": {
      "op": "ISZERO"
    },
    "4270": {
      "op": "PUSH2",
      "value": "0x10B6"
    },
    "4273": {
      "op": "JUMPI"
    },
    "4274": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4276": {
      "op": "DUP1"
    },
    "4277": {
      "op": "REVERT"
    },
    "4278": {
      "op": "JUMPDEST"
    },
    "4279": {
      "op": "PUSH2",
      "value": "0x10BF"
    },
    "4282": {
      "op": "DUP4"
    },
    "4283": {
      "op": "PUSH2",
      "value": "0x1039"
    },
    "4286": {
      "jump": "i",
      "op": "JUMP"
    },
    "4287": {
      "op": "JUMPDEST"
    },
    "4288": {
      "op": "SWAP2"
    },
    "4289": {
      "op": "POP"
    },
    "4290": {
      "op": "PUSH2",
      "value": "0x1078"
    },
    "4293": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4295": {
      "op": "DUP5"
    },
    "4296": {
      "op": "ADD"
    },
    "4297": {
      "op": "PUSH2",
      "value": "0x1039"
    },
    "4300": {
      "jump": "i",
      "op": "JUMP"
    },
    "4301": {
      "op": "JUMPDEST"
    },
    "4302": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4304": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4306": {
      "op": "DUP3"
    },
    "4307": {
      "op": "DUP5"
    },
    "4308": {
      "op": "SUB"
    },
    "4309": {
      "op": "SLT"
    },
    "4310": {
      "op": "ISZERO"
    },
    "4311": {
      "op": "PUSH2",
      "value": "0x10DF"
    },
    "4314": {
      "op": "JUMPI"
    },
    "4315": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4317": {
      "op": "DUP1"
    },
    "4318": {
      "op": "REVERT"
    },
    "4319": {
      "op": "JUMPDEST"
    },
    "4320": {
      "op": "POP"
    },
    "4321": {
      "op": "CALLDATALOAD"
    },
    "4322": {
      "op": "SWAP2"
    },
    "4323": {
      "op": "SWAP1"
    },
    "4324": {
      "op": "POP"
    },
    "4325": {
      "jump": "o",
      "op": "JUMP"
    },
    "4326": {
      "op": "JUMPDEST"
    },
    "4327": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4329": {
      "op": "DUP1"
    },
    "4330": {
      "op": "DUP3"
    },
    "4331": {
      "op": "MSTORE"
    },
    "4332": {
      "op": "DUP3"
    },
    "4333": {
      "op": "MLOAD"
    },
    "4334": {
      "op": "DUP3"
    },
    "4335": {
      "op": "DUP3"
    },
    "4336": {
      "op": "ADD"
    },
    "4337": {
      "op": "DUP2"
    },
    "4338": {
      "op": "SWAP1"
    },
    "4339": {
      "op": "MSTORE"
    },
    "4340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4342": {
      "op": "SWAP2"
    },
    "4343": {
      "op": "SWAP1"
    },
    "4344": {
      "op": "DUP5"
    },
    "4345": {
      "op": "DUP3"
    },
    "4346": {
      "op": "ADD"
    },
    "4347": {
      "op": "SWAP1"
    },
    "4348": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4350": {
      "op": "DUP6"
    },
    "4351": {
      "op": "ADD"
    },
    "4352": {
      "op": "SWAP1"
    },
    "4353": {
      "op": "DUP5"
    },
    "4354": {
      "op": "JUMPDEST"
    },
    "4355": {
      "op": "DUP2"
    },
    "4356": {
      "op": "DUP2"
    },
    "4357": {
      "op": "LT"
    },
    "4358": {
      "op": "ISZERO"
    },
    "4359": {
      "op": "PUSH2",
      "value": "0x1127"
    },
    "4362": {
      "op": "JUMPI"
    },
    "4363": {
      "op": "DUP4"
    },
    "4364": {
      "op": "MLOAD"
    },
    "4365": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4369": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4371": {
      "op": "SHL"
    },
    "4372": {
      "op": "SUB"
    },
    "4373": {
      "op": "AND"
    },
    "4374": {
      "op": "DUP4"
    },
    "4375": {
      "op": "MSTORE"
    },
    "4376": {
      "op": "SWAP3"
    },
    "4377": {
      "op": "DUP5"
    },
    "4378": {
      "op": "ADD"
    },
    "4379": {
      "op": "SWAP3"
    },
    "4380": {
      "op": "SWAP2"
    },
    "4381": {
      "op": "DUP5"
    },
    "4382": {
      "op": "ADD"
    },
    "4383": {
      "op": "SWAP2"
    },
    "4384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4386": {
      "op": "ADD"
    },
    "4387": {
      "op": "PUSH2",
      "value": "0x1102"
    },
    "4390": {
      "op": "JUMP"
    },
    "4391": {
      "op": "JUMPDEST"
    },
    "4392": {
      "op": "POP"
    },
    "4393": {
      "op": "SWAP1"
    },
    "4394": {
      "op": "SWAP7"
    },
    "4395": {
      "op": "SWAP6"
    },
    "4396": {
      "op": "POP"
    },
    "4397": {
      "op": "POP"
    },
    "4398": {
      "op": "POP"
    },
    "4399": {
      "op": "POP"
    },
    "4400": {
      "op": "POP"
    },
    "4401": {
      "op": "POP"
    },
    "4402": {
      "jump": "o",
      "op": "JUMP"
    },
    "4403": {
      "op": "JUMPDEST"
    },
    "4404": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4406": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4408": {
      "op": "DUP3"
    },
    "4409": {
      "op": "DUP5"
    },
    "4410": {
      "op": "SUB"
    },
    "4411": {
      "op": "SLT"
    },
    "4412": {
      "op": "ISZERO"
    },
    "4413": {
      "op": "PUSH2",
      "value": "0x1145"
    },
    "4416": {
      "op": "JUMPI"
    },
    "4417": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4419": {
      "op": "DUP1"
    },
    "4420": {
      "op": "REVERT"
    },
    "4421": {
      "op": "JUMPDEST"
    },
    "4422": {
      "op": "DUP2"
    },
    "4423": {
      "op": "MLOAD"
    },
    "4424": {
      "op": "DUP1"
    },
    "4425": {
      "op": "ISZERO"
    },
    "4426": {
      "op": "ISZERO"
    },
    "4427": {
      "op": "DUP2"
    },
    "4428": {
      "op": "EQ"
    },
    "4429": {
      "op": "PUSH2",
      "value": "0x109C"
    },
    "4432": {
      "op": "JUMPI"
    },
    "4433": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4435": {
      "op": "DUP1"
    },
    "4436": {
      "op": "REVERT"
    },
    "4437": {
      "op": "JUMPDEST"
    },
    "4438": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4443": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4445": {
      "op": "SHL"
    },
    "4446": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4448": {
      "op": "MSTORE"
    },
    "4449": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "4451": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4453": {
      "op": "MSTORE"
    },
    "4454": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4456": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4458": {
      "op": "REVERT"
    },
    "4459": {
      "op": "JUMPDEST"
    },
    "4460": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4462": {
      "op": "DUP3"
    },
    "4463": {
      "op": "NOT"
    },
    "4464": {
      "op": "DUP3"
    },
    "4465": {
      "op": "GT"
    },
    "4466": {
      "op": "ISZERO"
    },
    "4467": {
      "op": "PUSH2",
      "value": "0x117E"
    },
    "4470": {
      "op": "JUMPI"
    },
    "4471": {
      "op": "PUSH2",
      "value": "0x117E"
    },
    "4474": {
      "op": "PUSH2",
      "value": "0x1155"
    },
    "4477": {
      "jump": "i",
      "op": "JUMP"
    },
    "4478": {
      "op": "JUMPDEST"
    },
    "4479": {
      "op": "POP"
    },
    "4480": {
      "op": "ADD"
    },
    "4481": {
      "op": "SWAP1"
    },
    "4482": {
      "jump": "o",
      "op": "JUMP"
    },
    "4483": {
      "op": "JUMPDEST"
    },
    "4484": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4486": {
      "op": "DUP3"
    },
    "4487": {
      "op": "DUP3"
    },
    "4488": {
      "op": "LT"
    },
    "4489": {
      "op": "ISZERO"
    },
    "4490": {
      "op": "PUSH2",
      "value": "0x1195"
    },
    "4493": {
      "op": "JUMPI"
    },
    "4494": {
      "op": "PUSH2",
      "value": "0x1195"
    },
    "4497": {
      "op": "PUSH2",
      "value": "0x1155"
    },
    "4500": {
      "jump": "i",
      "op": "JUMP"
    },
    "4501": {
      "op": "JUMPDEST"
    },
    "4502": {
      "op": "POP"
    },
    "4503": {
      "op": "SUB"
    },
    "4504": {
      "op": "SWAP1"
    },
    "4505": {
      "jump": "o",
      "op": "JUMP"
    },
    "4506": {
      "op": "JUMPDEST"
    },
    "4507": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4509": {
      "op": "DUP1"
    },
    "4510": {
      "op": "DUP3"
    },
    "4511": {
      "op": "MSTORE"
    },
    "4512": {
      "op": "DUP2"
    },
    "4513": {
      "op": "DUP2"
    },
    "4514": {
      "op": "ADD"
    },
    "4515": {
      "op": "MSTORE"
    },
    "4516": {
      "op": "PUSH32",
      "value": "0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
    },
    "4549": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4551": {
      "op": "DUP3"
    },
    "4552": {
      "op": "ADD"
    },
    "4553": {
      "op": "MSTORE"
    },
    "4554": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4556": {
      "op": "ADD"
    },
    "4557": {
      "op": "SWAP1"
    },
    "4558": {
      "jump": "o",
      "op": "JUMP"
    },
    "4559": {
      "op": "JUMPDEST"
    },
    "4560": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4562": {
      "op": "DUP2"
    },
    "4563": {
      "op": "DUP2"
    },
    "4564": {
      "op": "JUMPDEST"
    },
    "4565": {
      "op": "DUP1"
    },
    "4566": {
      "op": "DUP6"
    },
    "4567": {
      "op": "GT"
    },
    "4568": {
      "op": "ISZERO"
    },
    "4569": {
      "op": "PUSH2",
      "value": "0x120A"
    },
    "4572": {
      "op": "JUMPI"
    },
    "4573": {
      "op": "DUP2"
    },
    "4574": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4576": {
      "op": "NOT"
    },
    "4577": {
      "op": "DIV"
    },
    "4578": {
      "op": "DUP3"
    },
    "4579": {
      "op": "GT"
    },
    "4580": {
      "op": "ISZERO"
    },
    "4581": {
      "op": "PUSH2",
      "value": "0x11F0"
    },
    "4584": {
      "op": "JUMPI"
    },
    "4585": {
      "op": "PUSH2",
      "value": "0x11F0"
    },
    "4588": {
      "op": "PUSH2",
      "value": "0x1155"
    },
    "4591": {
      "jump": "i",
      "op": "JUMP"
    },
    "4592": {
      "op": "JUMPDEST"
    },
    "4593": {
      "op": "DUP1"
    },
    "4594": {
      "op": "DUP6"
    },
    "4595": {
      "op": "AND"
    },
    "4596": {
      "op": "ISZERO"
    },
    "4597": {
      "op": "PUSH2",
      "value": "0x11FD"
    },
    "4600": {
      "op": "JUMPI"
    },
    "4601": {
      "op": "SWAP2"
    },
    "4602": {
      "op": "DUP2"
    },
    "4603": {
      "op": "MUL"
    },
    "4604": {
      "op": "SWAP2"
    },
    "4605": {
      "op": "JUMPDEST"
    },
    "4606": {
      "op": "SWAP4"
    },
    "4607": {
      "op": "DUP5"
    },
    "4608": {
      "op": "SHR"
    },
    "4609": {
      "op": "SWAP4"
    },
    "4610": {
      "op": "SWAP1"
    },
    "4611": {
      "op": "DUP1"
    },
    "4612": {
      "op": "MUL"
    },
    "4613": {
      "op": "SWAP1"
    },
    "4614": {
      "op": "PUSH2",
      "value": "0x11D4"
    },
    "4617": {
      "op": "JUMP"
    },
    "4618": {
      "op": "JUMPDEST"
    },
    "4619": {
      "op": "POP"
    },
    "4620": {
      "op": "SWAP3"
    },
    "4621": {
      "op": "POP"
    },
    "4622": {
      "op": "SWAP3"
    },
    "4623": {
      "op": "SWAP1"
    },
    "4624": {
      "op": "POP"
    },
    "4625": {
      "jump": "o",
      "op": "JUMP"
    },
    "4626": {
      "op": "JUMPDEST"
    },
    "4627": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4629": {
      "op": "DUP3"
    },
    "4630": {
      "op": "PUSH2",
      "value": "0x1221"
    },
    "4633": {
      "op": "JUMPI"
    },
    "4634": {
      "op": "POP"
    },
    "4635": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4637": {
      "op": "PUSH2",
      "value": "0x7D0"
    },
    "4640": {
      "op": "JUMP"
    },
    "4641": {
      "op": "JUMPDEST"
    },
    "4642": {
      "op": "DUP2"
    },
    "4643": {
      "op": "PUSH2",
      "value": "0x122E"
    },
    "4646": {
      "op": "JUMPI"
    },
    "4647": {
      "op": "POP"
    },
    "4648": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4650": {
      "op": "PUSH2",
      "value": "0x7D0"
    },
    "4653": {
      "op": "JUMP"
    },
    "4654": {
      "op": "JUMPDEST"
    },
    "4655": {
      "op": "DUP2"
    },
    "4656": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4658": {
      "op": "DUP2"
    },
    "4659": {
      "op": "EQ"
    },
    "4660": {
      "op": "PUSH2",
      "value": "0x1244"
    },
    "4663": {
      "op": "JUMPI"
    },
    "4664": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "4666": {
      "op": "DUP2"
    },
    "4667": {
      "op": "EQ"
    },
    "4668": {
      "op": "PUSH2",
      "value": "0x124E"
    },
    "4671": {
      "op": "JUMPI"
    },
    "4672": {
      "op": "PUSH2",
      "value": "0x126A"
    },
    "4675": {
      "op": "JUMP"
    },
    "4676": {
      "op": "JUMPDEST"
    },
    "4677": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4679": {
      "op": "SWAP2"
    },
    "4680": {
      "op": "POP"
    },
    "4681": {
      "op": "POP"
    },
    "4682": {
      "op": "PUSH2",
      "value": "0x7D0"
    },
    "4685": {
      "op": "JUMP"
    },
    "4686": {
      "op": "JUMPDEST"
    },
    "4687": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "4689": {
      "op": "DUP5"
    },
    "4690": {
      "op": "GT"
    },
    "4691": {
      "op": "ISZERO"
    },
    "4692": {
      "op": "PUSH2",
      "value": "0x125F"
    },
    "4695": {
      "op": "JUMPI"
    },
    "4696": {
      "op": "PUSH2",
      "value": "0x125F"
    },
    "4699": {
      "op": "PUSH2",
      "value": "0x1155"
    },
    "4702": {
      "jump": "i",
      "op": "JUMP"
    },
    "4703": {
      "op": "JUMPDEST"
    },
    "4704": {
      "op": "POP"
    },
    "4705": {
      "op": "POP"
    },
    "4706": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4708": {
      "op": "DUP3"
    },
    "4709": {
      "op": "SHL"
    },
    "4710": {
      "op": "PUSH2",
      "value": "0x7D0"
    },
    "4713": {
      "op": "JUMP"
    },
    "4714": {
      "op": "JUMPDEST"
    },
    "4715": {
      "op": "POP"
    },
    "4716": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4718": {
      "op": "DUP4"
    },
    "4719": {
      "op": "LT"
    },
    "4720": {
      "op": "PUSH2",
      "value": "0x133"
    },
    "4723": {
      "op": "DUP4"
    },
    "4724": {
      "op": "LT"
    },
    "4725": {
      "op": "AND"
    },
    "4726": {
      "op": "PUSH1",
      "value": "0x4E"
    },
    "4728": {
      "op": "DUP5"
    },
    "4729": {
      "op": "LT"
    },
    "4730": {
      "op": "PUSH1",
      "value": "0xB"
    },
    "4732": {
      "op": "DUP5"
    },
    "4733": {
      "op": "LT"
    },
    "4734": {
      "op": "AND"
    },
    "4735": {
      "op": "OR"
    },
    "4736": {
      "op": "ISZERO"
    },
    "4737": {
      "op": "PUSH2",
      "value": "0x128D"
    },
    "4740": {
      "op": "JUMPI"
    },
    "4741": {
      "op": "POP"
    },
    "4742": {
      "op": "DUP2"
    },
    "4743": {
      "op": "DUP2"
    },
    "4744": {
      "op": "EXP"
    },
    "4745": {
      "op": "PUSH2",
      "value": "0x7D0"
    },
    "4748": {
      "op": "JUMP"
    },
    "4749": {
      "op": "JUMPDEST"
    },
    "4750": {
      "op": "PUSH2",
      "value": "0x1297"
    },
    "4753": {
      "op": "DUP4"
    },
    "4754": {
      "op": "DUP4"
    },
    "4755": {
      "op": "PUSH2",
      "value": "0x11CF"
    },
    "4758": {
      "jump": "i",
      "op": "JUMP"
    },
    "4759": {
      "op": "JUMPDEST"
    },
    "4760": {
      "op": "DUP1"
    },
    "4761": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4763": {
      "op": "NOT"
    },
    "4764": {
      "op": "DIV"
    },
    "4765": {
      "op": "DUP3"
    },
    "4766": {
      "op": "GT"
    },
    "4767": {
      "op": "ISZERO"
    },
    "4768": {
      "op": "PUSH2",
      "value": "0x12AB"
    },
    "4771": {
      "op": "JUMPI"
    },
    "4772": {
      "op": "PUSH2",
      "value": "0x12AB"
    },
    "4775": {
      "op": "PUSH2",
      "value": "0x1155"
    },
    "4778": {
      "jump": "i",
      "op": "JUMP"
    },
    "4779": {
      "op": "JUMPDEST"
    },
    "4780": {
      "op": "MUL"
    },
    "4781": {
      "op": "SWAP4"
    },
    "4782": {
      "op": "SWAP3"
    },
    "4783": {
      "op": "POP"
    },
    "4784": {
      "op": "POP"
    },
    "4785": {
      "op": "POP"
    },
    "4786": {
      "jump": "o",
      "op": "JUMP"
    },
    "4787": {
      "op": "JUMPDEST"
    },
    "4788": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4790": {
      "op": "PUSH2",
      "value": "0x109C"
    },
    "4793": {
      "op": "DUP4"
    },
    "4794": {
      "op": "DUP4"
    },
    "4795": {
      "op": "PUSH2",
      "value": "0x1212"
    },
    "4798": {
      "jump": "i",
      "op": "JUMP"
    },
    "4799": {
      "op": "JUMPDEST"
    },
    "4800": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4802": {
      "op": "DUP2"
    },
    "4803": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4805": {
      "op": "NOT"
    },
    "4806": {
      "op": "DIV"
    },
    "4807": {
      "op": "DUP4"
    },
    "4808": {
      "op": "GT"
    },
    "4809": {
      "op": "DUP3"
    },
    "4810": {
      "op": "ISZERO"
    },
    "4811": {
      "op": "ISZERO"
    },
    "4812": {
      "op": "AND"
    },
    "4813": {
      "op": "ISZERO"
    },
    "4814": {
      "op": "PUSH2",
      "value": "0x12D9"
    },
    "4817": {
      "op": "JUMPI"
    },
    "4818": {
      "op": "PUSH2",
      "value": "0x12D9"
    },
    "4821": {
      "op": "PUSH2",
      "value": "0x1155"
    },
    "4824": {
      "jump": "i",
      "op": "JUMP"
    },
    "4825": {
      "op": "JUMPDEST"
    },
    "4826": {
      "op": "POP"
    },
    "4827": {
      "op": "MUL"
    },
    "4828": {
      "op": "SWAP1"
    },
    "4829": {
      "jump": "o",
      "op": "JUMP"
    },
    "4830": {
      "op": "JUMPDEST"
    },
    "4831": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4833": {
      "op": "DUP3"
    },
    "4834": {
      "op": "PUSH2",
      "value": "0x12FB"
    },
    "4837": {
      "op": "JUMPI"
    },
    "4838": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4843": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4845": {
      "op": "SHL"
    },
    "4846": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4848": {
      "op": "MSTORE"
    },
    "4849": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "4851": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4853": {
      "op": "MSTORE"
    },
    "4854": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4856": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4858": {
      "op": "REVERT"
    },
    "4859": {
      "op": "JUMPDEST"
    },
    "4860": {
      "op": "POP"
    },
    "4861": {
      "op": "DIV"
    },
    "4862": {
      "op": "SWAP1"
    },
    "4863": {
      "jump": "o",
      "op": "JUMP"
    },
    "4864": {
      "op": "JUMPDEST"
    },
    "4865": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4870": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4872": {
      "op": "SHL"
    },
    "4873": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4875": {
      "op": "MSTORE"
    },
    "4876": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "4878": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4880": {
      "op": "MSTORE"
    },
    "4881": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "4883": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4885": {
      "op": "REVERT"
    },
    "4886": {
      "op": "JUMPDEST"
    },
    "4887": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4889": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4891": {
      "op": "NOT"
    },
    "4892": {
      "op": "DUP3"
    },
    "4893": {
      "op": "EQ"
    },
    "4894": {
      "op": "ISZERO"
    },
    "4895": {
      "op": "PUSH2",
      "value": "0x132A"
    },
    "4898": {
      "op": "JUMPI"
    },
    "4899": {
      "op": "PUSH2",
      "value": "0x132A"
    },
    "4902": {
      "op": "PUSH2",
      "value": "0x1155"
    },
    "4905": {
      "jump": "i",
      "op": "JUMP"
    },
    "4906": {
      "op": "JUMPDEST"
    },
    "4907": {
      "op": "POP"
    },
    "4908": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4910": {
      "op": "ADD"
    },
    "4911": {
      "op": "SWAP1"
    },
    "4912": {
      "jump": "o",
      "op": "JUMP"
    },
    "4913": {
      "op": "JUMPDEST"
    },
    "4914": {
      "op": "DUP1"
    },
    "4915": {
      "op": "MLOAD"
    },
    "4916": {
      "op": "PUSH10",
      "value": "0xFFFFFFFFFFFFFFFFFFFF"
    },
    "4927": {
      "op": "DUP2"
    },
    "4928": {
      "op": "AND"
    },
    "4929": {
      "op": "DUP2"
    },
    "4930": {
      "op": "EQ"
    },
    "4931": {
      "op": "PUSH2",
      "value": "0x1050"
    },
    "4934": {
      "op": "JUMPI"
    },
    "4935": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4937": {
      "op": "DUP1"
    },
    "4938": {
      "op": "REVERT"
    },
    "4939": {
      "op": "JUMPDEST"
    },
    "4940": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4942": {
      "op": "DUP1"
    },
    "4943": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4945": {
      "op": "DUP1"
    },
    "4946": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4948": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4950": {
      "op": "DUP7"
    },
    "4951": {
      "op": "DUP9"
    },
    "4952": {
      "op": "SUB"
    },
    "4953": {
      "op": "SLT"
    },
    "4954": {
      "op": "ISZERO"
    },
    "4955": {
      "op": "PUSH2",
      "value": "0x1363"
    },
    "4958": {
      "op": "JUMPI"
    },
    "4959": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4961": {
      "op": "DUP1"
    },
    "4962": {
      "op": "REVERT"
    },
    "4963": {
      "op": "JUMPDEST"
    },
    "4964": {
      "op": "PUSH2",
      "value": "0x136C"
    },
    "4967": {
      "op": "DUP7"
    },
    "4968": {
      "op": "PUSH2",
      "value": "0x1331"
    },
    "4971": {
      "jump": "i",
      "op": "JUMP"
    },
    "4972": {
      "op": "JUMPDEST"
    },
    "4973": {
      "op": "SWAP5"
    },
    "4974": {
      "op": "POP"
    },
    "4975": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4977": {
      "op": "DUP7"
    },
    "4978": {
      "op": "ADD"
    },
    "4979": {
      "op": "MLOAD"
    },
    "4980": {
      "op": "SWAP4"
    },
    "4981": {
      "op": "POP"
    },
    "4982": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4984": {
      "op": "DUP7"
    },
    "4985": {
      "op": "ADD"
    },
    "4986": {
      "op": "MLOAD"
    },
    "4987": {
      "op": "SWAP3"
    },
    "4988": {
      "op": "POP"
    },
    "4989": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4991": {
      "op": "DUP7"
    },
    "4992": {
      "op": "ADD"
    },
    "4993": {
      "op": "MLOAD"
    },
    "4994": {
      "op": "SWAP2"
    },
    "4995": {
      "op": "POP"
    },
    "4996": {
      "op": "PUSH2",
      "value": "0x138F"
    },
    "4999": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "5001": {
      "op": "DUP8"
    },
    "5002": {
      "op": "ADD"
    },
    "5003": {
      "op": "PUSH2",
      "value": "0x1331"
    },
    "5006": {
      "jump": "i",
      "op": "JUMP"
    },
    "5007": {
      "op": "JUMPDEST"
    },
    "5008": {
      "op": "SWAP1"
    },
    "5009": {
      "op": "POP"
    },
    "5010": {
      "op": "SWAP3"
    },
    "5011": {
      "op": "SWAP6"
    },
    "5012": {
      "op": "POP"
    },
    "5013": {
      "op": "SWAP3"
    },
    "5014": {
      "op": "SWAP6"
    },
    "5015": {
      "op": "SWAP1"
    },
    "5016": {
      "op": "SWAP4"
    },
    "5017": {
      "op": "POP"
    },
    "5018": {
      "jump": "o",
      "op": "JUMP"
    },
    "5019": {
      "op": "JUMPDEST"
    },
    "5020": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5022": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5024": {
      "op": "DUP3"
    },
    "5025": {
      "op": "DUP5"
    },
    "5026": {
      "op": "SUB"
    },
    "5027": {
      "op": "SLT"
    },
    "5028": {
      "op": "ISZERO"
    },
    "5029": {
      "op": "PUSH2",
      "value": "0x13AD"
    },
    "5032": {
      "op": "JUMPI"
    },
    "5033": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5035": {
      "op": "DUP1"
    },
    "5036": {
      "op": "REVERT"
    },
    "5037": {
      "op": "JUMPDEST"
    },
    "5038": {
      "op": "DUP2"
    },
    "5039": {
      "op": "MLOAD"
    },
    "5040": {
      "op": "PUSH1",
      "value": "0xFF"
    },
    "5042": {
      "op": "DUP2"
    },
    "5043": {
      "op": "AND"
    },
    "5044": {
      "op": "DUP2"
    },
    "5045": {
      "op": "EQ"
    },
    "5046": {
      "op": "PUSH2",
      "value": "0x109C"
    },
    "5049": {
      "op": "JUMPI"
    },
    "5050": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5052": {
      "op": "DUP1"
    },
    "5053": {
      "op": "REVERT"
    }
  },
  "sha1": "d3290473f4e0ead1d7486f2650e066cbe4054733",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\"; \n\ncontract TokenFarm is Ownable {\n    mapping(address => mapping(address => uint256)) public stakingBalance;    //mapping token address -> staked address -> amount staked\n    mapping(address => uint256) public uniqueTokensStaked;\n    mapping(address => address) public tokenPriceFeedMapping;\n    address [] allowedTokens;\n    address [] emptyArray;\n    address [] public stakers;\n    address [] public newStakers;\n    IERC20 public simbaToken;\n\n    // stakeTokens - \n    // addAllowedTokens -\n    // unStakeTokens \n    // IssueRewardTokens  -\n    // getEthValue - \n    \n    constructor(address _simbaTokenAddress) {\n        simbaToken = IERC20(_simbaTokenAddress); //set default reward token\n    }\n\n    //MAIN FUNCTIONS\n    function stakeTokens(uint256 _amount, address _token) public {\n        //what tokens can they stake?\n        //how much can they stake?\n        require(_amount> 0,\"Amount must be more than zero\");\n        require(tokenIsAllowed(_token),\"Token is not allowed\");\n        //use transferFrom Function because we do not own the tokens. We also need the token abi from IERC20 interface\n        IERC20(_token).transferFrom(msg.sender, address(this), _amount);\n        //add to stakers\n        addUniqueTokensStaked(msg.sender, _token);\n        //add to stakingBalance\n        stakingBalance[_token][msg.sender] += _amount;\n\n        // This a staker's first token, add to staker's list\n        if(uniqueTokensStaked[msg.sender] == 1){\n            stakers.push(msg.sender);\n        }\n    }\n\n    function addAllowedToken(address _token) public onlyOwner{\n        //add token to allowedTokens\n        require(_token != address(0),\"Token must be a valid address\");\n        require(!tokenIsAllowed(_token),\"Token already added\");\n        allowedTokens.push(_token);\n    }\n\n    function issueTokens() public onlyOwner {\n        // reward all stakers based on amount staked\n        for(uint256 stakersIndex=0; stakersIndex<stakers.length; stakersIndex++ ){\n            address recipient = stakers[stakersIndex];\n            uint userTotalValue = getUserTotalValue(recipient);\n            //send them their token reward\n            //get their eqivalent value in simbaToken\n            simbaToken.transfer(recipient, userTotalValue);\n        }\n    }\n\n    function unstakeTokens(address _token) public  {\n        //check if token is allowed\n        require(tokenIsAllowed(_token),\"Token is not allowed\");\n        //get amount staked\n        uint256 amountStaked = stakingBalance[_token][msg.sender];\n        //check if token is staked\n        require(amountStaked > 0,\"Token is not staked\");\n        //unstake tokens\n        IERC20(_token).transfer(msg.sender, amountStaked);\n        //remove from stakingBalance\n        stakingBalance[_token][msg.sender] = 0;\n        //remove from uniqueTokensStaked\n        uniqueTokensStaked[msg.sender] -= 1;\n        //remove from stakers\n        removeStaker(msg.sender);\n    }\n\n    function fetchAllowedTokens() public view returns (address[] memory){\n        return (allowedTokens);\n    }\n    \n\n    // HELPER FUNCTION\n\n    function addUniqueTokensStaked(address _user, address _token) internal{\n        if(stakingBalance[_token][_user] <= 0){\n            uniqueTokensStaked[_user] = uniqueTokensStaked[_user] + 1;\n        }\n    }\n\n    function removeStaker(address _user) internal {\n        //remove from stakers if they have no tokens staked\n        for(uint256 tokenIndex=0; tokenIndex<allowedTokens.length; tokenIndex++){\n            if(stakingBalance[allowedTokens[tokenIndex]][_user] > 0){\n                return;\n            }\n        }\n\n        //if function has not returned, this means staker has no staked tokens, loop through stakers and remove _user\n        for(uint256 stakerIndex=0; stakerIndex<stakers.length; stakerIndex++){\n            if(stakers[stakerIndex] != _user){\n                newStakers.push(stakers[stakerIndex]);\n            }\n        }\n        stakers = newStakers;\n        // empty newStakers\n        newStakers = emptyArray;\n    }\n\n    function tokenIsAllowed(address _token) public returns(bool){\n        for (uint256 tokenIndex=0; tokenIndex<allowedTokens.length; tokenIndex++){\n            if(allowedTokens[tokenIndex] == _token){\n                return true;\n            }\n        }\n        return false;\n    }\n\n    function getUserTotalValue(address _user) public view returns(uint256){\n        uint256 totalValue = 0;\n        require(_user != address(0),\"User must be a valid address\");\n        require(uniqueTokensStaked[_user] > 0,\"User has no tokens staked\");\n        for(uint256 tokenIndex=0; tokenIndex<allowedTokens.length; tokenIndex++){\n            totalValue += getUserSingleTokenUsdValue(_user, allowedTokens[tokenIndex]);\n        }\n        return totalValue;\n    }\n\n    function getUserSingleTokenUsdValue(address _user, address _token)\n    public\n    view returns (uint256){\n        // Get amount in dollars user has staked\n        if(uniqueTokensStaked[_user] <= 0){\n            return 0;\n        }\n        //get token price in dollars X stakingBalance[_token][user]\n        //decimals in the number of extra zeros this comes with. In this case. So we have to remove it to get the actual value\n    ( uint tokenPrice, uint decimals) = getTokenPrice(_token);\n    return (tokenPrice * stakingBalance[_token][_user]/10**decimals);\n    }\n\n    function getTokenPrice(address _token) public view returns(uint256,uint256) {\n        //price feed address\n        address priceFeedAddress = tokenPriceFeedMapping[_token];\n        AggregatorV3Interface priceFeed = AggregatorV3Interface(priceFeedAddress);\n         (,int price,,,) =  priceFeed.latestRoundData();\n         uint256 decimals = uint256(priceFeed.decimals());\n        return (uint256(price),decimals); \n    }\n\n    function setPriceFeedContract(address _token, address _priceFeed) public onlyOwner{\n        require(_token != address(0),\"Token must be a valid address\");\n        require(_priceFeed != address(0),\"Price feed must be a valid address\");\n        tokenPriceFeedMapping[_token] = _priceFeed;\n    }   \n}",
  "sourceMap": "245:6059:4:-:0;;;817:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;867:23:0;665:10:2;867:9:0;:23::i;:::-;:10:4;:39;;-1:-1:-1;;;;;;867:39:4;-1:-1:-1;;;;;867:39:4;;;;;;;;;;245:6059;;2041:169:0;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2086:124;2041:169;:::o;14:290:5:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:5;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:5:o;:::-;245:6059:4;;;;;;",
  "sourcePath": "contracts/TokenFarm.sol",
  "type": "contract"
}